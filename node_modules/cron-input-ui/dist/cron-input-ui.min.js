!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("cron-input-ui",[],e):"object"==typeof exports?exports["cron-input-ui"]=e():n["cron-input-ui"]=e()}(globalThis,(()=>(()=>{var __webpack_modules__={"./src/i18n/locale.js":
/*!****************************!*\
  !*** ./src/i18n/locale.js ***!
  \****************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cronstrueLocales\": () => (/* binding */ cronstrueLocales),\n/* harmony export */   \"lang\": () => (/* reexport safe */ _locales_en__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _locales_en__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locales/en */ \"./src/i18n/locales/en.js\");\n\nvar cronstrueLocales = ['af', 'be', 'ca', 'cs', 'da', 'de', 'en', 'es', 'fa', 'fi', 'fr', 'he', 'hu', 'id', 'it', 'ja', 'ko', 'nb', 'nl', 'pl', 'pt_BR', 'pt_PT', 'ro', 'ru', 'sk', 'sl', 'sv', 'sw', 'tr', 'uk', 'zh_CN', 'zh_TW'];\n\n\n//# sourceURL=webpack://cron-input-ui/./src/i18n/locale.js?")},"./src/i18n/locales/en.js":
/*!********************************!*\
  !*** ./src/i18n/locales/en.js ***!
  \********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar inputLang = {\n  code: 'en',\n  frequencyChoice: 'Frequency',\n  every: 'Every / At',\n  start: 'Starting',\n  rangeChoice: 'Range',\n  min: 'Min',\n  max: 'Max',\n  choice: 'Choice',\n  minutes: 'Minutes',\n  hours: 'Hours',\n  daysOfMonth: 'Days of Month',\n  month: 'Month',\n  daysOfWeek: 'Days of week',\n  invalidCron: 'Cron expression is invalid, try with (* * * * *)',\n  missingCron: 'Cron expression is missing, this field is required',\n  inputPlaceholder: 'Cron expression'\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (inputLang);\n\n//# sourceURL=webpack://cron-input-ui/./src/i18n/locales/en.js?")},"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _nodes_CronFields__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodes/CronFields */ "./src/nodes/CronFields.js");\n/* harmony import */ var _nodes_CronExpressionInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodes/CronExpressionInput */ "./src/nodes/CronExpressionInput.js");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.css */ "./src/index.css");\n\n\n\ncustomElements.define(\'cron-fields\', _nodes_CronFields__WEBPACK_IMPORTED_MODULE_0__.CronFields);\ncustomElements.define(\'cron-input-ui\', _nodes_CronExpressionInput__WEBPACK_IMPORTED_MODULE_1__.CronExpressionInput);\n\n//# sourceURL=webpack://cron-input-ui/./src/index.js?')},"./src/nodes/CronComponent.js":
/*!************************************!*\
  !*** ./src/nodes/CronComponent.js ***!
  \************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "CronComponent": () => (/* binding */ CronComponent)\n/* harmony export */ });\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar CronComponent = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(CronComponent, _HTMLElement);\n\n  var _super = _createSuper(CronComponent);\n\n  function CronComponent() {\n    _classCallCheck(this, CronComponent);\n\n    return _super.call(this);\n  }\n\n  _createClass(CronComponent, [{\n    key: "Init",\n    value: function Init(state) {\n      var _this = this;\n\n      this.state = state;\n\n      if (this.state.props != undefined) {\n        this.state.props.forEach(function (p) {\n          _this.state.self[p] = state.self.getAttribute(p);\n        });\n      }\n\n      if (this.state.css) {\n        var style = document.createElement(\'style\');\n        style.textContent = this.state.css;\n        document.head.appendChild(style);\n      }\n    }\n  }, {\n    key: "Create",\n    value: function Create(self, template) {\n      self.innerHTML = \'\';\n      var div = document.createElement(\'div\');\n      div.innerHTML = template;\n      self.appendChild(div);\n    }\n  }, {\n    key: "getElements",\n    value: function getElements(className) {\n      return this.state.self.querySelectorAll(className);\n    }\n  }, {\n    key: "getElement",\n    value: function getElement(className) {\n      return this.state.self.querySelector(className);\n    }\n  }, {\n    key: "getNumber",\n    value: function getNumber(n) {\n      return n.toString().padStart(2, \'0\');\n    }\n  }, {\n    key: "getHasZero",\n    value: function getHasZero() {\n      return this.hasZero ? 0 : 1;\n    }\n  }, {\n    key: "addEvent",\n    value: function addEvent(className, event, handle) {\n      this.getElements(className).forEach(function (element) {\n        element.addEventListener(event, function (e) {\n          return handle(e.target);\n        });\n      });\n    }\n  }, {\n    key: "increaseBrightness",\n    value: function increaseBrightness(hex, percent) {\n      hex = hex.replace(/^\\s*#|\\s*$/g, \'\');\n      if (hex.length == 3) hex = hex.replace(/(.)/g, \'$1$1\');\n      var r = parseInt(hex.substr(0, 2), 16);\n      var g = parseInt(hex.substr(2, 2), 16);\n      var b = parseInt(hex.substr(4, 2), 16);\n      return \'#\' + (0 | (1 << 8) + r + (256 - r) * percent / 100).toString(16).substr(1) + (0 | (1 << 8) + g + (256 - g) * percent / 100).toString(16).substr(1) + (0 | (1 << 8) + b + (256 - b) * percent / 100).toString(16).substr(1);\n    }\n  }]);\n\n  return CronComponent;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\n//# sourceURL=webpack://cron-input-ui/./src/nodes/CronComponent.js?')},"./src/nodes/CronExpressionInput.js":
/*!******************************************!*\
  !*** ./src/nodes/CronExpressionInput.js ***!
  \******************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CronExpressionInput\": () => (/* binding */ CronExpressionInput)\n/* harmony export */ });\n/* harmony import */ var _i18n_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../i18n/locale */ \"./src/i18n/locale.js\");\n/* harmony import */ var _CronComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CronComponent */ \"./src/nodes/CronComponent.js\");\n/* harmony import */ var _templates_CssTemplate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../templates/CssTemplate */ \"./src/templates/CssTemplate.js\");\n/* harmony import */ var _templates_CronExpressionInputTemplate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../templates/CronExpressionInputTemplate */ \"./src/templates/CronExpressionInputTemplate.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar inputLangInternal = {};\n\nif (typeof inputLang == 'undefined') inputLangInternal = _i18n_locale__WEBPACK_IMPORTED_MODULE_0__.lang;else inputLangInternal = inputLang[\"default\"];\n\n\n\n\nvar cron = __webpack_require__(/*! cron-validator */ \"./node_modules/cron-validator/lib/index.js\");\n\nvar cronstrue = __webpack_require__(/*! cronstrue/i18n */ \"./node_modules/cronstrue/i18n.js\");\n\nvar CronExpressionInput = /*#__PURE__*/function (_CronComponent) {\n  _inherits(CronExpressionInput, _CronComponent);\n\n  var _super = _createSuper(CronExpressionInput);\n\n  function CronExpressionInput() {\n    _classCallCheck(this, CronExpressionInput);\n\n    return _super.call(this);\n  }\n\n  _createClass(CronExpressionInput, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.name = this.getAttribute('name') || 'cron';\n      this.width = this.getAttribute('width') || '234px';\n      this.height = this.getAttribute('height') || '34px';\n      this.value = this.getAttribute('value') || '* * * * *';\n      this.required = this.getAttribute('required') !== null;\n      this.hotValidate = this.getAttribute('hotValidate') !== null;\n      this.color = this.getAttribute('color') || '#d58512';\n      this.colorMain = '#' + this.color.replace('#', '');\n      this.colorSecond = this.increaseBrightness(this.colorMain, 30);\n      this.id = this.name + '_' + Math.random().toString(16).substr(2); // Force attribute without hashtag for specific CSS\n\n      this.setAttribute('id', this.id);\n      var cssTemplate = (0,_templates_CssTemplate__WEBPACK_IMPORTED_MODULE_2__.CssTemplateGenerator)(this);\n      this.Init({\n        self: this,\n        css: cssTemplate\n      });\n      var template = (0,_templates_CronExpressionInputTemplate__WEBPACK_IMPORTED_MODULE_3__.CronExpressionInputTemplateGenerator)(this, inputLangInternal);\n      var self = this;\n      this.Create(self, template);\n      this.setValue(this.value);\n      var input1 = this.getElement('.cronInsideInput');\n      input1.addEventListener('keydown', function (e) {\n        return self.validateLongitude(e);\n      });\n      input1.addEventListener('keypress', function (e) {\n        return self.validateLongitude(e);\n      });\n      input1.addEventListener('keyup', function (e) {\n        return self.validateLongitude(e);\n      });\n      this.addEvent('.cronButtonUI', 'click', function () {\n        self.querySelectorAll('form').forEach(function (element) {\n          return element.reset();\n        });\n\n        if (self.getElementsByClassName('cronInsideInput').length != 0) {\n          self.currentValue = self.getElementsByClassName('cronInsideInput')[0].value;\n          if (self.currentValue.split(' ').length == 5) self.getCron(self.currentValue);\n        }\n\n        self.modalToggle();\n      });\n      this.addEvent('.cronClose', 'click', function () {\n        self.setValue(self.currentValue);\n        self.validator(self);\n        self.modalToggle();\n      });\n      this.addEvent('.cronSave', 'click', function () {\n        self.validator(self);\n        self.modalToggle();\n      });\n      this.addEventListener('keydown', function (e) {\n        if (e.key === 'Escape') {\n          self.setValue(self.currentValue);\n          self.validator(self);\n          self.modalToggle();\n        } else if (e.key === 'Enter') {\n          self.validator(self);\n          self.modalToggle();\n        }\n      });\n      this.addEvent('li > a', 'click', function (scope) {\n        var index = 0;\n        self.getElements('li > a').forEach(function (elem, i) {\n          elem.parentNode.setAttribute('class', 'nav-link');\n\n          if (elem == scope) {\n            index = i;\n          }\n        });\n        scope.parentNode.setAttribute('class', 'nav-link active in');\n        var elements = self.getElements('cron-fields');\n        elements.forEach(function (elem) {\n          return elem.parentNode.setAttribute('class', 'tab-pane fade');\n        });\n        elements[index].parentNode.setAttribute('class', 'tab-pane active in');\n      });\n      var formParent = self.querySelector('.cronInsideInput').closest('form');\n\n      if (formParent != null) {\n        formParent.closest('form').addEventListener('submit', function (e) {\n          if (!self.validator(self)) e.preventDefault();\n        });\n      }\n\n      if (self.hotValidate) {\n        this.addEvent('.cronInsideInput', 'input', function (e) {\n          return self.validator(self);\n        });\n      }\n\n      this.addEvent('cron-fields', 'change', function (e) {\n        var value = true;\n        var node = e.parentNode;\n\n        while (value) {\n          node = node.parentNode;\n          if (node.nodeName == 'CRON-FIELDS') value = false;\n        }\n\n        var input2 = self.getElement('.cronInsideInput');\n        self.setValue(self.generateCron(parseInt(node.getAttribute('pos')), input2['value'], node.value));\n\n        if (self.hotValidate) {\n          self.validator(self);\n        }\n      });\n      this.getElements('.propagationClass').forEach(function (element) {\n        return element.addEventListener('input', function (e) {\n          return e.stopPropagation();\n        });\n      });\n      self.validator(self);\n    }\n  }, {\n    key: \"validator\",\n    value: function validator(self) {\n      var insideInput = self.querySelector('.cronInsideInput');\n      var error = self.getElement('.cronExpressionError');\n      var missing = self.getElement('.cronExpressionMissing');\n\n      if (insideInput.value.length != 0 && !cron.isValidCron(insideInput.value, {\n        allowSevenAsSunday: true\n      })) {\n        error.classList.replace('hidden', 'show');\n        missing.classList.replace('show', 'hidden');\n        return false;\n      } else if (insideInput.value.length == 0 && self.required) {\n        error.classList.replace('show', 'hidden');\n        missing.classList.replace('hidden', 'show');\n        return false;\n      }\n\n      error.classList.replace('show', 'hidden');\n      missing.classList.replace('show', 'hidden');\n      self.setValue(insideInput['value']);\n      return true;\n    }\n  }, {\n    key: \"getTypeCron\",\n    value: function getTypeCron(expression) {\n      if (expression.includes('/') || expression.includes('*')) return 1;else if (expression.includes('-')) return 2;\n      return 3;\n    }\n  }, {\n    key: \"getTypeFrequency\",\n    value: function getTypeFrequency(expression) {\n      var separator = '/';\n      var freq = {\n        every: '*',\n        start: '*'\n      };\n      if (!expression.includes(separator) && expression != '*') freq.every = expression;else if (expression.includes('*') && expression.includes(separator)) freq.start = expression.split(separator)[1];else if (expression.includes(separator)) {\n        var c = expression.split(separator);\n        freq.every = c[0];\n        freq.start = c[1];\n      }\n      return freq;\n    }\n  }, {\n    key: \"getTypeRange\",\n    value: function getTypeRange(expression) {\n      var separator = '-';\n      var range = {\n        min: '0',\n        max: '0'\n      };\n\n      if (expression.includes(separator)) {\n        var c = expression.split(separator);\n        range.min = c[0];\n        range.max = c[1];\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getTypeChoice\",\n    value: function getTypeChoice(expression) {\n      return expression.split(',');\n    }\n  }, {\n    key: \"getCron\",\n    value: function getCron(cronExpression) {\n      var forms = this.querySelectorAll('form');\n      var crons = cronExpression.split(' ');\n      this.setCronInTab(forms[0], crons[0], this.getTypeCron(crons[0]));\n      this.setCronInTab(forms[1], crons[1], this.getTypeCron(crons[1]));\n      this.setCronInTab(forms[2], crons[2], this.getTypeCron(crons[2]), 1);\n      this.setCronInTab(forms[3], crons[3], this.getTypeCron(crons[3]), 1);\n      this.setCronInTab(forms[4], crons[4], this.getTypeCron(crons[4]));\n    }\n  }, {\n    key: \"setCronInTab\",\n    value: function setCronInTab(form, value, type) {\n      var decrement = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var choices = form.querySelectorAll('input[name=choice]');\n      choices.forEach(function (choice) {\n        return choice.removeAttribute('checked');\n      });\n      choices[type - 1].checked = true;\n\n      switch (type) {\n        case 1:\n          var freq = this.getTypeFrequency(value);\n          var decrementFreq = 1 - decrement;\n          form.querySelector('*[match=every]').selectedIndex = parseInt(freq['every']) + decrementFreq;\n          form.querySelector('*[match=start]').selectedIndex = parseInt(freq['start']) + decrementFreq;\n          break;\n\n        case 2:\n          var range = this.getTypeRange(value);\n          form.querySelector('*[match=rangeMin]').selectedIndex = parseInt(range['min']) - decrement;\n          form.querySelector('*[match=rangeMax]').selectedIndex = parseInt(range['max']) - decrement;\n          break;\n\n        case 3:\n          var cs = this.getTypeChoice(value);\n          form.querySelectorAll('*[match=specific] input').forEach(function (element, index) {\n            if (cs.includes((index + decrement).toString())) element.checked = true;\n          });\n          break;\n      }\n    }\n  }, {\n    key: \"validateLongitude\",\n    value: function validateLongitude(e) {\n      var values = e.target.value.trim().split(' ');\n      if (values.length > 5) e.target.value = values.slice(0, 5).join(' ');\n      this.sendEvent();\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var defaultArray = ['*', '*', '*', '*', '*'];\n      if (value == undefined) return defaultArray.join(' ');else if (value.length > 0) {\n        var array = value.trim().split(' ');\n\n        for (var i = 0; i < 5; i++) {\n          if (array[i] != undefined) defaultArray[i] = array[i];\n        }\n\n        value = defaultArray.join(' ');\n      }\n      var input3 = this.getElement('.cronInsideInput');\n      input3.value = value;\n\n      if (_i18n_locale__WEBPACK_IMPORTED_MODULE_0__.cronstrueLocales.includes(inputLangInternal.code)) {\n        var cronstrueLang = inputLangInternal.code;\n      } else {\n        var cronstrueLang = 'en';\n      }\n\n      this.querySelector('.inputCronMsg').value = cronstrue.toString(value, {\n        locale: cronstrueLang\n      });\n      this.sendEvent();\n    }\n  }, {\n    key: \"modalToggle\",\n    value: function modalToggle() {\n      this.getElement('.modal').classList.toggle('show');\n    }\n  }, {\n    key: \"generateCron\",\n    value: function generateCron(pos, values, value) {\n      var val = values.split(' ');\n      val[pos] = value;\n      return val.join(' ');\n    }\n  }, {\n    key: \"sendEvent\",\n    value: function sendEvent() {\n      var input4 = this.getElement('.cronInsideInput');\n      var event = new CustomEvent('input', {\n        detail: {\n          value: input4.value\n        },\n        bubbles: true,\n        cancelable: true\n      });\n      this.dispatchEvent(event);\n    }\n  }]);\n\n  return CronExpressionInput;\n}(_CronComponent__WEBPACK_IMPORTED_MODULE_1__.CronComponent);\n\n//# sourceURL=webpack://cron-input-ui/./src/nodes/CronExpressionInput.js?")},"./src/nodes/CronFields.js":
/*!*********************************!*\
  !*** ./src/nodes/CronFields.js ***!
  \*********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CronFields\": () => (/* binding */ CronFields)\n/* harmony export */ });\n/* harmony import */ var _i18n_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../i18n/locale */ \"./src/i18n/locale.js\");\n/* harmony import */ var _CronComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CronComponent */ \"./src/nodes/CronComponent.js\");\n/* harmony import */ var _templates_CronFieldTemplate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../templates/CronFieldTemplate */ \"./src/templates/CronFieldTemplate.js\");\n/* harmony import */ var _templates_SpecificOptionTemplate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../templates/SpecificOptionTemplate */ \"./src/templates/SpecificOptionTemplate.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar inputLangInternal = {};\n\nif (typeof inputLang == 'undefined') inputLangInternal = _i18n_locale__WEBPACK_IMPORTED_MODULE_0__.lang;else inputLangInternal = inputLang[\"default\"];\n\n\n\nvar CronFields = /*#__PURE__*/function (_CronComponent) {\n  _inherits(CronFields, _CronComponent);\n\n  var _super = _createSuper(CronFields);\n\n  function CronFields() {\n    _classCallCheck(this, CronFields);\n\n    return _super.call(this);\n  }\n\n  _createClass(CronFields, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.Init({\n        self: this,\n        props: ['input', 'hasZero', 'every', 'colorMain', 'colorSecond']\n      });\n      var template = (0,_templates_CronFieldTemplate__WEBPACK_IMPORTED_MODULE_2__.CronFieldTemplateGenerator)(inputLangInternal);\n      this.value = '*';\n      this.Create(this, template);\n      this.Mount();\n    }\n  }, {\n    key: \"Mount\",\n    value: function Mount() {\n      this.addSelectOptions('every');\n      this.addSelectOptions('start');\n      this.addSelectOptions('rangeMin');\n      this.addSelectOptions('rangeMax');\n      this.addSpecificOptions('specific');\n      this.eventListen('select');\n      this.eventListen('input');\n    }\n  }, {\n    key: \"addSelectOptions\",\n    value: function addSelectOptions(attr) {\n      var match = this.getElement('*[match=' + attr + ']');\n\n      for (var i = this.getHasZero(); i <= this['every']; i++) {\n        var option = document.createElement('option');\n        option.innerText = this.getNumber(i);\n        option.value = i;\n        match.appendChild(option);\n      }\n    }\n  }, {\n    key: \"addSpecificOptions\",\n    value: function addSpecificOptions(attr) {\n      var match = this.getElement('*[match=' + attr + ']');\n\n      for (var i = this.getHasZero(); i <= this['every']; i++) {\n        var div = document.createElement('div');\n        div.innerHTML = (0,_templates_SpecificOptionTemplate__WEBPACK_IMPORTED_MODULE_3__.SpecificOptionTemplateGenerator)(this.getNumber(i), i);\n        div.style = 'width: 55px !important;';\n        match.appendChild(div);\n      }\n    }\n  }, {\n    key: \"makeCron\",\n    value: function makeCron(choice, input) {\n      var expression = '*';\n\n      if (choice == 1) {\n        if (input.start == '*') expression = \"\".concat(input.every);else expression = \"\".concat(input.start, \"/\").concat(input.every);\n      } else if (choice == 2 && !(input.rangeMin == '*' || input.rangeMax == '*')) {\n        var min = parseInt(input.rangeMin);\n        var max = parseInt(input.rangeMax);\n        if (min < max) expression = \"\".concat(input.rangeMin, \"-\").concat(input.rangeMax);\n      } else if (choice == 3 && input.specific.length != 0) {\n        expression = '';\n        input.specific.forEach(function (m) {\n          expression += m + ',';\n        });\n        expression = expression.slice(0, expression.length - 1);\n      }\n\n      this.value = expression;\n    }\n  }, {\n    key: \"eventListen\",\n    value: function eventListen(attr) {\n      var self = this;\n      this.getElements(attr).forEach(function (element) {\n        element.addEventListener('change', function (e) {\n          var choice = self.getElement('*[match=choice]:checked').value;\n          var every = self.getElement('*[match=every]').value;\n          var start = self.getElement('*[match=start]').value;\n          var rangeMin = self.getElement('*[match=rangeMin]').value;\n          var rangeMax = self.getElement('*[match=rangeMax]').value;\n          var specific = Array.prototype.map.call(self.getElements('*[match=specific] input:checked'), function (input) {\n            return input.value;\n          });\n          self.makeCron(choice, {\n            every: every,\n            start: start,\n            rangeMin: rangeMin,\n            rangeMax: rangeMax,\n            specific: specific\n          });\n        });\n      });\n    }\n  }]);\n\n  return CronFields;\n}(_CronComponent__WEBPACK_IMPORTED_MODULE_1__.CronComponent);\n\n//# sourceURL=webpack://cron-input-ui/./src/nodes/CronFields.js?")},"./src/templates/CronExpressionInputTemplate.js":
/*!******************************************************!*\
  !*** ./src/templates/CronExpressionInputTemplate.js ***!
  \******************************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "CronExpressionInputTemplateGenerator": () => (/* binding */ CronExpressionInputTemplateGenerator)\n/* harmony export */ });\nfunction CronExpressionInputTemplateGenerator(obj, objLang) {\n  return "\\n<div class=\\"cronInput\\" style=\\"display: flex; width: ".concat(obj.width, "; height: ").concat(obj.height, ";\\">\\n    <input class=\\"cronInsideInput\\" type=\\"text\\" class=\\"form-control\\" placeholder=\\"").concat(objLang.inputPlaceholder, "\\" name=\\"").concat(obj.name, "\\">\\n    <button type=\\"button\\" class=\\"cronButtonUI btn btn-custom\\" style=\\"font-size: 114%;\\">\\n        <svg width=\\"1em\\" height=\\"1em\\" viewBox=\\"0 0 16 16\\" class=\\"bi bi-pencil-square\\" fill=\\"white\\">\\n            <path d=\\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\\" />\\n            <path fill-rule=\\"evenodd\\" d=\\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\\" />\\n        </svg>\\n    </button>\\n</div>\\n<small class=\\"cronExpressionError hidden\\" style=\\"color: red; margin-top: 5px; margin-bottom: 5px;\\">").concat(objLang.invalidCron, "</small>\\n<small class=\\"cronExpressionMissing hidden\\" style=\\"color: red; margin-top: 5px; margin-bottom: 5px;\\">").concat(objLang.missingCron, "</small>\\n<div class=\\"modal\\" tabindex=\\"-1\\">\\n    <div class=\\"modal-dialog\\" style=\\"width: 900px;\\">\\n        <div class=\\"modal-content\\" style=\\"height: 500px\\">\\n            <div class=\\"modal-header\\" style=\\"height: 0px; padding-bottom: 30px;\\">\\n                <span class=\\"close2 cronClose\\">\\n                    <svg width=\\"1em\\" height=\\"1em\\" viewBox=\\"0 0 16 16\\" class=\\"bi bi-x-circle\\" fill=\\"").concat(obj.colorMain, "\\" style=\\"font-size: 21px;\\">\\n                        <path fill-rule=\\"evenodd\\" d=\\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\\" />\\n                        <path fill-rule=\\"evenodd\\" d=\\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\\" />\\n                    </svg>\\n                </span>\\n                <span class=\\"close2 cronSave\\" style=\\"margin-right: 10px;\\">\\n                    <svg width=\\"1em\\" height=\\"1em\\" viewBox=\\"0 0 16 16\\" class=\\"bi bi-check-circle\\" fill=\\"").concat(obj.colorMain, "\\" style=\\" font-size: 21px;\\">\\n                        <path fill-rule=\\"evenodd\\" d=\\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\\" />\\n                        <path fill-rule=\\"evenodd\\" d=\\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\\" />\\n                    </svg>\\n                </span>\\n            </div>\\n            <div class=\\"modal-body\\" style=\\"padding-top: 0px;\\">\\n                <ul class=\\"nav nav-tabs\\" style=\\"margin-top: 0px;\\">\\n                    <li class=\\"nav-item active in\\"><a class=\\"nav-link\\">").concat(objLang.minutes, "</a></li>\\n                    <li class=\\"nav-item\\"><a class=\\"nav-link\\">").concat(objLang.hours, "</a></li>\\n                    <li class=\\"nav-item\\"><a class=\\"nav-link\\">").concat(objLang.daysOfMonth, "</a></li>\\n                    <li class=\\"nav-item\\"><a class=\\"nav-link\\">").concat(objLang.month, "</a></li>\\n                    <li class=\\"nav-item\\"><a class=\\"nav-link\\">").concat(objLang.daysOfWeek, "</a></li>\\n                </ul>\\n                <input class=\\"inputCronMsg form-control\\" style=\\"width: 100%; margin-top: 10px;\\" disabled />\\n                <div class=\\"tab-content\\" style=\\"margin-top: 8px;\\">\\n                    <div class=\\"tab-pane active in\\">\\n                        <cron-fields pos=\\"0\\" input=\\"minute\\" hasZero=\\"true\\" every=\\"59\\" colorMain=\\"").concat(obj.colorMain, "\\" colorSecond=\\"").concat(obj.colorSecond, "\\" />\\n                    </div>\\n                    <div class=\\"tab-pane fade\\">\\n                        <cron-fields pos=\\"1\\" input=\\"hour\\" hasZero=\\"true\\" every=\\"23\\" colorMain=\\"").concat(obj.colorMain, "\\" colorSecond=\\"").concat(obj.colorSecond, "\\" />\\n                    </div>\\n                    <div class=\\"tab-pane fade\\">\\n                        <cron-fields pos=\\"2\\" input=\\"daysOfMonth\\" every=\\"31\\" colorMain=\\"").concat(obj.colorMain, "\\" colorSecond=\\"").concat(obj.colorSecond, "\\" />\\n                    </div>\\n                    <div class=\\"tab-pane fade\\">\\n                        <cron-fields pos=\\"3\\" input=\\"month\\" every=\\"12\\" colorMain=\\"").concat(obj.colorMain, "\\" colorSecond=\\"").concat(obj.colorSecond, "\\" />\\n                    </div>\\n                    <div class=\\"tab-pane fade\\">\\n                        <cron-fields pos=\\"4\\" input=\\"dayOfWeek\\" hasZero=\\"true\\" every=\\"7\\" colorMain=\\"").concat(obj.colorMain, "\\" colorSecond=\\"").concat(obj.colorSecond, "\\" />\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n    ");\n}\n\n//# sourceURL=webpack://cron-input-ui/./src/templates/CronExpressionInputTemplate.js?')},"./src/templates/CronFieldTemplate.js":
/*!********************************************!*\
  !*** ./src/templates/CronFieldTemplate.js ***!
  \********************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "CronFieldTemplateGenerator": () => (/* binding */ CronFieldTemplateGenerator)\n/* harmony export */ });\nfunction CronFieldTemplateGenerator(objLang) {\n  return "\\n<form>\\n    <div style=\\"display: flex; height: 138px;\\">\\n        <div class=\\"panel panel-default\\" style=\\"margin-right: 2.5px; width: 50%; height: 132px;\\">\\n            <div class=\\"panel-heading\\">\\n                <div style=\\"display: flex;\\">\\n                    <input class=\\"propagationClass form-check-input\\" type=\\"radio\\" name=\\"choice\\" value=\\"1\\" match=\\"choice\\" checked>\\n                    <span style=\\"margin-left: 10px;\\">".concat(objLang.frequencyChoice, "</span>\\n                </div>\\n            </div>\\n            <div class=\\"panel-body\\" style=\\"display: flex;\\">\\n                <div class=\\"propagationClass form-group\\" style=\\"margin-right: 5px; width: 50%;\\">\\n                    <label for=\\"everySelect\\">").concat(objLang.every, "</label>\\n                    <select match=\\"every\\" class=\\"form-control\\" style=\\"width: 100%;\\">\\n                        <option>*</option>\\n                    </select>\\n                </div>\\n                <div class=\\"form-group\\" style=\\"margin-left: 5px; width: 50%;\\">\\n                    <label for=\\"startSelect\\">").concat(objLang.start, "</label>\\n                    <select match=\\"start\\" class=\\"propagationClass form-control\\" style=\\"width: 100%;\\">\\n                        <option>*</option>\\n                    </select>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\"panel panel-default\\" style=\\"margin-left: 2.5px; width: 50%; height: 132px;\\">\\n            <div class=\\"panel-heading\\">\\n                <div style=\\"display: flex;\\">\\n                    <input class=\\"propagationClass form-check-input\\" type=\\"radio\\" name=\\"choice\\" value=\\"2\\" match=\\"choice\\">\\n                    <span style=\\"margin-left: 10px;\\">").concat(objLang.rangeChoice, "</span>\\n                </div>\\n            </div>\\n            <div class=\\"panel-body\\">\\n                <div class=\\"form-group\\">\\n                    <div style=\\"display: flex;\\">\\n                        <div style=\\"width: 50%; margin-right: 5px;\\">\\n                            <label class=\\"form-check-label\\" for=\\"exampleRadios1\\">").concat(objLang.min, "</label>\\n                            <select match=\\"rangeMin\\" class=\\"propagationClass form-control\\" style=\\"width: 100%;\\">\\n                            </select>\\n                        </div>\\n                        <div style=\\"width: 50%; margin-right: 5px;\\">\\n                            <label class=\\"form-check-label\\" for=\\"exampleRadios1\\">").concat(objLang.max, "</label>\\n                            <select match=\\"rangeMax\\" class=\\"propagationClass form-control\\" style=\\"width: 100%;\\">\\n                            </select>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\"panel panel-default\\" style=\\"margin: 0px; padding: 0px; height: 214px;\\">\\n        <div class=\\"panel-heading\\">\\n            <div style=\\"display: flex;\\">\\n                <input class=\\"propagationClass form-check-input\\" type=\\"radio\\" name=\\"choice\\" value=\\"3\\" match=\\"choice\\">\\n                <span style=\\"margin-left: 10px;\\">").concat(objLang.choice, "</span>\\n            </div>\\n        </div>\\n        <div class=\\"panel-body\\" style=\\"padding-top: 6px;\\">\\n            <div match=\\"specific\\" class=\\"form-group\\" style=\\"display: flex; flex-wrap: wrap; margin: 0px; padding: 0px;\\">\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n    ");\n}\n\n//# sourceURL=webpack://cron-input-ui/./src/templates/CronFieldTemplate.js?')},"./src/templates/CssTemplate.js":
/*!**************************************!*\
  !*** ./src/templates/CssTemplate.js ***!
  \**************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "CssTemplateGenerator": () => (/* binding */ CssTemplateGenerator)\n/* harmony export */ });\nfunction CssTemplateGenerator(obj) {\n  return "\\ncron-input-ui[id=".concat(obj.id, "] .btn-custom {\\n    background-color: ").concat(obj.colorMain, ";\\n    border-color: ").concat(obj.colorSecond, ";\\n}\\n\\ncron-input-ui[id=").concat(obj.id, "] .btn-custom:hover {\\n    background-color: ").concat(obj.colorSecond, ";\\n    border-color: ").concat(obj.colorMain, ";\\n}\\n\\ncron-input-ui[id=").concat(obj.id, "] input[type=\\"radio\\"]:checked:after {\\n    background-color: ").concat(obj.colorMain, ";\\n}\\n\\ncron-input-ui[id=").concat(obj.id, "] input[type=\\"radio\\"] {\\n    border: 0.1em solid ").concat(obj.colorSecond, ";\\n}\\n\\ncron-input-ui[id=").concat(obj.id, "] .container input:checked ~ .checkmark {\\n    background-color: ").concat(obj.colorMain, ";\\n}\\n\\ncron-input-ui[id=").concat(obj.id, "] .container:hover input ~ .checkmark {\\n    background-color: ").concat(obj.colorSecond, ";\\n}\\n    ");\n}\n\n//# sourceURL=webpack://cron-input-ui/./src/templates/CssTemplate.js?')},"./src/templates/SpecificOptionTemplate.js":
/*!*************************************************!*\
  !*** ./src/templates/SpecificOptionTemplate.js ***!
  \*************************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "SpecificOptionTemplateGenerator": () => (/* binding */ SpecificOptionTemplateGenerator)\n/* harmony export */ });\nfunction SpecificOptionTemplateGenerator(getNumber, number) {\n  return "\\n<div style=\\"margin: 10px;\\">\\n    <label class=\\"container\\">\\n        <span class=\\"numberValue\\">".concat(getNumber, "</span>\\n        <input class=\\"propagationClass\\" value=\'").concat(number, "\' type=\\"checkbox\\">\\n        <span class=\\"checkmark\\"></span>\\n    </label>\\n</div>\\n    ");\n}\n\n//# sourceURL=webpack://cron-input-ui/./src/templates/SpecificOptionTemplate.js?')},"./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://cron-input-ui/./src/index.css?")},"./node_modules/cron-validator/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/cron-validator/lib/index.js ***!
  \**************************************************/function(__unused_webpack_module,exports){"use strict";eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isValidCron = void 0;\n// This comes from the fact that parseInt trims characters coming\n// after digits and consider it a valid int, so `1*` becomes `1`.\nvar safeParseInt = function (value) {\n    if (/^\\d+$/.test(value)) {\n        return Number(value);\n    }\n    else {\n        return NaN;\n    }\n};\nvar isWildcard = function (value) {\n    return value === '*';\n};\nvar isQuestionMark = function (value) {\n    return value === '?';\n};\nvar isInRange = function (value, start, stop) {\n    return value >= start && value <= stop;\n};\nvar isValidRange = function (value, start, stop) {\n    var sides = value.split('-');\n    switch (sides.length) {\n        case 1:\n            return isWildcard(value) || isInRange(safeParseInt(value), start, stop);\n        case 2:\n            var _a = sides.map(function (side) { return safeParseInt(side); }), small = _a[0], big = _a[1];\n            return small <= big && isInRange(small, start, stop) && isInRange(big, start, stop);\n        default:\n            return false;\n    }\n};\nvar isValidStep = function (value) {\n    return value === undefined || (value.search(/[^\\d]/) === -1 && safeParseInt(value) > 0);\n};\nvar validateForRange = function (value, start, stop) {\n    if (value.search(/[^\\d-,\\/*]/) !== -1) {\n        return false;\n    }\n    var list = value.split(',');\n    return list.every(function (condition) {\n        var splits = condition.split('/');\n        // Prevents `*/ * * * *` from being accepted.\n        if (condition.trim().endsWith('/')) {\n            return false;\n        }\n        // Prevents `*/*/* * * * *` from being accepted\n        if (splits.length > 2) {\n            return false;\n        }\n        // If we don't have a `/`, right will be undefined which is considered a valid step if we don't a `/`.\n        var left = splits[0], right = splits[1];\n        return isValidRange(left, start, stop) && isValidStep(right);\n    });\n};\nvar hasValidSeconds = function (seconds) {\n    return validateForRange(seconds, 0, 59);\n};\nvar hasValidMinutes = function (minutes) {\n    return validateForRange(minutes, 0, 59);\n};\nvar hasValidHours = function (hours) {\n    return validateForRange(hours, 0, 23);\n};\nvar hasValidDays = function (days, allowBlankDay) {\n    return (allowBlankDay && isQuestionMark(days)) || validateForRange(days, 1, 31);\n};\nvar monthAlias = {\n    jan: '1',\n    feb: '2',\n    mar: '3',\n    apr: '4',\n    may: '5',\n    jun: '6',\n    jul: '7',\n    aug: '8',\n    sep: '9',\n    oct: '10',\n    nov: '11',\n    dec: '12'\n};\nvar hasValidMonths = function (months, alias) {\n    // Prevents alias to be used as steps\n    if (months.search(/\\/[a-zA-Z]/) !== -1) {\n        return false;\n    }\n    if (alias) {\n        var remappedMonths = months.toLowerCase().replace(/[a-z]{3}/g, function (match) {\n            return monthAlias[match] === undefined ? match : monthAlias[match];\n        });\n        // If any invalid alias was used, it won't pass the other checks as there will be non-numeric values in the months\n        return validateForRange(remappedMonths, 1, 12);\n    }\n    return validateForRange(months, 1, 12);\n};\nvar weekdaysAlias = {\n    sun: '0',\n    mon: '1',\n    tue: '2',\n    wed: '3',\n    thu: '4',\n    fri: '5',\n    sat: '6'\n};\nvar hasValidWeekdays = function (weekdays, alias, allowBlankDay, allowSevenAsSunday) {\n    // If there is a question mark, checks if the allowBlankDay flag is set\n    if (allowBlankDay && isQuestionMark(weekdays)) {\n        return true;\n    }\n    else if (!allowBlankDay && isQuestionMark(weekdays)) {\n        return false;\n    }\n    // Prevents alias to be used as steps\n    if (weekdays.search(/\\/[a-zA-Z]/) !== -1) {\n        return false;\n    }\n    if (alias) {\n        var remappedWeekdays = weekdays.toLowerCase().replace(/[a-z]{3}/g, function (match) {\n            return weekdaysAlias[match] === undefined ? match : weekdaysAlias[match];\n        });\n        // If any invalid alias was used, it won't pass the other checks as there will be non-numeric values in the weekdays\n        return validateForRange(remappedWeekdays, 0, allowSevenAsSunday ? 7 : 6);\n    }\n    return validateForRange(weekdays, 0, allowSevenAsSunday ? 7 : 6);\n};\nvar hasCompatibleDayFormat = function (days, weekdays, allowBlankDay) {\n    return !(allowBlankDay && isQuestionMark(days) && isQuestionMark(weekdays));\n};\nvar split = function (cron) {\n    return cron.trim().split(/\\s+/);\n};\nvar defaultOptions = {\n    alias: false,\n    seconds: false,\n    allowBlankDay: false,\n    allowSevenAsSunday: false\n};\nexports.isValidCron = function (cron, options) {\n    options = __assign(__assign({}, defaultOptions), options);\n    var splits = split(cron);\n    if (splits.length > (options.seconds ? 6 : 5) || splits.length < 5) {\n        return false;\n    }\n    var checks = [];\n    if (splits.length === 6) {\n        var seconds = splits.shift();\n        if (seconds) {\n            checks.push(hasValidSeconds(seconds));\n        }\n    }\n    // We could only check the steps gradually and return false on the first invalid block,\n    // However, this won't have any performance impact so why bother for now.\n    var minutes = splits[0], hours = splits[1], days = splits[2], months = splits[3], weekdays = splits[4];\n    checks.push(hasValidMinutes(minutes));\n    checks.push(hasValidHours(hours));\n    checks.push(hasValidDays(days, options.allowBlankDay));\n    checks.push(hasValidMonths(months, options.alias));\n    checks.push(hasValidWeekdays(weekdays, options.alias, options.allowBlankDay, options.allowSevenAsSunday));\n    checks.push(hasCompatibleDayFormat(days, weekdays, options.allowBlankDay));\n    return checks.every(Boolean);\n};\n\n\n//# sourceURL=webpack://cron-input-ui/./node_modules/cron-validator/lib/index.js?")},"./node_modules/cronstrue/dist/cronstrue-i18n.js":
/*!*******************************************************!*\
  !*** ./node_modules/cronstrue/dist/cronstrue-i18n.js ***!
  \*******************************************************/module=>{eval('(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(globalThis, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t"use strict";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 794:\n/***/ ((__unused_webpack_module, exports, __nested_webpack_require_545__) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.CronParser = void 0;\nvar rangeValidator_1 = __nested_webpack_require_545__(586);\nvar CronParser = (function () {\n    function CronParser(expression, dayOfWeekStartIndexZero, monthStartIndexZero) {\n        if (dayOfWeekStartIndexZero === void 0) { dayOfWeekStartIndexZero = true; }\n        if (monthStartIndexZero === void 0) { monthStartIndexZero = false; }\n        this.expression = expression;\n        this.dayOfWeekStartIndexZero = dayOfWeekStartIndexZero;\n        this.monthStartIndexZero = monthStartIndexZero;\n    }\n    CronParser.prototype.parse = function () {\n        var parsed = this.extractParts(this.expression);\n        this.normalize(parsed);\n        this.validate(parsed);\n        return parsed;\n    };\n    CronParser.prototype.extractParts = function (expression) {\n        if (!this.expression) {\n            throw new Error("Expression is empty");\n        }\n        var parsed = expression.trim().split(/[ ]+/);\n        if (parsed.length < 5) {\n            throw new Error("Expression has only ".concat(parsed.length, " part").concat(parsed.length == 1 ? "" : "s", ". At least 5 parts are required."));\n        }\n        else if (parsed.length == 5) {\n            parsed.unshift("");\n            parsed.push("");\n        }\n        else if (parsed.length == 6) {\n            var isYearWithNoSecondsPart = /\\d{4}$/.test(parsed[5]) || parsed[4] == "?" || parsed[2] == "?";\n            if (isYearWithNoSecondsPart) {\n                parsed.unshift("");\n            }\n            else {\n                parsed.push("");\n            }\n        }\n        else if (parsed.length > 7) {\n            throw new Error("Expression has ".concat(parsed.length, " parts; too many!"));\n        }\n        return parsed;\n    };\n    CronParser.prototype.normalize = function (expressionParts) {\n        var _this = this;\n        expressionParts[3] = expressionParts[3].replace("?", "*");\n        expressionParts[5] = expressionParts[5].replace("?", "*");\n        expressionParts[2] = expressionParts[2].replace("?", "*");\n        if (expressionParts[0].indexOf("0/") == 0) {\n            expressionParts[0] = expressionParts[0].replace("0/", "*/");\n        }\n        if (expressionParts[1].indexOf("0/") == 0) {\n            expressionParts[1] = expressionParts[1].replace("0/", "*/");\n        }\n        if (expressionParts[2].indexOf("0/") == 0) {\n            expressionParts[2] = expressionParts[2].replace("0/", "*/");\n        }\n        if (expressionParts[3].indexOf("1/") == 0) {\n            expressionParts[3] = expressionParts[3].replace("1/", "*/");\n        }\n        if (expressionParts[4].indexOf("1/") == 0) {\n            expressionParts[4] = expressionParts[4].replace("1/", "*/");\n        }\n        if (expressionParts[6].indexOf("1/") == 0) {\n            expressionParts[6] = expressionParts[6].replace("1/", "*/");\n        }\n        expressionParts[5] = expressionParts[5].replace(/(^\\d)|([^#/\\s]\\d)/g, function (t) {\n            var dowDigits = t.replace(/\\D/, "");\n            var dowDigitsAdjusted = dowDigits;\n            if (_this.dayOfWeekStartIndexZero) {\n                if (dowDigits == "7") {\n                    dowDigitsAdjusted = "0";\n                }\n            }\n            else {\n                dowDigitsAdjusted = (parseInt(dowDigits) - 1).toString();\n            }\n            return t.replace(dowDigits, dowDigitsAdjusted);\n        });\n        if (expressionParts[5] == "L") {\n            expressionParts[5] = "6";\n        }\n        if (expressionParts[3] == "?") {\n            expressionParts[3] = "*";\n        }\n        if (expressionParts[3].indexOf("W") > -1 &&\n            (expressionParts[3].indexOf(",") > -1 || expressionParts[3].indexOf("-") > -1)) {\n            throw new Error("The \'W\' character can be specified only when the day-of-month is a single day, not a range or list of days.");\n        }\n        var days = {\n            SUN: 0,\n            MON: 1,\n            TUE: 2,\n            WED: 3,\n            THU: 4,\n            FRI: 5,\n            SAT: 6,\n        };\n        for (var day in days) {\n            expressionParts[5] = expressionParts[5].replace(new RegExp(day, "gi"), days[day].toString());\n        }\n        expressionParts[4] = expressionParts[4].replace(/(^\\d{1,2})|([^#/\\s]\\d{1,2})/g, function (t) {\n            var dowDigits = t.replace(/\\D/, "");\n            var dowDigitsAdjusted = dowDigits;\n            if (_this.monthStartIndexZero) {\n                dowDigitsAdjusted = (parseInt(dowDigits) + 1).toString();\n            }\n            return t.replace(dowDigits, dowDigitsAdjusted);\n        });\n        var months = {\n            JAN: 1,\n            FEB: 2,\n            MAR: 3,\n            APR: 4,\n            MAY: 5,\n            JUN: 6,\n            JUL: 7,\n            AUG: 8,\n            SEP: 9,\n            OCT: 10,\n            NOV: 11,\n            DEC: 12,\n        };\n        for (var month in months) {\n            expressionParts[4] = expressionParts[4].replace(new RegExp(month, "gi"), months[month].toString());\n        }\n        if (expressionParts[0] == "0") {\n            expressionParts[0] = "";\n        }\n        if (!/\\*|\\-|\\,|\\//.test(expressionParts[2]) &&\n            (/\\*|\\//.test(expressionParts[1]) || /\\*|\\//.test(expressionParts[0]))) {\n            expressionParts[2] += "-".concat(expressionParts[2]);\n        }\n        for (var i = 0; i < expressionParts.length; i++) {\n            if (expressionParts[i].indexOf(",") != -1) {\n                expressionParts[i] =\n                    expressionParts[i]\n                        .split(",")\n                        .filter(function (str) { return str !== ""; })\n                        .join(",") || "*";\n            }\n            if (expressionParts[i] == "*/1") {\n                expressionParts[i] = "*";\n            }\n            if (expressionParts[i].indexOf("/") > -1 && !/^\\*|\\-|\\,/.test(expressionParts[i])) {\n                var stepRangeThrough = null;\n                switch (i) {\n                    case 4:\n                        stepRangeThrough = "12";\n                        break;\n                    case 5:\n                        stepRangeThrough = "6";\n                        break;\n                    case 6:\n                        stepRangeThrough = "9999";\n                        break;\n                    default:\n                        stepRangeThrough = null;\n                        break;\n                }\n                if (stepRangeThrough !== null) {\n                    var parts = expressionParts[i].split("/");\n                    expressionParts[i] = "".concat(parts[0], "-").concat(stepRangeThrough, "/").concat(parts[1]);\n                }\n            }\n        }\n    };\n    CronParser.prototype.validate = function (parsed) {\n        this.assertNoInvalidCharacters("DOW", parsed[5]);\n        this.assertNoInvalidCharacters("DOM", parsed[3]);\n        this.validateRange(parsed);\n    };\n    CronParser.prototype.validateRange = function (parsed) {\n        rangeValidator_1.default.secondRange(parsed[0]);\n        rangeValidator_1.default.minuteRange(parsed[1]);\n        rangeValidator_1.default.hourRange(parsed[2]);\n        rangeValidator_1.default.dayOfMonthRange(parsed[3]);\n        rangeValidator_1.default.monthRange(parsed[4], this.monthStartIndexZero);\n        rangeValidator_1.default.dayOfWeekRange(parsed[5], this.dayOfWeekStartIndexZero);\n    };\n    CronParser.prototype.assertNoInvalidCharacters = function (partDescription, expression) {\n        var invalidChars = expression.match(/[A-KM-VX-Z]+/gi);\n        if (invalidChars && invalidChars.length) {\n            throw new Error("".concat(partDescription, " part contains invalid values: \'").concat(invalidChars.toString(), "\'"));\n        }\n    };\n    return CronParser;\n}());\nexports.CronParser = CronParser;\n\n\n/***/ }),\n\n/***/ 728:\n/***/ ((__unused_webpack_module, exports, __nested_webpack_require_8468__) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ExpressionDescriptor = void 0;\nvar stringUtilities_1 = __nested_webpack_require_8468__(910);\nvar cronParser_1 = __nested_webpack_require_8468__(794);\nvar ExpressionDescriptor = (function () {\n    function ExpressionDescriptor(expression, options) {\n        this.expression = expression;\n        this.options = options;\n        this.expressionParts = new Array(5);\n        if (!this.options.locale && ExpressionDescriptor.defaultLocale) {\n            this.options.locale = ExpressionDescriptor.defaultLocale;\n        }\n        if (!ExpressionDescriptor.locales[this.options.locale]) {\n            var fallBackLocale = Object.keys(ExpressionDescriptor.locales)[0];\n            console.warn("Locale \'".concat(this.options.locale, "\' could not be found; falling back to \'").concat(fallBackLocale, "\'."));\n            this.options.locale = fallBackLocale;\n        }\n        this.i18n = ExpressionDescriptor.locales[this.options.locale];\n        if (options.use24HourTimeFormat === undefined) {\n            options.use24HourTimeFormat = this.i18n.use24HourTimeFormatByDefault();\n        }\n    }\n    ExpressionDescriptor.toString = function (expression, _a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.throwExceptionOnParseError, throwExceptionOnParseError = _c === void 0 ? true : _c, _d = _b.verbose, verbose = _d === void 0 ? false : _d, _e = _b.dayOfWeekStartIndexZero, dayOfWeekStartIndexZero = _e === void 0 ? true : _e, _f = _b.monthStartIndexZero, monthStartIndexZero = _f === void 0 ? false : _f, use24HourTimeFormat = _b.use24HourTimeFormat, _g = _b.locale, locale = _g === void 0 ? null : _g;\n        var options = {\n            throwExceptionOnParseError: throwExceptionOnParseError,\n            verbose: verbose,\n            dayOfWeekStartIndexZero: dayOfWeekStartIndexZero,\n            monthStartIndexZero: monthStartIndexZero,\n            use24HourTimeFormat: use24HourTimeFormat,\n            locale: locale,\n        };\n        var descripter = new ExpressionDescriptor(expression, options);\n        return descripter.getFullDescription();\n    };\n    ExpressionDescriptor.initialize = function (localesLoader, defaultLocale) {\n        if (defaultLocale === void 0) { defaultLocale = "en"; }\n        ExpressionDescriptor.specialCharacters = ["/", "-", ",", "*"];\n        ExpressionDescriptor.defaultLocale = defaultLocale;\n        localesLoader.load(ExpressionDescriptor.locales);\n    };\n    ExpressionDescriptor.prototype.getFullDescription = function () {\n        var description = "";\n        try {\n            var parser = new cronParser_1.CronParser(this.expression, this.options.dayOfWeekStartIndexZero, this.options.monthStartIndexZero);\n            this.expressionParts = parser.parse();\n            var timeSegment = this.getTimeOfDayDescription();\n            var dayOfMonthDesc = this.getDayOfMonthDescription();\n            var monthDesc = this.getMonthDescription();\n            var dayOfWeekDesc = this.getDayOfWeekDescription();\n            var yearDesc = this.getYearDescription();\n            description += timeSegment + dayOfMonthDesc + dayOfWeekDesc + monthDesc + yearDesc;\n            description = this.transformVerbosity(description, !!this.options.verbose);\n            description = description.charAt(0).toLocaleUpperCase() + description.substr(1);\n        }\n        catch (ex) {\n            if (!this.options.throwExceptionOnParseError) {\n                description = this.i18n.anErrorOccuredWhenGeneratingTheExpressionD();\n            }\n            else {\n                throw "".concat(ex);\n            }\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getTimeOfDayDescription = function () {\n        var secondsExpression = this.expressionParts[0];\n        var minuteExpression = this.expressionParts[1];\n        var hourExpression = this.expressionParts[2];\n        var description = "";\n        if (!stringUtilities_1.StringUtilities.containsAny(minuteExpression, ExpressionDescriptor.specialCharacters) &&\n            !stringUtilities_1.StringUtilities.containsAny(hourExpression, ExpressionDescriptor.specialCharacters) &&\n            !stringUtilities_1.StringUtilities.containsAny(secondsExpression, ExpressionDescriptor.specialCharacters)) {\n            description += this.i18n.atSpace() + this.formatTime(hourExpression, minuteExpression, secondsExpression);\n        }\n        else if (!secondsExpression &&\n            minuteExpression.indexOf("-") > -1 &&\n            !(minuteExpression.indexOf(",") > -1) &&\n            !(minuteExpression.indexOf("/") > -1) &&\n            !stringUtilities_1.StringUtilities.containsAny(hourExpression, ExpressionDescriptor.specialCharacters)) {\n            var minuteParts = minuteExpression.split("-");\n            description += stringUtilities_1.StringUtilities.format(this.i18n.everyMinuteBetweenX0AndX1(), this.formatTime(hourExpression, minuteParts[0], ""), this.formatTime(hourExpression, minuteParts[1], ""));\n        }\n        else if (!secondsExpression &&\n            hourExpression.indexOf(",") > -1 &&\n            hourExpression.indexOf("-") == -1 &&\n            hourExpression.indexOf("/") == -1 &&\n            !stringUtilities_1.StringUtilities.containsAny(minuteExpression, ExpressionDescriptor.specialCharacters)) {\n            var hourParts = hourExpression.split(",");\n            description += this.i18n.at();\n            for (var i = 0; i < hourParts.length; i++) {\n                description += " ";\n                description += this.formatTime(hourParts[i], minuteExpression, "");\n                if (i < hourParts.length - 2) {\n                    description += ",";\n                }\n                if (i == hourParts.length - 2) {\n                    description += this.i18n.spaceAnd();\n                }\n            }\n        }\n        else {\n            var secondsDescription = this.getSecondsDescription();\n            var minutesDescription = this.getMinutesDescription();\n            var hoursDescription = this.getHoursDescription();\n            description += secondsDescription;\n            if (description && minutesDescription) {\n                description += ", ";\n            }\n            description += minutesDescription;\n            if (minutesDescription === hoursDescription) {\n                return description;\n            }\n            if (description && hoursDescription) {\n                description += ", ";\n            }\n            description += hoursDescription;\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getSecondsDescription = function () {\n        var _this = this;\n        var description = this.getSegmentDescription(this.expressionParts[0], this.i18n.everySecond(), function (s) {\n            return s;\n        }, function (s) {\n            return stringUtilities_1.StringUtilities.format(_this.i18n.everyX0Seconds(), s);\n        }, function (s) {\n            return _this.i18n.secondsX0ThroughX1PastTheMinute();\n        }, function (s) {\n            return s == "0"\n                ? ""\n                : parseInt(s) < 20\n                    ? _this.i18n.atX0SecondsPastTheMinute()\n                    : _this.i18n.atX0SecondsPastTheMinuteGt20() || _this.i18n.atX0SecondsPastTheMinute();\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getMinutesDescription = function () {\n        var _this = this;\n        var secondsExpression = this.expressionParts[0];\n        var hourExpression = this.expressionParts[2];\n        var description = this.getSegmentDescription(this.expressionParts[1], this.i18n.everyMinute(), function (s) {\n            return s;\n        }, function (s) {\n            return stringUtilities_1.StringUtilities.format(_this.i18n.everyX0Minutes(), s);\n        }, function (s) {\n            return _this.i18n.minutesX0ThroughX1PastTheHour();\n        }, function (s) {\n            try {\n                return s == "0" && hourExpression.indexOf("/") == -1 && secondsExpression == ""\n                    ? _this.i18n.everyHour()\n                    : parseInt(s) < 20\n                        ? _this.i18n.atX0MinutesPastTheHour()\n                        : _this.i18n.atX0MinutesPastTheHourGt20() || _this.i18n.atX0MinutesPastTheHour();\n            }\n            catch (e) {\n                return _this.i18n.atX0MinutesPastTheHour();\n            }\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getHoursDescription = function () {\n        var _this = this;\n        var expression = this.expressionParts[2];\n        var description = this.getSegmentDescription(expression, this.i18n.everyHour(), function (s) {\n            return _this.formatTime(s, "0", "");\n        }, function (s) {\n            return stringUtilities_1.StringUtilities.format(_this.i18n.everyX0Hours(), s);\n        }, function (s) {\n            return _this.i18n.betweenX0AndX1();\n        }, function (s) {\n            return _this.i18n.atX0();\n        });\n        if (description && expression.includes("-") && this.expressionParts[1] != "0") {\n            var atTheHourMatches = Array.from(description.matchAll(/:00/g));\n            if (atTheHourMatches.length > 1) {\n                var lastAtTheHourMatchIndex = atTheHourMatches[atTheHourMatches.length - 1].index;\n                description = description.substring(0, lastAtTheHourMatchIndex) + ":59" + description.substring(lastAtTheHourMatchIndex + 3);\n            }\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getDayOfWeekDescription = function () {\n        var _this = this;\n        var daysOfWeekNames = this.i18n.daysOfTheWeek();\n        var description = null;\n        if (this.expressionParts[5] == "*") {\n            description = "";\n        }\n        else {\n            description = this.getSegmentDescription(this.expressionParts[5], this.i18n.commaEveryDay(), function (s) {\n                var exp = s;\n                if (s.indexOf("#") > -1) {\n                    exp = s.substr(0, s.indexOf("#"));\n                }\n                else if (s.indexOf("L") > -1) {\n                    exp = exp.replace("L", "");\n                }\n                return daysOfWeekNames[parseInt(exp)];\n            }, function (s) {\n                if (parseInt(s) == 1) {\n                    return "";\n                }\n                else {\n                    return stringUtilities_1.StringUtilities.format(_this.i18n.commaEveryX0DaysOfTheWeek(), s);\n                }\n            }, function (s) {\n                return _this.i18n.commaX0ThroughX1();\n            }, function (s) {\n                var format = null;\n                if (s.indexOf("#") > -1) {\n                    var dayOfWeekOfMonthNumber = s.substring(s.indexOf("#") + 1);\n                    var dayOfWeekOfMonthDescription = null;\n                    switch (dayOfWeekOfMonthNumber) {\n                        case "1":\n                            dayOfWeekOfMonthDescription = _this.i18n.first();\n                            break;\n                        case "2":\n                            dayOfWeekOfMonthDescription = _this.i18n.second();\n                            break;\n                        case "3":\n                            dayOfWeekOfMonthDescription = _this.i18n.third();\n                            break;\n                        case "4":\n                            dayOfWeekOfMonthDescription = _this.i18n.fourth();\n                            break;\n                        case "5":\n                            dayOfWeekOfMonthDescription = _this.i18n.fifth();\n                            break;\n                    }\n                    format = _this.i18n.commaOnThe() + dayOfWeekOfMonthDescription + _this.i18n.spaceX0OfTheMonth();\n                }\n                else if (s.indexOf("L") > -1) {\n                    format = _this.i18n.commaOnTheLastX0OfTheMonth();\n                }\n                else {\n                    var domSpecified = _this.expressionParts[3] != "*";\n                    format = domSpecified ? _this.i18n.commaAndOnX0() : _this.i18n.commaOnlyOnX0();\n                }\n                return format;\n            });\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getMonthDescription = function () {\n        var _this = this;\n        var monthNames = this.i18n.monthsOfTheYear();\n        var description = this.getSegmentDescription(this.expressionParts[4], "", function (s) {\n            return monthNames[parseInt(s) - 1];\n        }, function (s) {\n            if (parseInt(s) == 1) {\n                return "";\n            }\n            else {\n                return stringUtilities_1.StringUtilities.format(_this.i18n.commaEveryX0Months(), s);\n            }\n        }, function (s) {\n            return _this.i18n.commaMonthX0ThroughMonthX1() || _this.i18n.commaX0ThroughX1();\n        }, function (s) {\n            return _this.i18n.commaOnlyInMonthX0 ? _this.i18n.commaOnlyInMonthX0() : _this.i18n.commaOnlyInX0();\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getDayOfMonthDescription = function () {\n        var _this = this;\n        var description = null;\n        var expression = this.expressionParts[3];\n        switch (expression) {\n            case "L":\n                description = this.i18n.commaOnTheLastDayOfTheMonth();\n                break;\n            case "WL":\n            case "LW":\n                description = this.i18n.commaOnTheLastWeekdayOfTheMonth();\n                break;\n            default:\n                var weekDayNumberMatches = expression.match(/(\\d{1,2}W)|(W\\d{1,2})/);\n                if (weekDayNumberMatches) {\n                    var dayNumber = parseInt(weekDayNumberMatches[0].replace("W", ""));\n                    var dayString = dayNumber == 1\n                        ? this.i18n.firstWeekday()\n                        : stringUtilities_1.StringUtilities.format(this.i18n.weekdayNearestDayX0(), dayNumber.toString());\n                    description = stringUtilities_1.StringUtilities.format(this.i18n.commaOnTheX0OfTheMonth(), dayString);\n                    break;\n                }\n                else {\n                    var lastDayOffSetMatches = expression.match(/L-(\\d{1,2})/);\n                    if (lastDayOffSetMatches) {\n                        var offSetDays = lastDayOffSetMatches[1];\n                        description = stringUtilities_1.StringUtilities.format(this.i18n.commaDaysBeforeTheLastDayOfTheMonth(), offSetDays);\n                        break;\n                    }\n                    else if (expression == "*" && this.expressionParts[5] != "*") {\n                        return "";\n                    }\n                    else {\n                        description = this.getSegmentDescription(expression, this.i18n.commaEveryDay(), function (s) {\n                            return s == "L"\n                                ? _this.i18n.lastDay()\n                                : _this.i18n.dayX0\n                                    ? stringUtilities_1.StringUtilities.format(_this.i18n.dayX0(), s)\n                                    : s;\n                        }, function (s) {\n                            return s == "1" ? _this.i18n.commaEveryDay() : _this.i18n.commaEveryX0Days();\n                        }, function (s) {\n                            return _this.i18n.commaBetweenDayX0AndX1OfTheMonth();\n                        }, function (s) {\n                            return _this.i18n.commaOnDayX0OfTheMonth();\n                        });\n                    }\n                    break;\n                }\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getYearDescription = function () {\n        var _this = this;\n        var description = this.getSegmentDescription(this.expressionParts[6], "", function (s) {\n            return /^\\d+$/.test(s) ? new Date(parseInt(s), 1).getFullYear().toString() : s;\n        }, function (s) {\n            return stringUtilities_1.StringUtilities.format(_this.i18n.commaEveryX0Years(), s);\n        }, function (s) {\n            return _this.i18n.commaYearX0ThroughYearX1() || _this.i18n.commaX0ThroughX1();\n        }, function (s) {\n            return _this.i18n.commaOnlyInYearX0 ? _this.i18n.commaOnlyInYearX0() : _this.i18n.commaOnlyInX0();\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getSegmentDescription = function (expression, allDescription, getSingleItemDescription, getIncrementDescriptionFormat, getRangeDescriptionFormat, getDescriptionFormat) {\n        var description = null;\n        var doesExpressionContainIncrement = expression.indexOf("/") > -1;\n        var doesExpressionContainRange = expression.indexOf("-") > -1;\n        var doesExpressionContainMultipleValues = expression.indexOf(",") > -1;\n        if (!expression) {\n            description = "";\n        }\n        else if (expression === "*") {\n            description = allDescription;\n        }\n        else if (!doesExpressionContainIncrement && !doesExpressionContainRange && !doesExpressionContainMultipleValues) {\n            description = stringUtilities_1.StringUtilities.format(getDescriptionFormat(expression), getSingleItemDescription(expression));\n        }\n        else if (doesExpressionContainMultipleValues) {\n            var segments = expression.split(",");\n            var descriptionContent = "";\n            for (var i = 0; i < segments.length; i++) {\n                if (i > 0 && segments.length > 2) {\n                    descriptionContent += ",";\n                    if (i < segments.length - 1) {\n                        descriptionContent += " ";\n                    }\n                }\n                if (i > 0 && segments.length > 1 && (i == segments.length - 1 || segments.length == 2)) {\n                    descriptionContent += "".concat(this.i18n.spaceAnd(), " ");\n                }\n                if (segments[i].indexOf("/") > -1 || segments[i].indexOf("-") > -1) {\n                    var isSegmentRangeWithoutIncrement = segments[i].indexOf("-") > -1 && segments[i].indexOf("/") == -1;\n                    var currentDescriptionContent = this.getSegmentDescription(segments[i], allDescription, getSingleItemDescription, getIncrementDescriptionFormat, isSegmentRangeWithoutIncrement ? this.i18n.commaX0ThroughX1 : getRangeDescriptionFormat, getDescriptionFormat);\n                    if (isSegmentRangeWithoutIncrement) {\n                        currentDescriptionContent = currentDescriptionContent.replace(", ", "");\n                    }\n                    descriptionContent += currentDescriptionContent;\n                }\n                else if (!doesExpressionContainIncrement) {\n                    descriptionContent += getSingleItemDescription(segments[i]);\n                }\n                else {\n                    descriptionContent += this.getSegmentDescription(segments[i], allDescription, getSingleItemDescription, getIncrementDescriptionFormat, getRangeDescriptionFormat, getDescriptionFormat);\n                }\n            }\n            if (!doesExpressionContainIncrement) {\n                description = stringUtilities_1.StringUtilities.format(getDescriptionFormat(expression), descriptionContent);\n            }\n            else {\n                description = descriptionContent;\n            }\n        }\n        else if (doesExpressionContainIncrement) {\n            var segments = expression.split("/");\n            description = stringUtilities_1.StringUtilities.format(getIncrementDescriptionFormat(segments[1]), segments[1]);\n            if (segments[0].indexOf("-") > -1) {\n                var rangeSegmentDescription = this.generateRangeSegmentDescription(segments[0], getRangeDescriptionFormat, getSingleItemDescription);\n                if (rangeSegmentDescription.indexOf(", ") != 0) {\n                    description += ", ";\n                }\n                description += rangeSegmentDescription;\n            }\n            else if (segments[0].indexOf("*") == -1) {\n                var rangeItemDescription = stringUtilities_1.StringUtilities.format(getDescriptionFormat(segments[0]), getSingleItemDescription(segments[0]));\n                rangeItemDescription = rangeItemDescription.replace(", ", "");\n                description += stringUtilities_1.StringUtilities.format(this.i18n.commaStartingX0(), rangeItemDescription);\n            }\n        }\n        else if (doesExpressionContainRange) {\n            description = this.generateRangeSegmentDescription(expression, getRangeDescriptionFormat, getSingleItemDescription);\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.generateRangeSegmentDescription = function (rangeExpression, getRangeDescriptionFormat, getSingleItemDescription) {\n        var description = "";\n        var rangeSegments = rangeExpression.split("-");\n        var rangeSegment1Description = getSingleItemDescription(rangeSegments[0]);\n        var rangeSegment2Description = getSingleItemDescription(rangeSegments[1]);\n        var rangeDescriptionFormat = getRangeDescriptionFormat(rangeExpression);\n        description += stringUtilities_1.StringUtilities.format(rangeDescriptionFormat, rangeSegment1Description, rangeSegment2Description);\n        return description;\n    };\n    ExpressionDescriptor.prototype.formatTime = function (hourExpression, minuteExpression, secondExpression) {\n        var hour = parseInt(hourExpression);\n        var period = "";\n        var setPeriodBeforeTime = false;\n        if (!this.options.use24HourTimeFormat) {\n            setPeriodBeforeTime = !!(this.i18n.setPeriodBeforeTime && this.i18n.setPeriodBeforeTime());\n            period = setPeriodBeforeTime ? "".concat(this.getPeriod(hour), " ") : " ".concat(this.getPeriod(hour));\n            if (hour > 12) {\n                hour -= 12;\n            }\n            if (hour === 0) {\n                hour = 12;\n            }\n        }\n        var minute = minuteExpression;\n        var second = "";\n        if (secondExpression) {\n            second = ":".concat(("00" + secondExpression).substring(secondExpression.length));\n        }\n        return "".concat(setPeriodBeforeTime ? period : "").concat(("00" + hour.toString()).substring(hour.toString().length), ":").concat(("00" + minute.toString()).substring(minute.toString().length)).concat(second).concat(!setPeriodBeforeTime ? period : "");\n    };\n    ExpressionDescriptor.prototype.transformVerbosity = function (description, useVerboseFormat) {\n        if (!useVerboseFormat) {\n            description = description.replace(new RegExp(", ".concat(this.i18n.everyMinute()), "g"), "");\n            description = description.replace(new RegExp(", ".concat(this.i18n.everyHour()), "g"), "");\n            description = description.replace(new RegExp(this.i18n.commaEveryDay(), "g"), "");\n            description = description.replace(/\\, ?$/, "");\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getPeriod = function (hour) {\n        return hour >= 12 ? (this.i18n.pm && this.i18n.pm()) || "PM" : (this.i18n.am && this.i18n.am()) || "AM";\n    };\n    ExpressionDescriptor.locales = {};\n    return ExpressionDescriptor;\n}());\nexports.ExpressionDescriptor = ExpressionDescriptor;\n\n\n/***/ }),\n\n/***/ 980:\n/***/ ((__unused_webpack_module, exports, __nested_webpack_require_31865__) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.af = exports.hu = exports.be = exports.ca = exports.fa = exports.sw = exports.sl = exports.fi = exports.sk = exports.cs = exports.he = exports.ja = exports.zh_TW = exports.zh_CN = exports.uk = exports.tr = exports.ru = exports.ro = exports.pt_PT = exports.pt_BR = exports.pl = exports.sv = exports.nb = exports.nl = exports.ko = exports.id = exports.it = exports.fr = exports.es = exports.de = exports.da = exports.en = void 0;\nvar en_1 = __nested_webpack_require_31865__(751);\nObject.defineProperty(exports, "en", ({ enumerable: true, get: function () { return en_1.en; } }));\nvar da_1 = __nested_webpack_require_31865__(904);\nObject.defineProperty(exports, "da", ({ enumerable: true, get: function () { return da_1.da; } }));\nvar de_1 = __nested_webpack_require_31865__(511);\nObject.defineProperty(exports, "de", ({ enumerable: true, get: function () { return de_1.de; } }));\nvar es_1 = __nested_webpack_require_31865__(470);\nObject.defineProperty(exports, "es", ({ enumerable: true, get: function () { return es_1.es; } }));\nvar fr_1 = __nested_webpack_require_31865__(953);\nObject.defineProperty(exports, "fr", ({ enumerable: true, get: function () { return fr_1.fr; } }));\nvar it_1 = __nested_webpack_require_31865__(128);\nObject.defineProperty(exports, "it", ({ enumerable: true, get: function () { return it_1.it; } }));\nvar id_1 = __nested_webpack_require_31865__(258);\nObject.defineProperty(exports, "id", ({ enumerable: true, get: function () { return id_1.id; } }));\nvar ko_1 = __nested_webpack_require_31865__(305);\nObject.defineProperty(exports, "ko", ({ enumerable: true, get: function () { return ko_1.ko; } }));\nvar nl_1 = __nested_webpack_require_31865__(771);\nObject.defineProperty(exports, "nl", ({ enumerable: true, get: function () { return nl_1.nl; } }));\nvar nb_1 = __nested_webpack_require_31865__(869);\nObject.defineProperty(exports, "nb", ({ enumerable: true, get: function () { return nb_1.nb; } }));\nvar sv_1 = __nested_webpack_require_31865__(673);\nObject.defineProperty(exports, "sv", ({ enumerable: true, get: function () { return sv_1.sv; } }));\nvar pl_1 = __nested_webpack_require_31865__(665);\nObject.defineProperty(exports, "pl", ({ enumerable: true, get: function () { return pl_1.pl; } }));\nvar pt_BR_1 = __nested_webpack_require_31865__(461);\nObject.defineProperty(exports, "pt_BR", ({ enumerable: true, get: function () { return pt_BR_1.pt_BR; } }));\nvar pt_PT_1 = __nested_webpack_require_31865__(713);\nObject.defineProperty(exports, "pt_PT", ({ enumerable: true, get: function () { return pt_PT_1.pt_PT; } }));\nvar ro_1 = __nested_webpack_require_31865__(408);\nObject.defineProperty(exports, "ro", ({ enumerable: true, get: function () { return ro_1.ro; } }));\nvar ru_1 = __nested_webpack_require_31865__(392);\nObject.defineProperty(exports, "ru", ({ enumerable: true, get: function () { return ru_1.ru; } }));\nvar tr_1 = __nested_webpack_require_31865__(999);\nObject.defineProperty(exports, "tr", ({ enumerable: true, get: function () { return tr_1.tr; } }));\nvar uk_1 = __nested_webpack_require_31865__(716);\nObject.defineProperty(exports, "uk", ({ enumerable: true, get: function () { return uk_1.uk; } }));\nvar zh_CN_1 = __nested_webpack_require_31865__(419);\nObject.defineProperty(exports, "zh_CN", ({ enumerable: true, get: function () { return zh_CN_1.zh_CN; } }));\nvar zh_TW_1 = __nested_webpack_require_31865__(139);\nObject.defineProperty(exports, "zh_TW", ({ enumerable: true, get: function () { return zh_TW_1.zh_TW; } }));\nvar ja_1 = __nested_webpack_require_31865__(949);\nObject.defineProperty(exports, "ja", ({ enumerable: true, get: function () { return ja_1.ja; } }));\nvar he_1 = __nested_webpack_require_31865__(389);\nObject.defineProperty(exports, "he", ({ enumerable: true, get: function () { return he_1.he; } }));\nvar cs_1 = __nested_webpack_require_31865__(674);\nObject.defineProperty(exports, "cs", ({ enumerable: true, get: function () { return cs_1.cs; } }));\nvar sk_1 = __nested_webpack_require_31865__(203);\nObject.defineProperty(exports, "sk", ({ enumerable: true, get: function () { return sk_1.sk; } }));\nvar fi_1 = __nested_webpack_require_31865__(578);\nObject.defineProperty(exports, "fi", ({ enumerable: true, get: function () { return fi_1.fi; } }));\nvar sl_1 = __nested_webpack_require_31865__(738);\nObject.defineProperty(exports, "sl", ({ enumerable: true, get: function () { return sl_1.sl; } }));\nvar sw_1 = __nested_webpack_require_31865__(286);\nObject.defineProperty(exports, "sw", ({ enumerable: true, get: function () { return sw_1.sw; } }));\nvar fa_1 = __nested_webpack_require_31865__(384);\nObject.defineProperty(exports, "fa", ({ enumerable: true, get: function () { return fa_1.fa; } }));\nvar ca_1 = __nested_webpack_require_31865__(708);\nObject.defineProperty(exports, "ca", ({ enumerable: true, get: function () { return ca_1.ca; } }));\nvar be_1 = __nested_webpack_require_31865__(445);\nObject.defineProperty(exports, "be", ({ enumerable: true, get: function () { return be_1.be; } }));\nvar hu_1 = __nested_webpack_require_31865__(560);\nObject.defineProperty(exports, "hu", ({ enumerable: true, get: function () { return hu_1.hu; } }));\nvar af_1 = __nested_webpack_require_31865__(675);\nObject.defineProperty(exports, "af", ({ enumerable: true, get: function () { return af_1.af; } }));\n\n\n/***/ }),\n\n/***/ 282:\n/***/ ((__unused_webpack_module, exports, __nested_webpack_require_36892__) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.allLocalesLoader = void 0;\nvar allLocales = __nested_webpack_require_36892__(980);\nvar allLocalesLoader = (function () {\n    function allLocalesLoader() {\n    }\n    allLocalesLoader.prototype.load = function (availableLocales) {\n        for (var property in allLocales) {\n            if (allLocales.hasOwnProperty(property)) {\n                availableLocales[property] = new allLocales[property]();\n            }\n        }\n    };\n    return allLocalesLoader;\n}());\nexports.allLocalesLoader = allLocalesLoader;\n\n\n/***/ }),\n\n/***/ 675:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.af = void 0;\nvar af = (function () {\n    function af() {\n    }\n    af.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    af.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    af.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    af.prototype.commaYearX0ThroughYearX1 = function () {\n        return ", jaar %s na %s";\n    };\n    af.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    af.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Daar was \'n fout om die tydsuitdrukking the genereer. Raadpleeg asb die uitdrukking formaat.";\n    };\n    af.prototype.everyMinute = function () {\n        return "elke minuut";\n    };\n    af.prototype.everyHour = function () {\n        return "elke uur";\n    };\n    af.prototype.atSpace = function () {\n        return "Teen ";\n    };\n    af.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Elke minuut tussen %s en %s";\n    };\n    af.prototype.at = function () {\n        return "Teen";\n    };\n    af.prototype.spaceAnd = function () {\n        return " en";\n    };\n    af.prototype.everySecond = function () {\n        return "elke sekonde";\n    };\n    af.prototype.everyX0Seconds = function () {\n        return "elke %s sekonde";\n    };\n    af.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekonde %s deur na %s na die minuut";\n    };\n    af.prototype.atX0SecondsPastTheMinute = function () {\n        return "teen %s sekondes na die minuut";\n    };\n    af.prototype.everyX0Minutes = function () {\n        return "elke %s minute";\n    };\n    af.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minute %s deur na %s na die uur";\n    };\n    af.prototype.atX0MinutesPastTheHour = function () {\n        return "teen %s minute na die uur";\n    };\n    af.prototype.everyX0Hours = function () {\n        return "elke %s ure";\n    };\n    af.prototype.betweenX0AndX1 = function () {\n        return "tussen %s en %s";\n    };\n    af.prototype.atX0 = function () {\n        return "teen %s";\n    };\n    af.prototype.commaEveryDay = function () {\n        return ", elke dag";\n    };\n    af.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", elke %s dae van die week";\n    };\n    af.prototype.commaX0ThroughX1 = function () {\n        return ", %s deur na %s";\n    };\n    af.prototype.first = function () {\n        return "eerste";\n    };\n    af.prototype.second = function () {\n        return "tweede";\n    };\n    af.prototype.third = function () {\n        return "derde";\n    };\n    af.prototype.fourth = function () {\n        return "vierde";\n    };\n    af.prototype.fifth = function () {\n        return "vyfde";\n    };\n    af.prototype.commaOnThe = function () {\n        return ", op die ";\n    };\n    af.prototype.spaceX0OfTheMonth = function () {\n        return " %s van die maand";\n    };\n    af.prototype.lastDay = function () {\n        return "die laaste dag";\n    };\n    af.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", op die laaste %s van die maand";\n    };\n    af.prototype.commaOnlyOnX0 = function () {\n        return ", net op %s";\n    };\n    af.prototype.commaAndOnX0 = function () {\n        return ", en op %s";\n    };\n    af.prototype.commaEveryX0Months = function () {\n        return ", elke %s maande";\n    };\n    af.prototype.commaOnlyInX0 = function () {\n        return ", net in %s";\n    };\n    af.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", op die laaste dag van die maand";\n    };\n    af.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", op die laaste weeksdag van die maand";\n    };\n    af.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dae voor die laaste dag van die maand";\n    };\n    af.prototype.firstWeekday = function () {\n        return "eerste weeksdag";\n    };\n    af.prototype.weekdayNearestDayX0 = function () {\n        return "weeksdag naaste aan dag %s";\n    };\n    af.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", op die %s van die maande";\n    };\n    af.prototype.commaEveryX0Days = function () {\n        return ", elke %s dae";\n    };\n    af.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", tussen dag %s en %s van die maand";\n    };\n    af.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", op dag %s van die maand";\n    };\n    af.prototype.commaEveryHour = function () {\n        return ", elke uur";\n    };\n    af.prototype.commaEveryX0Years = function () {\n        return ", elke %s jare";\n    };\n    af.prototype.commaStartingX0 = function () {\n        return ", beginnende %s";\n    };\n    af.prototype.daysOfTheWeek = function () {\n        return ["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"];\n    };\n    af.prototype.monthsOfTheYear = function () {\n        return [\n            "Januarie",\n            "Februarie",\n            "Maart",\n            "April",\n            "Mei",\n            "Junie",\n            "Julie",\n            "Augustus",\n            "September",\n            "Oktober",\n            "November",\n            "Desember",\n        ];\n    };\n    return af;\n}());\nexports.af = af;\n\n\n/***/ }),\n\n/***/ 445:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.be = void 0;\nvar be = (function () {\n    function be() {\n    }\n    be.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    be.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    be.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    be.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    be.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    be.prototype.everyMinute = function () {\n        return "кожную хвіліну";\n    };\n    be.prototype.everyHour = function () {\n        return "кожную гадзіну";\n    };\n    be.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Адбылася памылка падчас генерацыі апісання выразы. Праверце сінтаксіс крон-выразы.";\n    };\n    be.prototype.atSpace = function () {\n        return "У ";\n    };\n    be.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Кожную хвіліну з %s да %s";\n    };\n    be.prototype.at = function () {\n        return "У";\n    };\n    be.prototype.spaceAnd = function () {\n        return " і";\n    };\n    be.prototype.everySecond = function () {\n        return "кожную секунду";\n    };\n    be.prototype.everyX0Seconds = function () {\n        return "кожныя %s секунд";\n    };\n    be.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "секунды з %s па %s";\n    };\n    be.prototype.atX0SecondsPastTheMinute = function () {\n        return "у %s секунд";\n    };\n    be.prototype.everyX0Minutes = function () {\n        return "кожныя %s хвілін";\n    };\n    be.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "хвіліны з %s па %s";\n    };\n    be.prototype.atX0MinutesPastTheHour = function () {\n        return "у %s хвілін";\n    };\n    be.prototype.everyX0Hours = function () {\n        return "кожныя %s гадзін";\n    };\n    be.prototype.betweenX0AndX1 = function () {\n        return "з %s па %s";\n    };\n    be.prototype.atX0 = function () {\n        return "у %s";\n    };\n    be.prototype.commaEveryDay = function () {\n        return ", кожны дзень";\n    };\n    be.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", кожныя %s дзён тыдня";\n    };\n    be.prototype.commaX0ThroughX1 = function () {\n        return ", %s па %s";\n    };\n    be.prototype.first = function () {\n        return "першы";\n    };\n    be.prototype.second = function () {\n        return "другі";\n    };\n    be.prototype.third = function () {\n        return "трэці";\n    };\n    be.prototype.fourth = function () {\n        return "чацвёрты";\n    };\n    be.prototype.fifth = function () {\n        return "пяты";\n    };\n    be.prototype.commaOnThe = function () {\n        return ", у ";\n    };\n    be.prototype.spaceX0OfTheMonth = function () {\n        return " %s месяца";\n    };\n    be.prototype.lastDay = function () {\n        return "апошні дзень";\n    };\n    be.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", у апошні %s месяца";\n    };\n    be.prototype.commaOnlyOnX0 = function () {\n        return ", толькі ў %s";\n    };\n    be.prototype.commaAndOnX0 = function () {\n        return ", і ў %s";\n    };\n    be.prototype.commaEveryX0Months = function () {\n        return ", кожныя %s месяцаў";\n    };\n    be.prototype.commaOnlyInX0 = function () {\n        return ", толькі ў %s";\n    };\n    be.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", у апошні дзень месяца";\n    };\n    be.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", у апошні будні дзень месяца";\n    };\n    be.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s дзён да апошняга дня месяца";\n    };\n    be.prototype.firstWeekday = function () {\n        return "першы будны дзень";\n    };\n    be.prototype.weekdayNearestDayX0 = function () {\n        return "найбліжэйшы будны дзень да %s";\n    };\n    be.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", у %s месяцы";\n    };\n    be.prototype.commaEveryX0Days = function () {\n        return ", кожныя %s дзён";\n    };\n    be.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", з %s па %s лік месяца";\n    };\n    be.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", у %s лік месяца";\n    };\n    be.prototype.commaEveryX0Years = function () {\n        return ", кожныя %s гадоў";\n    };\n    be.prototype.commaStartingX0 = function () {\n        return ", пачатак %s";\n    };\n    be.prototype.daysOfTheWeek = function () {\n        return ["нядзеля", "панядзелак", "аўторак", "серада", "чацвер", "пятніца", "субота"];\n    };\n    be.prototype.monthsOfTheYear = function () {\n        return [\n            "студзень",\n            "люты",\n            "сакавік",\n            "красавік",\n            "травень",\n            "чэрвень",\n            "ліпень",\n            "жнівень",\n            "верасень",\n            "кастрычнік",\n            "лістапад",\n            "снежань",\n        ];\n    };\n    return be;\n}());\nexports.be = be;\n\n\n/***/ }),\n\n/***/ 708:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ca = void 0;\nvar ca = (function () {\n    function ca() {\n    }\n    ca.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    ca.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    ca.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    ca.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    ca.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    ca.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "S\'ha produït un error mentres es generava la descripció de l\'expressió. Revisi la sintaxi de la expressió de cron.";\n    };\n    ca.prototype.at = function () {\n        return "A les";\n    };\n    ca.prototype.atSpace = function () {\n        return "A les ";\n    };\n    ca.prototype.atX0 = function () {\n        return "a les %s";\n    };\n    ca.prototype.atX0MinutesPastTheHour = function () {\n        return "als %s minuts de l\'hora";\n    };\n    ca.prototype.atX0SecondsPastTheMinute = function () {\n        return "als %s segonds del minut";\n    };\n    ca.prototype.betweenX0AndX1 = function () {\n        return "entre les %s i les %s";\n    };\n    ca.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", entre els dies %s i %s del mes";\n    };\n    ca.prototype.commaEveryDay = function () {\n        return ", cada dia";\n    };\n    ca.prototype.commaEveryX0Days = function () {\n        return ", cada %s dies";\n    };\n    ca.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", cada %s dies de la setmana";\n    };\n    ca.prototype.commaEveryX0Months = function () {\n        return ", cada %s mesos";\n    };\n    ca.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", el dia %s del mes";\n    };\n    ca.prototype.commaOnlyInX0 = function () {\n        return ", sólo en %s";\n    };\n    ca.prototype.commaOnlyOnX0 = function () {\n        return ", només el %s";\n    };\n    ca.prototype.commaAndOnX0 = function () {\n        return ", i el %s";\n    };\n    ca.prototype.commaOnThe = function () {\n        return ", en el ";\n    };\n    ca.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", en l\'últim dia del mes";\n    };\n    ca.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", en l\'últim dia de la setmana del mes";\n    };\n    ca.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dies abans de l\'últim dia del mes";\n    };\n    ca.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", en l\'últim %s del mes";\n    };\n    ca.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", en el %s del mes";\n    };\n    ca.prototype.commaX0ThroughX1 = function () {\n        return ", de %s a %s";\n    };\n    ca.prototype.everyHour = function () {\n        return "cada hora";\n    };\n    ca.prototype.everyMinute = function () {\n        return "cada minut";\n    };\n    ca.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "cada minut entre les %s i les %s";\n    };\n    ca.prototype.everySecond = function () {\n        return "cada segon";\n    };\n    ca.prototype.everyX0Hours = function () {\n        return "cada %s hores";\n    };\n    ca.prototype.everyX0Minutes = function () {\n        return "cada %s minuts";\n    };\n    ca.prototype.everyX0Seconds = function () {\n        return "cada %s segons";\n    };\n    ca.prototype.fifth = function () {\n        return "cinquè";\n    };\n    ca.prototype.first = function () {\n        return "primer";\n    };\n    ca.prototype.firstWeekday = function () {\n        return "primer dia de la setmana";\n    };\n    ca.prototype.fourth = function () {\n        return "quart";\n    };\n    ca.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "del minut %s al %s passada l\'hora";\n    };\n    ca.prototype.second = function () {\n        return "segon";\n    };\n    ca.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "En els segons %s al %s de cada minut";\n    };\n    ca.prototype.spaceAnd = function () {\n        return " i";\n    };\n    ca.prototype.spaceX0OfTheMonth = function () {\n        return " %s del mes";\n    };\n    ca.prototype.lastDay = function () {\n        return "l\'últim dia";\n    };\n    ca.prototype.third = function () {\n        return "tercer";\n    };\n    ca.prototype.weekdayNearestDayX0 = function () {\n        return "dia de la setmana més proper al %s";\n    };\n    ca.prototype.commaEveryX0Years = function () {\n        return ", cada %s anys";\n    };\n    ca.prototype.commaStartingX0 = function () {\n        return ", començant %s";\n    };\n    ca.prototype.daysOfTheWeek = function () {\n        return ["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"];\n    };\n    ca.prototype.monthsOfTheYear = function () {\n        return [\n            "gener",\n            "febrer",\n            "març",\n            "abril",\n            "maig",\n            "juny",\n            "juliol",\n            "agost",\n            "setembre",\n            "octubre",\n            "novembre",\n            "desembre",\n        ];\n    };\n    return ca;\n}());\nexports.ca = ca;\n\n\n/***/ }),\n\n/***/ 674:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.cs = void 0;\nvar cs = (function () {\n    function cs() {\n    }\n    cs.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    cs.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    cs.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    cs.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    cs.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    cs.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Při vytváření popisu došlo k chybě. Zkontrolujte prosím správnost syntaxe cronu.";\n    };\n    cs.prototype.everyMinute = function () {\n        return "každou minutu";\n    };\n    cs.prototype.everyHour = function () {\n        return "každou hodinu";\n    };\n    cs.prototype.atSpace = function () {\n        return "V ";\n    };\n    cs.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Každou minutu mezi %s a %s";\n    };\n    cs.prototype.at = function () {\n        return "V";\n    };\n    cs.prototype.spaceAnd = function () {\n        return " a";\n    };\n    cs.prototype.everySecond = function () {\n        return "každou sekundu";\n    };\n    cs.prototype.everyX0Seconds = function () {\n        return "každých %s sekund";\n    };\n    cs.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekundy od %s do %s";\n    };\n    cs.prototype.atX0SecondsPastTheMinute = function () {\n        return "v %s sekund";\n    };\n    cs.prototype.everyX0Minutes = function () {\n        return "každých %s minut";\n    };\n    cs.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minuty od %s do %s";\n    };\n    cs.prototype.atX0MinutesPastTheHour = function () {\n        return "v %s minut";\n    };\n    cs.prototype.everyX0Hours = function () {\n        return "každých %s hodin";\n    };\n    cs.prototype.betweenX0AndX1 = function () {\n        return "mezi %s a %s";\n    };\n    cs.prototype.atX0 = function () {\n        return "v %s";\n    };\n    cs.prototype.commaEveryDay = function () {\n        return ", každý den";\n    };\n    cs.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", každých %s dní v týdnu";\n    };\n    cs.prototype.commaX0ThroughX1 = function () {\n        return ", od %s do %s";\n    };\n    cs.prototype.first = function () {\n        return "první";\n    };\n    cs.prototype.second = function () {\n        return "druhý";\n    };\n    cs.prototype.third = function () {\n        return "třetí";\n    };\n    cs.prototype.fourth = function () {\n        return "čtvrtý";\n    };\n    cs.prototype.fifth = function () {\n        return "pátý";\n    };\n    cs.prototype.commaOnThe = function () {\n        return ", ";\n    };\n    cs.prototype.spaceX0OfTheMonth = function () {\n        return " %s v měsíci";\n    };\n    cs.prototype.lastDay = function () {\n        return "poslední den";\n    };\n    cs.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", poslední %s v měsíci";\n    };\n    cs.prototype.commaOnlyOnX0 = function () {\n        return ", pouze v %s";\n    };\n    cs.prototype.commaAndOnX0 = function () {\n        return ", a v %s";\n    };\n    cs.prototype.commaEveryX0Months = function () {\n        return ", každých %s měsíců";\n    };\n    cs.prototype.commaOnlyInX0 = function () {\n        return ", pouze v %s";\n    };\n    cs.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", poslední den v měsíci";\n    };\n    cs.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", poslední pracovní den v měsíci";\n    };\n    cs.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dní před posledním dnem v měsíci";\n    };\n    cs.prototype.firstWeekday = function () {\n        return "první pracovní den";\n    };\n    cs.prototype.weekdayNearestDayX0 = function () {\n        return "pracovní den nejblíže %s. dni";\n    };\n    cs.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", v %s v měsíci";\n    };\n    cs.prototype.commaEveryX0Days = function () {\n        return ", každých %s dnů";\n    };\n    cs.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", mezi dny %s a %s v měsíci";\n    };\n    cs.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", %s. den v měsíci";\n    };\n    cs.prototype.commaEveryX0Years = function () {\n        return ", každých %s roků";\n    };\n    cs.prototype.commaStartingX0 = function () {\n        return ", začínající %s";\n    };\n    cs.prototype.daysOfTheWeek = function () {\n        return ["Neděle", "Pondělí", "Úterý", "Středa", "Čtvrtek", "Pátek", "Sobota"];\n    };\n    cs.prototype.monthsOfTheYear = function () {\n        return [\n            "Leden",\n            "Únor",\n            "Březen",\n            "Duben",\n            "Květen",\n            "Červen",\n            "Červenec",\n            "Srpen",\n            "Září",\n            "Říjen",\n            "Listopad",\n            "Prosinec",\n        ];\n    };\n    return cs;\n}());\nexports.cs = cs;\n\n\n/***/ }),\n\n/***/ 904:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.da = void 0;\nvar da = (function () {\n    function da() {\n    }\n    da.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    da.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Der opstod en fejl ved generering af udtryksbeskrivelsen. Tjek cron-ekspressionssyntaxen.";\n    };\n    da.prototype.at = function () {\n        return "kl";\n    };\n    da.prototype.atSpace = function () {\n        return "kl ";\n    };\n    da.prototype.atX0 = function () {\n        return "kl %s";\n    };\n    da.prototype.atX0MinutesPastTheHour = function () {\n        return "%s minutter efter timeskift";\n    };\n    da.prototype.atX0SecondsPastTheMinute = function () {\n        return "%s sekunder efter minutskift";\n    };\n    da.prototype.betweenX0AndX1 = function () {\n        return "mellem %s og %s";\n    };\n    da.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", mellem dag %s og %s i måneden";\n    };\n    da.prototype.commaEveryDay = function () {\n        return ", hver dag";\n    };\n    da.prototype.commaEveryX0Days = function () {\n        return ", hver %s. dag";\n    };\n    da.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", hver %s. ugedag";\n    };\n    da.prototype.commaEveryX0Months = function () {\n        return ", hver %s. måned";\n    };\n    da.prototype.commaEveryX0Years = function () {\n        return ", hvert %s. år";\n    };\n    da.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", på dag %s i måneden";\n    };\n    da.prototype.commaOnlyInX0 = function () {\n        return ", kun i %s";\n    };\n    da.prototype.commaOnlyOnX0 = function () {\n        return ", kun på %s";\n    };\n    da.prototype.commaAndOnX0 = function () {\n        return ", og på %s";\n    };\n    da.prototype.commaOnThe = function () {\n        return ", på den ";\n    };\n    da.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", på den sidste dag i måneden";\n    };\n    da.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", på den sidste hverdag i måneden";\n    };\n    da.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dage før den sidste dag i måneden";\n    };\n    da.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", på den sidste %s i måneden";\n    };\n    da.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", på den %s i måneden";\n    };\n    da.prototype.commaX0ThroughX1 = function () {\n        return ", %s til og med %s";\n    };\n    da.prototype.everyHour = function () {\n        return "hver time";\n    };\n    da.prototype.everyMinute = function () {\n        return "hvert minut";\n    };\n    da.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "hvert minut mellem %s og %s";\n    };\n    da.prototype.everySecond = function () {\n        return "hvert sekund";\n    };\n    da.prototype.everyX0Hours = function () {\n        return "hver %s. time";\n    };\n    da.prototype.everyX0Minutes = function () {\n        return "hvert %s. minut";\n    };\n    da.prototype.everyX0Seconds = function () {\n        return "hvert %s. sekund";\n    };\n    da.prototype.fifth = function () {\n        return "femte";\n    };\n    da.prototype.first = function () {\n        return "første";\n    };\n    da.prototype.firstWeekday = function () {\n        return "første hverdag";\n    };\n    da.prototype.fourth = function () {\n        return "fjerde";\n    };\n    da.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minutterne fra %s til og med %s hver time";\n    };\n    da.prototype.second = function () {\n        return "anden";\n    };\n    da.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekunderne fra %s til og med %s hvert minut";\n    };\n    da.prototype.spaceAnd = function () {\n        return " og";\n    };\n    da.prototype.spaceX0OfTheMonth = function () {\n        return " %s i måneden";\n    };\n    da.prototype.lastDay = function () {\n        return "sidste dag";\n    };\n    da.prototype.third = function () {\n        return "tredje";\n    };\n    da.prototype.weekdayNearestDayX0 = function () {\n        return "hverdag nærmest dag %s";\n    };\n    da.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    da.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    da.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    da.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    da.prototype.commaStartingX0 = function () {\n        return ", startende %s";\n    };\n    da.prototype.daysOfTheWeek = function () {\n        return ["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"];\n    };\n    da.prototype.monthsOfTheYear = function () {\n        return [\n            "januar",\n            "februar",\n            "marts",\n            "april",\n            "maj",\n            "juni",\n            "juli",\n            "august",\n            "september",\n            "oktober",\n            "november",\n            "december",\n        ];\n    };\n    return da;\n}());\nexports.da = da;\n\n\n/***/ }),\n\n/***/ 511:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.de = void 0;\nvar de = (function () {\n    function de() {\n    }\n    de.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    de.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    de.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    de.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    de.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    de.prototype.everyMinute = function () {\n        return "jede Minute";\n    };\n    de.prototype.everyHour = function () {\n        return "jede Stunde";\n    };\n    de.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Beim Generieren der Ausdrucksbeschreibung ist ein Fehler aufgetreten. Überprüfen Sie die Syntax des Cron-Ausdrucks.";\n    };\n    de.prototype.atSpace = function () {\n        return "Um ";\n    };\n    de.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Jede Minute zwischen %s und %s";\n    };\n    de.prototype.at = function () {\n        return "Um";\n    };\n    de.prototype.spaceAnd = function () {\n        return " und";\n    };\n    de.prototype.everySecond = function () {\n        return "Jede Sekunde";\n    };\n    de.prototype.everyX0Seconds = function () {\n        return "alle %s Sekunden";\n    };\n    de.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "Sekunden %s bis %s";\n    };\n    de.prototype.atX0SecondsPastTheMinute = function () {\n        return "bei Sekunde %s";\n    };\n    de.prototype.everyX0Minutes = function () {\n        return "alle %s Minuten";\n    };\n    de.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "Minuten %s bis %s";\n    };\n    de.prototype.atX0MinutesPastTheHour = function () {\n        return "bei Minute %s";\n    };\n    de.prototype.everyX0Hours = function () {\n        return "alle %s Stunden";\n    };\n    de.prototype.betweenX0AndX1 = function () {\n        return "zwischen %s und %s";\n    };\n    de.prototype.atX0 = function () {\n        return "um %s";\n    };\n    de.prototype.commaEveryDay = function () {\n        return ", jeden Tag";\n    };\n    de.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", alle %s Tage der Woche";\n    };\n    de.prototype.commaX0ThroughX1 = function () {\n        return ", %s bis %s";\n    };\n    de.prototype.first = function () {\n        return "ersten";\n    };\n    de.prototype.second = function () {\n        return "zweiten";\n    };\n    de.prototype.third = function () {\n        return "dritten";\n    };\n    de.prototype.fourth = function () {\n        return "vierten";\n    };\n    de.prototype.fifth = function () {\n        return "fünften";\n    };\n    de.prototype.commaOnThe = function () {\n        return ", am ";\n    };\n    de.prototype.spaceX0OfTheMonth = function () {\n        return " %s des Monats";\n    };\n    de.prototype.lastDay = function () {\n        return "der letzte Tag";\n    };\n    de.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", am letzten %s des Monats";\n    };\n    de.prototype.commaOnlyOnX0 = function () {\n        return ", nur jeden %s";\n    };\n    de.prototype.commaAndOnX0 = function () {\n        return ", und jeden %s";\n    };\n    de.prototype.commaEveryX0Months = function () {\n        return ", alle %s Monate";\n    };\n    de.prototype.commaOnlyInX0 = function () {\n        return ", nur im %s";\n    };\n    de.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", am letzten Tag des Monats";\n    };\n    de.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", am letzten Werktag des Monats";\n    };\n    de.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s tage vor dem letzten Tag des Monats";\n    };\n    de.prototype.firstWeekday = function () {\n        return "ersten Werktag";\n    };\n    de.prototype.weekdayNearestDayX0 = function () {\n        return "Werktag am nächsten zum %s Tag";\n    };\n    de.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", am %s des Monats";\n    };\n    de.prototype.commaEveryX0Days = function () {\n        return ", alle %s Tage";\n    };\n    de.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", zwischen Tag %s und %s des Monats";\n    };\n    de.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", an Tag %s des Monats";\n    };\n    de.prototype.commaEveryX0Years = function () {\n        return ", alle %s Jahre";\n    };\n    de.prototype.commaStartingX0 = function () {\n        return ", beginnend %s";\n    };\n    de.prototype.daysOfTheWeek = function () {\n        return ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"];\n    };\n    de.prototype.monthsOfTheYear = function () {\n        return [\n            "Januar",\n            "Februar",\n            "März",\n            "April",\n            "Mai",\n            "Juni",\n            "Juli",\n            "August",\n            "September",\n            "Oktober",\n            "November",\n            "Dezember",\n        ];\n    };\n    return de;\n}());\nexports.de = de;\n\n\n/***/ }),\n\n/***/ 751:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.en = void 0;\nvar en = (function () {\n    function en() {\n    }\n    en.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    en.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    en.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    en.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    en.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    en.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "An error occured when generating the expression description.  Check the cron expression syntax.";\n    };\n    en.prototype.everyMinute = function () {\n        return "every minute";\n    };\n    en.prototype.everyHour = function () {\n        return "every hour";\n    };\n    en.prototype.atSpace = function () {\n        return "At ";\n    };\n    en.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Every minute between %s and %s";\n    };\n    en.prototype.at = function () {\n        return "At";\n    };\n    en.prototype.spaceAnd = function () {\n        return " and";\n    };\n    en.prototype.everySecond = function () {\n        return "every second";\n    };\n    en.prototype.everyX0Seconds = function () {\n        return "every %s seconds";\n    };\n    en.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "seconds %s through %s past the minute";\n    };\n    en.prototype.atX0SecondsPastTheMinute = function () {\n        return "at %s seconds past the minute";\n    };\n    en.prototype.everyX0Minutes = function () {\n        return "every %s minutes";\n    };\n    en.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minutes %s through %s past the hour";\n    };\n    en.prototype.atX0MinutesPastTheHour = function () {\n        return "at %s minutes past the hour";\n    };\n    en.prototype.everyX0Hours = function () {\n        return "every %s hours";\n    };\n    en.prototype.betweenX0AndX1 = function () {\n        return "between %s and %s";\n    };\n    en.prototype.atX0 = function () {\n        return "at %s";\n    };\n    en.prototype.commaEveryDay = function () {\n        return ", every day";\n    };\n    en.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", every %s days of the week";\n    };\n    en.prototype.commaX0ThroughX1 = function () {\n        return ", %s through %s";\n    };\n    en.prototype.first = function () {\n        return "first";\n    };\n    en.prototype.second = function () {\n        return "second";\n    };\n    en.prototype.third = function () {\n        return "third";\n    };\n    en.prototype.fourth = function () {\n        return "fourth";\n    };\n    en.prototype.fifth = function () {\n        return "fifth";\n    };\n    en.prototype.commaOnThe = function () {\n        return ", on the ";\n    };\n    en.prototype.spaceX0OfTheMonth = function () {\n        return " %s of the month";\n    };\n    en.prototype.lastDay = function () {\n        return "the last day";\n    };\n    en.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", on the last %s of the month";\n    };\n    en.prototype.commaOnlyOnX0 = function () {\n        return ", only on %s";\n    };\n    en.prototype.commaAndOnX0 = function () {\n        return ", and on %s";\n    };\n    en.prototype.commaEveryX0Months = function () {\n        return ", every %s months";\n    };\n    en.prototype.commaOnlyInX0 = function () {\n        return ", only in %s";\n    };\n    en.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", on the last day of the month";\n    };\n    en.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", on the last weekday of the month";\n    };\n    en.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s days before the last day of the month";\n    };\n    en.prototype.firstWeekday = function () {\n        return "first weekday";\n    };\n    en.prototype.weekdayNearestDayX0 = function () {\n        return "weekday nearest day %s";\n    };\n    en.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", on the %s of the month";\n    };\n    en.prototype.commaEveryX0Days = function () {\n        return ", every %s days";\n    };\n    en.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", between day %s and %s of the month";\n    };\n    en.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", on day %s of the month";\n    };\n    en.prototype.commaEveryHour = function () {\n        return ", every hour";\n    };\n    en.prototype.commaEveryX0Years = function () {\n        return ", every %s years";\n    };\n    en.prototype.commaStartingX0 = function () {\n        return ", starting %s";\n    };\n    en.prototype.daysOfTheWeek = function () {\n        return ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];\n    };\n    en.prototype.monthsOfTheYear = function () {\n        return [\n            "January",\n            "February",\n            "March",\n            "April",\n            "May",\n            "June",\n            "July",\n            "August",\n            "September",\n            "October",\n            "November",\n            "December",\n        ];\n    };\n    return en;\n}());\nexports.en = en;\n\n\n/***/ }),\n\n/***/ 470:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.es = void 0;\nvar es = (function () {\n    function es() {\n    }\n    es.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    es.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    es.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    es.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    es.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    es.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Ocurrió un error mientras se generaba la descripción de la expresión. Revise la sintaxis de la expresión de cron.";\n    };\n    es.prototype.at = function () {\n        return "A las";\n    };\n    es.prototype.atSpace = function () {\n        return "A las ";\n    };\n    es.prototype.atX0 = function () {\n        return "a las %s";\n    };\n    es.prototype.atX0MinutesPastTheHour = function () {\n        return "a los %s minutos de la hora";\n    };\n    es.prototype.atX0SecondsPastTheMinute = function () {\n        return "a los %s segundos del minuto";\n    };\n    es.prototype.betweenX0AndX1 = function () {\n        return "entre las %s y las %s";\n    };\n    es.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", entre los días %s y %s del mes";\n    };\n    es.prototype.commaEveryDay = function () {\n        return ", cada día";\n    };\n    es.prototype.commaEveryX0Days = function () {\n        return ", cada %s días";\n    };\n    es.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", cada %s días de la semana";\n    };\n    es.prototype.commaEveryX0Months = function () {\n        return ", cada %s meses";\n    };\n    es.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", el día %s del mes";\n    };\n    es.prototype.commaOnlyInX0 = function () {\n        return ", sólo en %s";\n    };\n    es.prototype.commaOnlyOnX0 = function () {\n        return ", sólo el %s";\n    };\n    es.prototype.commaAndOnX0 = function () {\n        return ", y el %s";\n    };\n    es.prototype.commaOnThe = function () {\n        return ", en el ";\n    };\n    es.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", en el último día del mes";\n    };\n    es.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", en el último día de la semana del mes";\n    };\n    es.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s días antes del último día del mes";\n    };\n    es.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", en el último %s del mes";\n    };\n    es.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", en el %s del mes";\n    };\n    es.prototype.commaX0ThroughX1 = function () {\n        return ", de %s a %s";\n    };\n    es.prototype.everyHour = function () {\n        return "cada hora";\n    };\n    es.prototype.everyMinute = function () {\n        return "cada minuto";\n    };\n    es.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "cada minuto entre las %s y las %s";\n    };\n    es.prototype.everySecond = function () {\n        return "cada segundo";\n    };\n    es.prototype.everyX0Hours = function () {\n        return "cada %s horas";\n    };\n    es.prototype.everyX0Minutes = function () {\n        return "cada %s minutos";\n    };\n    es.prototype.everyX0Seconds = function () {\n        return "cada %s segundos";\n    };\n    es.prototype.fifth = function () {\n        return "quinto";\n    };\n    es.prototype.first = function () {\n        return "primero";\n    };\n    es.prototype.firstWeekday = function () {\n        return "primer día de la semana";\n    };\n    es.prototype.fourth = function () {\n        return "cuarto";\n    };\n    es.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "del minuto %s al %s pasada la hora";\n    };\n    es.prototype.second = function () {\n        return "segundo";\n    };\n    es.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "En los segundos %s al %s de cada minuto";\n    };\n    es.prototype.spaceAnd = function () {\n        return " y";\n    };\n    es.prototype.spaceX0OfTheMonth = function () {\n        return " %s del mes";\n    };\n    es.prototype.lastDay = function () {\n        return "el último día";\n    };\n    es.prototype.third = function () {\n        return "tercer";\n    };\n    es.prototype.weekdayNearestDayX0 = function () {\n        return "día de la semana más próximo al %s";\n    };\n    es.prototype.commaEveryX0Years = function () {\n        return ", cada %s años";\n    };\n    es.prototype.commaStartingX0 = function () {\n        return ", comenzando %s";\n    };\n    es.prototype.daysOfTheWeek = function () {\n        return ["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"];\n    };\n    es.prototype.monthsOfTheYear = function () {\n        return [\n            "enero",\n            "febrero",\n            "marzo",\n            "abril",\n            "mayo",\n            "junio",\n            "julio",\n            "agosto",\n            "septiembre",\n            "octubre",\n            "noviembre",\n            "diciembre",\n        ];\n    };\n    return es;\n}());\nexports.es = es;\n\n\n/***/ }),\n\n/***/ 384:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.fa = void 0;\nvar fa = (function () {\n    function fa() {\n    }\n    fa.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    fa.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    fa.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    fa.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    fa.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    fa.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "خطایی در نمایش توضیحات این وظیفه رخ داد. لطفا ساختار آن را بررسی کنید.";\n    };\n    fa.prototype.everyMinute = function () {\n        return "هر دقیقه";\n    };\n    fa.prototype.everyHour = function () {\n        return "هر ساعت";\n    };\n    fa.prototype.atSpace = function () {\n        return "در ";\n    };\n    fa.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "هر دقیقه بین %s و %s";\n    };\n    fa.prototype.at = function () {\n        return "در";\n    };\n    fa.prototype.spaceAnd = function () {\n        return " و";\n    };\n    fa.prototype.everySecond = function () {\n        return "هر ثانیه";\n    };\n    fa.prototype.everyX0Seconds = function () {\n        return "هر %s ثانیه";\n    };\n    fa.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "ثانیه %s تا %s دقیقه گذشته";\n    };\n    fa.prototype.atX0SecondsPastTheMinute = function () {\n        return "در %s قانیه از دقیقه گذشته";\n    };\n    fa.prototype.everyX0Minutes = function () {\n        return "هر %s دقیقه";\n    };\n    fa.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "دقیقه %s تا %s ساعت گذشته";\n    };\n    fa.prototype.atX0MinutesPastTheHour = function () {\n        return "در %s دقیقه پس از ساعت";\n    };\n    fa.prototype.everyX0Hours = function () {\n        return "هر %s ساعت";\n    };\n    fa.prototype.betweenX0AndX1 = function () {\n        return "بین %s و %s";\n    };\n    fa.prototype.atX0 = function () {\n        return "در %s";\n    };\n    fa.prototype.commaEveryDay = function () {\n        return ", هر روز";\n    };\n    fa.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", هر %s روز از هفته";\n    };\n    fa.prototype.commaX0ThroughX1 = function () {\n        return ", %s تا %s";\n    };\n    fa.prototype.first = function () {\n        return "اول";\n    };\n    fa.prototype.second = function () {\n        return "دوم";\n    };\n    fa.prototype.third = function () {\n        return "سوم";\n    };\n    fa.prototype.fourth = function () {\n        return "چهارم";\n    };\n    fa.prototype.fifth = function () {\n        return "پنجم";\n    };\n    fa.prototype.commaOnThe = function () {\n        return ", در ";\n    };\n    fa.prototype.spaceX0OfTheMonth = function () {\n        return " %s ماه";\n    };\n    fa.prototype.lastDay = function () {\n        return "آخرین روز";\n    };\n    fa.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", در %s ماه";\n    };\n    fa.prototype.commaOnlyOnX0 = function () {\n        return ", فقط در %s";\n    };\n    fa.prototype.commaAndOnX0 = function () {\n        return ", و در %s";\n    };\n    fa.prototype.commaEveryX0Months = function () {\n        return ", هر %s ماه";\n    };\n    fa.prototype.commaOnlyInX0 = function () {\n        return ", فقط در %s";\n    };\n    fa.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", در آخرین روز ماه";\n    };\n    fa.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", در آخرین روز ماه";\n    };\n    fa.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s روز قبل از آخرین روز ماه";\n    };\n    fa.prototype.firstWeekday = function () {\n        return "اولین روز";\n    };\n    fa.prototype.weekdayNearestDayX0 = function () {\n        return "روز نزدیک به روز %s";\n    };\n    fa.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", در %s ماه";\n    };\n    fa.prototype.commaEveryX0Days = function () {\n        return ", هر %s روز";\n    };\n    fa.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", بین روز %s و %s ماه";\n    };\n    fa.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", در %s ماه";\n    };\n    fa.prototype.commaEveryMinute = function () {\n        return ", هر minute";\n    };\n    fa.prototype.commaEveryHour = function () {\n        return ", هر ساعت";\n    };\n    fa.prototype.commaEveryX0Years = function () {\n        return ", هر %s سال";\n    };\n    fa.prototype.commaStartingX0 = function () {\n        return ", آغاز %s";\n    };\n    fa.prototype.daysOfTheWeek = function () {\n        return ["یک‌شنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنج‌شنبه", "جمعه", "شنبه"];\n    };\n    fa.prototype.monthsOfTheYear = function () {\n        return ["ژانویه", "فوریه", "مارس", "آپریل", "مه", "ژوئن", "ژوئیه", "آگوست", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"];\n    };\n    return fa;\n}());\nexports.fa = fa;\n\n\n/***/ }),\n\n/***/ 578:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.fi = void 0;\nvar fi = (function () {\n    function fi() {\n    }\n    fi.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    fi.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Virhe kuvauksen generoinnissa. Tarkista cron-syntaksi.";\n    };\n    fi.prototype.at = function () {\n        return "Klo";\n    };\n    fi.prototype.atSpace = function () {\n        return "Klo ";\n    };\n    fi.prototype.atX0 = function () {\n        return "klo %s";\n    };\n    fi.prototype.atX0MinutesPastTheHour = function () {\n        return "%s minuuttia yli";\n    };\n    fi.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return "%s minuuttia yli";\n    };\n    fi.prototype.atX0SecondsPastTheMinute = function () {\n        return "%s sekunnnin jälkeen";\n    };\n    fi.prototype.betweenX0AndX1 = function () {\n        return "%s - %s välillä";\n    };\n    fi.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", kuukauden päivien %s ja %s välillä";\n    };\n    fi.prototype.commaEveryDay = function () {\n        return ", joka päivä";\n    };\n    fi.prototype.commaEveryHour = function () {\n        return ", joka tunti";\n    };\n    fi.prototype.commaEveryMinute = function () {\n        return ", joka minuutti";\n    };\n    fi.prototype.commaEveryX0Days = function () {\n        return ", joka %s. päivä";\n    };\n    fi.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", joka %s. viikonpäivä";\n    };\n    fi.prototype.commaEveryX0Months = function () {\n        return ", joka %s. kuukausi";\n    };\n    fi.prototype.commaEveryX0Years = function () {\n        return ", joka %s. vuosi";\n    };\n    fi.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", kuukauden %s päivä";\n    };\n    fi.prototype.commaOnlyInX0 = function () {\n        return ", vain %s";\n    };\n    fi.prototype.commaOnlyOnX0 = function () {\n        return ", vain %s";\n    };\n    fi.prototype.commaOnThe = function () {\n        return ",";\n    };\n    fi.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", kuukauden viimeisenä päivänä";\n    };\n    fi.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", kuukauden viimeisenä viikonpäivänä";\n    };\n    fi.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", kuukauden viimeinen %s";\n    };\n    fi.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", kuukauden %s";\n    };\n    fi.prototype.commaX0ThroughX1 = function () {\n        return ", %s - %s";\n    };\n    fi.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s päivää ennen kuukauden viimeistä päivää";\n    };\n    fi.prototype.commaStartingX0 = function () {\n        return ", alkaen %s";\n    };\n    fi.prototype.everyHour = function () {\n        return "joka tunti";\n    };\n    fi.prototype.everyMinute = function () {\n        return "joka minuutti";\n    };\n    fi.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "joka minuutti %s - %s välillä";\n    };\n    fi.prototype.everySecond = function () {\n        return "joka sekunti";\n    };\n    fi.prototype.everyX0Hours = function () {\n        return "joka %s. tunti";\n    };\n    fi.prototype.everyX0Minutes = function () {\n        return "joka %s. minuutti";\n    };\n    fi.prototype.everyX0Seconds = function () {\n        return "joka %s. sekunti";\n    };\n    fi.prototype.fifth = function () {\n        return "viides";\n    };\n    fi.prototype.first = function () {\n        return "ensimmäinen";\n    };\n    fi.prototype.firstWeekday = function () {\n        return "ensimmäinen viikonpäivä";\n    };\n    fi.prototype.fourth = function () {\n        return "neljäs";\n    };\n    fi.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "joka tunti minuuttien %s - %s välillä";\n    };\n    fi.prototype.second = function () {\n        return "toinen";\n    };\n    fi.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "joka minuutti sekunttien %s - %s välillä";\n    };\n    fi.prototype.spaceAnd = function () {\n        return " ja";\n    };\n    fi.prototype.spaceAndSpace = function () {\n        return " ja ";\n    };\n    fi.prototype.spaceX0OfTheMonth = function () {\n        return " %s kuukaudessa";\n    };\n    fi.prototype.third = function () {\n        return "kolmas";\n    };\n    fi.prototype.weekdayNearestDayX0 = function () {\n        return "viikonpäivä lähintä %s päivää";\n    };\n    fi.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    fi.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    fi.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    fi.prototype.lastDay = function () {\n        return "viimeinen päivä";\n    };\n    fi.prototype.commaAndOnX0 = function () {\n        return ", ja edelleen %s";\n    };\n    fi.prototype.daysOfTheWeek = function () {\n        return ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"];\n    };\n    fi.prototype.monthsOfTheYear = function () {\n        return [\n            "tammikuu",\n            "helmikuu",\n            "maaliskuu",\n            "huhtikuu",\n            "toukokuu",\n            "kesäkuu",\n            "heinäkuu",\n            "elokuu",\n            "syyskuu",\n            "lokakuu",\n            "marraskuu",\n            "joulukuu",\n        ];\n    };\n    return fi;\n}());\nexports.fi = fi;\n\n\n/***/ }),\n\n/***/ 953:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.fr = void 0;\nvar fr = (function () {\n    function fr() {\n    }\n    fr.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    fr.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    fr.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    fr.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    fr.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    fr.prototype.everyMinute = function () {\n        return "toutes les minutes";\n    };\n    fr.prototype.everyHour = function () {\n        return "toutes les heures";\n    };\n    fr.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Une erreur est survenue en générant la description de l\'expression cron. Vérifiez sa syntaxe.";\n    };\n    fr.prototype.atSpace = function () {\n        return "À ";\n    };\n    fr.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Toutes les minutes entre %s et %s";\n    };\n    fr.prototype.at = function () {\n        return "À";\n    };\n    fr.prototype.spaceAnd = function () {\n        return " et";\n    };\n    fr.prototype.everySecond = function () {\n        return "toutes les secondes";\n    };\n    fr.prototype.everyX0Seconds = function () {\n        return "toutes les %s secondes";\n    };\n    fr.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "les secondes entre %s et %s après la minute";\n    };\n    fr.prototype.atX0SecondsPastTheMinute = function () {\n        return "%s secondes après la minute";\n    };\n    fr.prototype.everyX0Minutes = function () {\n        return "toutes les %s minutes";\n    };\n    fr.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "les minutes entre %s et %s après l\'heure";\n    };\n    fr.prototype.atX0MinutesPastTheHour = function () {\n        return "%s minutes après l\'heure";\n    };\n    fr.prototype.everyX0Hours = function () {\n        return "toutes les %s heures";\n    };\n    fr.prototype.betweenX0AndX1 = function () {\n        return "de %s à %s";\n    };\n    fr.prototype.atX0 = function () {\n        return "à %s";\n    };\n    fr.prototype.commaEveryDay = function () {\n        return ", tous les jours";\n    };\n    fr.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", tous les %s jours de la semaine";\n    };\n    fr.prototype.commaX0ThroughX1 = function () {\n        return ", de %s à %s";\n    };\n    fr.prototype.first = function () {\n        return "premier";\n    };\n    fr.prototype.second = function () {\n        return "second";\n    };\n    fr.prototype.third = function () {\n        return "troisième";\n    };\n    fr.prototype.fourth = function () {\n        return "quatrième";\n    };\n    fr.prototype.fifth = function () {\n        return "cinquième";\n    };\n    fr.prototype.commaOnThe = function () {\n        return ", le ";\n    };\n    fr.prototype.spaceX0OfTheMonth = function () {\n        return " %s du mois";\n    };\n    fr.prototype.lastDay = function () {\n        return "le dernier jour";\n    };\n    fr.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", le dernier %s du mois";\n    };\n    fr.prototype.commaOnlyOnX0 = function () {\n        return ", uniquement le %s";\n    };\n    fr.prototype.commaAndOnX0 = function () {\n        return ", et %s";\n    };\n    fr.prototype.commaEveryX0Months = function () {\n        return ", tous les %s mois";\n    };\n    fr.prototype.commaOnlyInX0 = function () {\n        return ", uniquement en %s";\n    };\n    fr.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", le dernier jour du mois";\n    };\n    fr.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", le dernier jour ouvrable du mois";\n    };\n    fr.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s jours avant le dernier jour du mois";\n    };\n    fr.prototype.firstWeekday = function () {\n        return "premier jour ouvrable";\n    };\n    fr.prototype.weekdayNearestDayX0 = function () {\n        return "jour ouvrable le plus proche du %s";\n    };\n    fr.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", le %s du mois";\n    };\n    fr.prototype.commaEveryX0Days = function () {\n        return ", tous les %s jours";\n    };\n    fr.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", du %s au %s du mois";\n    };\n    fr.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", le %s du mois";\n    };\n    fr.prototype.commaEveryX0Years = function () {\n        return ", tous les %s ans";\n    };\n    fr.prototype.commaDaysX0ThroughX1 = function () {\n        return ", du %s au %s";\n    };\n    fr.prototype.commaStartingX0 = function () {\n        return ", à partir de %s";\n    };\n    fr.prototype.daysOfTheWeek = function () {\n        return ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"];\n    };\n    fr.prototype.monthsOfTheYear = function () {\n        return [\n            "janvier",\n            "février",\n            "mars",\n            "avril",\n            "mai",\n            "juin",\n            "juillet",\n            "août",\n            "septembre",\n            "octobre",\n            "novembre",\n            "décembre",\n        ];\n    };\n    return fr;\n}());\nexports.fr = fr;\n\n\n/***/ }),\n\n/***/ 389:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.he = void 0;\nvar he = (function () {\n    function he() {\n    }\n    he.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    he.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    he.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    he.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    he.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    he.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "אירעה שגיאה בעת יצירת תיאור הביטוי. בדוק את תחביר הביטוי cron.";\n    };\n    he.prototype.everyMinute = function () {\n        return "כל דקה";\n    };\n    he.prototype.everyHour = function () {\n        return "כל שעה";\n    };\n    he.prototype.atSpace = function () {\n        return "ב ";\n    };\n    he.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "כל דקה %s עד %s";\n    };\n    he.prototype.at = function () {\n        return "ב";\n    };\n    he.prototype.spaceAnd = function () {\n        return " ו";\n    };\n    he.prototype.everySecond = function () {\n        return "כל שניה";\n    };\n    he.prototype.everyX0Seconds = function () {\n        return "כל %s שניות";\n    };\n    he.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "%s עד %s שניות של הדקה";\n    };\n    he.prototype.atX0SecondsPastTheMinute = function () {\n        return "ב %s שניות של הדקה";\n    };\n    he.prototype.everyX0Minutes = function () {\n        return "כל %s דקות";\n    };\n    he.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "%s עד %s דקות של השעה";\n    };\n    he.prototype.atX0MinutesPastTheHour = function () {\n        return "ב %s דקות של השעה";\n    };\n    he.prototype.everyX0Hours = function () {\n        return "כל %s שעות";\n    };\n    he.prototype.betweenX0AndX1 = function () {\n        return "%s עד %s";\n    };\n    he.prototype.atX0 = function () {\n        return "ב %s";\n    };\n    he.prototype.commaEveryDay = function () {\n        return ", כל יום";\n    };\n    he.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", כל %s ימים בשבוע";\n    };\n    he.prototype.commaX0ThroughX1 = function () {\n        return ", %s עד %s";\n    };\n    he.prototype.first = function () {\n        return "ראשון";\n    };\n    he.prototype.second = function () {\n        return "שני";\n    };\n    he.prototype.third = function () {\n        return "שלישי";\n    };\n    he.prototype.fourth = function () {\n        return "רביעי";\n    };\n    he.prototype.fifth = function () {\n        return "חמישי";\n    };\n    he.prototype.commaOnThe = function () {\n        return ", ב ";\n    };\n    he.prototype.spaceX0OfTheMonth = function () {\n        return " %s של החודש";\n    };\n    he.prototype.lastDay = function () {\n        return "היום האחרון";\n    };\n    he.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", רק ב %s של החודש";\n    };\n    he.prototype.commaOnlyOnX0 = function () {\n        return ", רק ב %s";\n    };\n    he.prototype.commaAndOnX0 = function () {\n        return ", וב %s";\n    };\n    he.prototype.commaEveryX0Months = function () {\n        return ", כל %s חודשים";\n    };\n    he.prototype.commaOnlyInX0 = function () {\n        return ", רק ב %s";\n    };\n    he.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", ביום האחרון של החודש";\n    };\n    he.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", ביום החול האחרון של החודש";\n    };\n    he.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s ימים לפני היום האחרון בחודש";\n    };\n    he.prototype.firstWeekday = function () {\n        return "יום החול הראשון";\n    };\n    he.prototype.weekdayNearestDayX0 = function () {\n        return "יום החול הראשון הקרוב אל %s";\n    };\n    he.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", ביום ה%s של החודש";\n    };\n    he.prototype.commaEveryX0Days = function () {\n        return ", כל %s ימים";\n    };\n    he.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", בין היום ה%s וה%s של החודש";\n    };\n    he.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", ביום ה%s של החודש";\n    };\n    he.prototype.commaEveryX0Years = function () {\n        return ", כל %s שנים";\n    };\n    he.prototype.commaStartingX0 = function () {\n        return ", החל מ %s";\n    };\n    he.prototype.daysOfTheWeek = function () {\n        return ["יום ראשון", "יום שני", "יום שלישי", "יום רביעי", "יום חמישי", "יום שישי", "יום שבת"];\n    };\n    he.prototype.monthsOfTheYear = function () {\n        return ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"];\n    };\n    return he;\n}());\nexports.he = he;\n\n\n/***/ }),\n\n/***/ 560:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.hu = void 0;\nvar hu = (function () {\n    function hu() {\n    }\n    hu.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    hu.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    hu.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    hu.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    hu.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    hu.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Hiba történt a kifejezésleírás generálásakor. Ellenőrizze a cron kifejezés szintaxisát.";\n    };\n    hu.prototype.everyMinute = function () {\n        return "minden percben";\n    };\n    hu.prototype.everyHour = function () {\n        return "minden órában";\n    };\n    hu.prototype.atSpace = function () {\n        return "Ekkor: ";\n    };\n    hu.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "percenként %s és %s között";\n    };\n    hu.prototype.at = function () {\n        return "Ekkor:";\n    };\n    hu.prototype.spaceAnd = function () {\n        return " és";\n    };\n    hu.prototype.everySecond = function () {\n        return "minden másodpercben";\n    };\n    hu.prototype.everyX0Seconds = function () {\n        return "%s másodpercenként";\n    };\n    hu.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "%s. másodpercben %s perc után";\n    };\n    hu.prototype.atX0SecondsPastTheMinute = function () {\n        return "%s. másodpercben";\n    };\n    hu.prototype.everyX0Minutes = function () {\n        return "minden %s. percben";\n    };\n    hu.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "%s. percben %s óra után";\n    };\n    hu.prototype.atX0MinutesPastTheHour = function () {\n        return "%s. percben";\n    };\n    hu.prototype.everyX0Hours = function () {\n        return "minden %s órában";\n    };\n    hu.prototype.betweenX0AndX1 = function () {\n        return "%s és %s között";\n    };\n    hu.prototype.atX0 = function () {\n        return "ekkor %s";\n    };\n    hu.prototype.commaEveryDay = function () {\n        return ", minden nap";\n    };\n    hu.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", a hét minden %s napján";\n    };\n    hu.prototype.commaX0ThroughX1 = function () {\n        return ", %s - %s";\n    };\n    hu.prototype.first = function () {\n        return "első";\n    };\n    hu.prototype.second = function () {\n        return "második";\n    };\n    hu.prototype.third = function () {\n        return "harmadik";\n    };\n    hu.prototype.fourth = function () {\n        return "negyedik";\n    };\n    hu.prototype.fifth = function () {\n        return "ötödik";\n    };\n    hu.prototype.commaOnThe = function () {\n        return ", ";\n    };\n    hu.prototype.spaceX0OfTheMonth = function () {\n        return " %s a hónapban";\n    };\n    hu.prototype.lastDay = function () {\n        return "az utolsó nap";\n    };\n    hu.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", a hónap utolsó %s";\n    };\n    hu.prototype.commaOnlyOnX0 = function () {\n        return ", csak ekkor: %s";\n    };\n    hu.prototype.commaAndOnX0 = function () {\n        return ", és %s";\n    };\n    hu.prototype.commaEveryX0Months = function () {\n        return ", minden %s hónapban";\n    };\n    hu.prototype.commaOnlyInX0 = function () {\n        return ", csak ekkor: %s";\n    };\n    hu.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", a hónap utolsó napján";\n    };\n    hu.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", a hónap utolsó hétköznapján";\n    };\n    hu.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s nappal a hónap utolsó napja előtt";\n    };\n    hu.prototype.firstWeekday = function () {\n        return "első hétköznap";\n    };\n    hu.prototype.weekdayNearestDayX0 = function () {\n        return "hétköznap legközelebbi nap %s";\n    };\n    hu.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", a hónap %s";\n    };\n    hu.prototype.commaEveryX0Days = function () {\n        return ", %s naponként";\n    };\n    hu.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", a hónap %s és %s napja között";\n    };\n    hu.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", a hónap %s napján";\n    };\n    hu.prototype.commaEveryHour = function () {\n        return ", minden órában";\n    };\n    hu.prototype.commaEveryX0Years = function () {\n        return ", %s évente";\n    };\n    hu.prototype.commaStartingX0 = function () {\n        return ", %s kezdettel";\n    };\n    hu.prototype.daysOfTheWeek = function () {\n        return ["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"];\n    };\n    hu.prototype.monthsOfTheYear = function () {\n        return [\n            "január",\n            "február",\n            "március",\n            "április",\n            "május",\n            "június",\n            "július",\n            "augusztus",\n            "szeptember",\n            "október",\n            "november",\n            "december",\n        ];\n    };\n    return hu;\n}());\nexports.hu = hu;\n\n\n/***/ }),\n\n/***/ 258:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.id = void 0;\nvar id = (function () {\n    function id() {\n    }\n    id.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    id.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    id.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    id.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    id.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    id.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Terjadi kesalahan saat membuat deskripsi ekspresi. Periksa sintaks ekspresi cron.";\n    };\n    id.prototype.everyMinute = function () {\n        return "setiap menit";\n    };\n    id.prototype.everyHour = function () {\n        return "setiap jam";\n    };\n    id.prototype.atSpace = function () {\n        return "Pada ";\n    };\n    id.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Setiap menit diantara %s dan %s";\n    };\n    id.prototype.at = function () {\n        return "Pada";\n    };\n    id.prototype.spaceAnd = function () {\n        return " dan";\n    };\n    id.prototype.everySecond = function () {\n        return "setiap detik";\n    };\n    id.prototype.everyX0Seconds = function () {\n        return "setiap %s detik";\n    };\n    id.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "detik ke %s sampai %s melewati menit";\n    };\n    id.prototype.atX0SecondsPastTheMinute = function () {\n        return "pada %s detik lewat satu menit";\n    };\n    id.prototype.everyX0Minutes = function () {\n        return "setiap %s menit";\n    };\n    id.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "menit ke %s sampai %s melewati jam";\n    };\n    id.prototype.atX0MinutesPastTheHour = function () {\n        return "pada %s menit melewati jam";\n    };\n    id.prototype.everyX0Hours = function () {\n        return "setiap %s jam";\n    };\n    id.prototype.betweenX0AndX1 = function () {\n        return "diantara %s dan %s";\n    };\n    id.prototype.atX0 = function () {\n        return "pada %s";\n    };\n    id.prototype.commaEveryDay = function () {\n        return ", setiap hari";\n    };\n    id.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", setiap hari %s  dalam seminggu";\n    };\n    id.prototype.commaX0ThroughX1 = function () {\n        return ", %s sampai %s";\n    };\n    id.prototype.first = function () {\n        return "pertama";\n    };\n    id.prototype.second = function () {\n        return "kedua";\n    };\n    id.prototype.third = function () {\n        return "ketiga";\n    };\n    id.prototype.fourth = function () {\n        return "keempat";\n    };\n    id.prototype.fifth = function () {\n        return "kelima";\n    };\n    id.prototype.commaOnThe = function () {\n        return ", di ";\n    };\n    id.prototype.spaceX0OfTheMonth = function () {\n        return " %s pada bulan";\n    };\n    id.prototype.lastDay = function () {\n        return "hari terakhir";\n    };\n    id.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", pada %s terakhir bulan ini";\n    };\n    id.prototype.commaOnlyOnX0 = function () {\n        return ", hanya pada %s";\n    };\n    id.prototype.commaAndOnX0 = function () {\n        return ", dan pada %s";\n    };\n    id.prototype.commaEveryX0Months = function () {\n        return ", setiap bulan %s ";\n    };\n    id.prototype.commaOnlyInX0 = function () {\n        return ", hanya pada %s";\n    };\n    id.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", pada hari terakhir bulan ini";\n    };\n    id.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", pada hari kerja terakhir setiap bulan";\n    };\n    id.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s hari sebelum hari terakhir setiap bulan";\n    };\n    id.prototype.firstWeekday = function () {\n        return "hari kerja pertama";\n    };\n    id.prototype.weekdayNearestDayX0 = function () {\n        return "hari kerja terdekat %s";\n    };\n    id.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", pada %s bulan ini";\n    };\n    id.prototype.commaEveryX0Days = function () {\n        return ", setiap %s hari";\n    };\n    id.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", antara hari %s dan %s dalam sebulan";\n    };\n    id.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", pada hari %s dalam sebulan";\n    };\n    id.prototype.commaEveryHour = function () {\n        return ", setiap jam";\n    };\n    id.prototype.commaEveryX0Years = function () {\n        return ", setiap %s tahun";\n    };\n    id.prototype.commaStartingX0 = function () {\n        return ", mulai pada %s";\n    };\n    id.prototype.daysOfTheWeek = function () {\n        return ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"];\n    };\n    id.prototype.monthsOfTheYear = function () {\n        return [\n            "Januari",\n            "Februari",\n            "Maret",\n            "April",\n            "Mei",\n            "Juni",\n            "Juli",\n            "Agustus",\n            "September",\n            "Oktober",\n            "November",\n            "Desember",\n        ];\n    };\n    return id;\n}());\nexports.id = id;\n\n\n/***/ }),\n\n/***/ 128:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.it = void 0;\nvar it = (function () {\n    function it() {\n    }\n    it.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    it.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    it.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    it.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    it.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    it.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "È verificato un errore durante la generazione la descrizione espressione. Controllare la sintassi delle espressioni cron.";\n    };\n    it.prototype.at = function () {\n        return "Alle";\n    };\n    it.prototype.atSpace = function () {\n        return "Alle ";\n    };\n    it.prototype.atX0 = function () {\n        return "alle %s";\n    };\n    it.prototype.atX0MinutesPastTheHour = function () {\n        return "al %s minuto passata l\'ora";\n    };\n    it.prototype.atX0SecondsPastTheMinute = function () {\n        return "al %s secondo passato il minuto";\n    };\n    it.prototype.betweenX0AndX1 = function () {\n        return "tra le %s e le %s";\n    };\n    it.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", tra il giorno %s e %s del mese";\n    };\n    it.prototype.commaEveryDay = function () {\n        return ", ogni giorno";\n    };\n    it.prototype.commaEveryX0Days = function () {\n        return ", ogni %s giorni";\n    };\n    it.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", ogni %s giorni della settimana";\n    };\n    it.prototype.commaEveryX0Months = function () {\n        return ", ogni %s mesi";\n    };\n    it.prototype.commaEveryX0Years = function () {\n        return ", ogni %s anni";\n    };\n    it.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", il giorno %s del mese";\n    };\n    it.prototype.commaOnlyInX0 = function () {\n        return ", solo in %s";\n    };\n    it.prototype.commaOnlyOnX0 = function () {\n        return ", solo il %s";\n    };\n    it.prototype.commaAndOnX0 = function () {\n        return ", e il %s";\n    };\n    it.prototype.commaOnThe = function () {\n        return ", il ";\n    };\n    it.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", l\'ultimo giorno del mese";\n    };\n    it.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", nell\'ultima settimana del mese";\n    };\n    it.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s giorni prima dell\'ultimo giorno del mese";\n    };\n    it.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", l\'ultimo %s del mese";\n    };\n    it.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", il %s del mese";\n    };\n    it.prototype.commaX0ThroughX1 = function () {\n        return ", %s al %s";\n    };\n    it.prototype.everyHour = function () {\n        return "ogni ora";\n    };\n    it.prototype.everyMinute = function () {\n        return "ogni minuto";\n    };\n    it.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Ogni minuto tra le %s e le %s";\n    };\n    it.prototype.everySecond = function () {\n        return "ogni secondo";\n    };\n    it.prototype.everyX0Hours = function () {\n        return "ogni %s ore";\n    };\n    it.prototype.everyX0Minutes = function () {\n        return "ogni %s minuti";\n    };\n    it.prototype.everyX0Seconds = function () {\n        return "ogni %s secondi";\n    };\n    it.prototype.fifth = function () {\n        return "quinto";\n    };\n    it.prototype.first = function () {\n        return "primo";\n    };\n    it.prototype.firstWeekday = function () {\n        return "primo giorno della settimana";\n    };\n    it.prototype.fourth = function () {\n        return "quarto";\n    };\n    it.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minuti %s al %s dopo l\'ora";\n    };\n    it.prototype.second = function () {\n        return "secondo";\n    };\n    it.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "secondi %s al %s oltre il minuto";\n    };\n    it.prototype.spaceAnd = function () {\n        return " e";\n    };\n    it.prototype.spaceX0OfTheMonth = function () {\n        return " %s del mese";\n    };\n    it.prototype.lastDay = function () {\n        return "l\'ultimo giorno";\n    };\n    it.prototype.third = function () {\n        return "terzo";\n    };\n    it.prototype.weekdayNearestDayX0 = function () {\n        return "giorno della settimana più vicino al %s";\n    };\n    it.prototype.commaStartingX0 = function () {\n        return ", a partire %s";\n    };\n    it.prototype.daysOfTheWeek = function () {\n        return ["domenica", "lunedì", "martedì", "mercoledì", "giovedì", "venerdì", "sabato"];\n    };\n    it.prototype.monthsOfTheYear = function () {\n        return [\n            "gennaio",\n            "febbraio",\n            "marzo",\n            "aprile",\n            "maggio",\n            "giugno",\n            "luglio",\n            "agosto",\n            "settembre",\n            "ottobre",\n            "novembre",\n            "dicembre",\n        ];\n    };\n    return it;\n}());\nexports.it = it;\n\n\n/***/ }),\n\n/***/ 949:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ja = void 0;\nvar ja = (function () {\n    function ja() {\n    }\n    ja.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    ja.prototype.everyMinute = function () {\n        return "毎分";\n    };\n    ja.prototype.everyHour = function () {\n        return "毎時";\n    };\n    ja.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "式の記述を生成する際にエラーが発生しました。Cron 式の構文を確認してください。";\n    };\n    ja.prototype.atSpace = function () {\n        return "次において実施";\n    };\n    ja.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "%s から %s まで毎分";\n    };\n    ja.prototype.at = function () {\n        return "次において実施";\n    };\n    ja.prototype.spaceAnd = function () {\n        return "と";\n    };\n    ja.prototype.everySecond = function () {\n        return "毎秒";\n    };\n    ja.prototype.everyX0Seconds = function () {\n        return "%s 秒ごと";\n    };\n    ja.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "毎分 %s 秒から %s 秒まで";\n    };\n    ja.prototype.atX0SecondsPastTheMinute = function () {\n        return "毎分 %s 秒過ぎ";\n    };\n    ja.prototype.everyX0Minutes = function () {\n        return "%s 分ごと";\n    };\n    ja.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "毎時 %s 分から %s 分まで";\n    };\n    ja.prototype.atX0MinutesPastTheHour = function () {\n        return "毎時 %s 分過ぎ";\n    };\n    ja.prototype.everyX0Hours = function () {\n        return "%s 時間ごと";\n    };\n    ja.prototype.betweenX0AndX1 = function () {\n        return "%s と %s の間";\n    };\n    ja.prototype.atX0 = function () {\n        return "次において実施 %s";\n    };\n    ja.prototype.commaEveryDay = function () {\n        return "、毎日";\n    };\n    ja.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return "、週のうち %s 日ごと";\n    };\n    ja.prototype.commaX0ThroughX1 = function () {\n        return "、%s から %s まで";\n    };\n    ja.prototype.first = function () {\n        return "1 番目";\n    };\n    ja.prototype.second = function () {\n        return "2 番目";\n    };\n    ja.prototype.third = function () {\n        return "3 番目";\n    };\n    ja.prototype.fourth = function () {\n        return "4 番目";\n    };\n    ja.prototype.fifth = function () {\n        return "5 番目";\n    };\n    ja.prototype.commaOnThe = function () {\n        return "次に";\n    };\n    ja.prototype.spaceX0OfTheMonth = function () {\n        return "月のうち %s";\n    };\n    ja.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return "月の最後の %s に";\n    };\n    ja.prototype.commaOnlyOnX0 = function () {\n        return "%s にのみ";\n    };\n    ja.prototype.commaEveryX0Months = function () {\n        return "、%s か月ごと";\n    };\n    ja.prototype.commaOnlyInX0 = function () {\n        return "%s でのみ";\n    };\n    ja.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return "次の最終日に";\n    };\n    ja.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return "月の最後の平日に";\n    };\n    ja.prototype.firstWeekday = function () {\n        return "最初の平日";\n    };\n    ja.prototype.weekdayNearestDayX0 = function () {\n        return "%s 日の直近の平日";\n    };\n    ja.prototype.commaOnTheX0OfTheMonth = function () {\n        return "月の %s に";\n    };\n    ja.prototype.commaEveryX0Days = function () {\n        return "、%s 日ごと";\n    };\n    ja.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return "、月の %s 日から %s 日の間";\n    };\n    ja.prototype.commaOnDayX0OfTheMonth = function () {\n        return "、月の %s 日目";\n    };\n    ja.prototype.spaceAndSpace = function () {\n        return "と";\n    };\n    ja.prototype.commaEveryMinute = function () {\n        return "、毎分";\n    };\n    ja.prototype.commaEveryHour = function () {\n        return "、毎時";\n    };\n    ja.prototype.commaEveryX0Years = function () {\n        return "、%s 年ごと";\n    };\n    ja.prototype.commaStartingX0 = function () {\n        return "、%s に開始";\n    };\n    ja.prototype.aMPeriod = function () {\n        return "AM";\n    };\n    ja.prototype.pMPeriod = function () {\n        return "PM";\n    };\n    ja.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return "月の最終日の %s 日前";\n    };\n    ja.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    ja.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    ja.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    ja.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    ja.prototype.lastDay = function () {\n        return "最終日";\n    };\n    ja.prototype.commaAndOnX0 = function () {\n        return "、〜と %s";\n    };\n    ja.prototype.daysOfTheWeek = function () {\n        return ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"];\n    };\n    ja.prototype.monthsOfTheYear = function () {\n        return ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"];\n    };\n    return ja;\n}());\nexports.ja = ja;\n\n\n/***/ }),\n\n/***/ 305:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ko = void 0;\nvar ko = (function () {\n    function ko() {\n    }\n    ko.prototype.setPeriodBeforeTime = function () {\n        return true;\n    };\n    ko.prototype.pm = function () {\n        return "오후";\n    };\n    ko.prototype.am = function () {\n        return "오전";\n    };\n    ko.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    ko.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    ko.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    ko.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    ko.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    ko.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "표현식 설명을 생성하는 중 오류가 발생했습니다. cron 표현식 구문을 확인하십시오.";\n    };\n    ko.prototype.everyMinute = function () {\n        return "1분마다";\n    };\n    ko.prototype.everyHour = function () {\n        return "1시간마다";\n    };\n    ko.prototype.atSpace = function () {\n        return "에서 ";\n    };\n    ko.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "%s 및 %s 사이에 매 분";\n    };\n    ko.prototype.at = function () {\n        return "에서";\n    };\n    ko.prototype.spaceAnd = function () {\n        return " 및";\n    };\n    ko.prototype.everySecond = function () {\n        return "1초마다";\n    };\n    ko.prototype.everyX0Seconds = function () {\n        return "%s초마다";\n    };\n    ko.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "정분 후 %s초에서 %s초까지";\n    };\n    ko.prototype.atX0SecondsPastTheMinute = function () {\n        return "정분 후 %s초에서";\n    };\n    ko.prototype.everyX0Minutes = function () {\n        return "%s분마다";\n    };\n    ko.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "정시 후 %s분에서 %s까지";\n    };\n    ko.prototype.atX0MinutesPastTheHour = function () {\n        return "정시 후 %s분에서";\n    };\n    ko.prototype.everyX0Hours = function () {\n        return "%s시간마다";\n    };\n    ko.prototype.betweenX0AndX1 = function () {\n        return "%s에서 %s 사이";\n    };\n    ko.prototype.atX0 = function () {\n        return "%s에서";\n    };\n    ko.prototype.commaEveryDay = function () {\n        return ", 매일";\n    };\n    ko.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", 주 중 %s일마다";\n    };\n    ko.prototype.commaX0ThroughX1 = function () {\n        return ", %s에서 %s까지";\n    };\n    ko.prototype.first = function () {\n        return "첫 번째";\n    };\n    ko.prototype.second = function () {\n        return "두 번째";\n    };\n    ko.prototype.third = function () {\n        return "세 번째";\n    };\n    ko.prototype.fourth = function () {\n        return "네 번째";\n    };\n    ko.prototype.fifth = function () {\n        return "다섯 번째";\n    };\n    ko.prototype.commaOnThe = function () {\n        return ", 해당 ";\n    };\n    ko.prototype.spaceX0OfTheMonth = function () {\n        return " 해당 월의 %s";\n    };\n    ko.prototype.lastDay = function () {\n        return "마지막 날";\n    };\n    ko.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", 해당 월의 마지막 %s";\n    };\n    ko.prototype.commaOnlyOnX0 = function () {\n        return ", %s에만";\n    };\n    ko.prototype.commaAndOnX0 = function () {\n        return ", 및 %s에";\n    };\n    ko.prototype.commaEveryX0Months = function () {\n        return ", %s개월마다";\n    };\n    ko.prototype.commaOnlyInX0 = function () {\n        return ", %s에서만";\n    };\n    ko.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", 해당 월의 마지막 날에";\n    };\n    ko.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", 해당 월의 마지막 평일에";\n    };\n    ko.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", 해당 월의 마지막 날 %s일 전";\n    };\n    ko.prototype.firstWeekday = function () {\n        return "첫 번째 평일";\n    };\n    ko.prototype.weekdayNearestDayX0 = function () {\n        return "평일 가장 가까운 날 %s";\n    };\n    ko.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", 해당 월의 %s에";\n    };\n    ko.prototype.commaEveryX0Days = function () {\n        return ", %s일마다";\n    };\n    ko.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", 해당 월의 %s일 및 %s일 사이";\n    };\n    ko.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", 해당 월의 %s일에";\n    };\n    ko.prototype.commaEveryMinute = function () {\n        return ", 1분마다";\n    };\n    ko.prototype.commaEveryHour = function () {\n        return ", 1시간마다";\n    };\n    ko.prototype.commaEveryX0Years = function () {\n        return ", %s년마다";\n    };\n    ko.prototype.commaStartingX0 = function () {\n        return ", %s부터";\n    };\n    ko.prototype.daysOfTheWeek = function () {\n        return ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"];\n    };\n    ko.prototype.monthsOfTheYear = function () {\n        return ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"];\n    };\n    return ko;\n}());\nexports.ko = ko;\n\n\n/***/ }),\n\n/***/ 869:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.nb = void 0;\nvar nb = (function () {\n    function nb() {\n    }\n    nb.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    nb.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    nb.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    nb.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    nb.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    nb.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "En feil inntraff ved generering av uttrykksbeskrivelse. Sjekk cron syntaks.";\n    };\n    nb.prototype.at = function () {\n        return "Kl.";\n    };\n    nb.prototype.atSpace = function () {\n        return "Kl.";\n    };\n    nb.prototype.atX0 = function () {\n        return "på %s";\n    };\n    nb.prototype.atX0MinutesPastTheHour = function () {\n        return "på %s minutter etter timen";\n    };\n    nb.prototype.atX0SecondsPastTheMinute = function () {\n        return "på %s sekunder etter minuttet";\n    };\n    nb.prototype.betweenX0AndX1 = function () {\n        return "mellom %s og %s";\n    };\n    nb.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", mellom dag %s og %s av måneden";\n    };\n    nb.prototype.commaEveryDay = function () {\n        return ", hver dag";\n    };\n    nb.prototype.commaEveryX0Days = function () {\n        return ", hver %s dag";\n    };\n    nb.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", hver %s ukedag";\n    };\n    nb.prototype.commaEveryX0Months = function () {\n        return ", hver %s måned";\n    };\n    nb.prototype.commaEveryX0Years = function () {\n        return ", hvert %s år";\n    };\n    nb.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", på dag %s av måneden";\n    };\n    nb.prototype.commaOnlyInX0 = function () {\n        return ", bare i %s";\n    };\n    nb.prototype.commaOnlyOnX0 = function () {\n        return ", på %s";\n    };\n    nb.prototype.commaAndOnX0 = function () {\n        return ", og på %s";\n    };\n    nb.prototype.commaOnThe = function () {\n        return ", på ";\n    };\n    nb.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", på den siste dagen i måneden";\n    };\n    nb.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", den siste ukedagen i måneden";\n    };\n    nb.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dager før den siste dagen i måneden";\n    };\n    nb.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", på den siste %s av måneden";\n    };\n    nb.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", på den %s av måneden";\n    };\n    nb.prototype.commaX0ThroughX1 = function () {\n        return ", %s til og med %s";\n    };\n    nb.prototype.everyHour = function () {\n        return "hver time";\n    };\n    nb.prototype.everyMinute = function () {\n        return "hvert minutt";\n    };\n    nb.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Hvert minutt mellom %s og %s";\n    };\n    nb.prototype.everySecond = function () {\n        return "hvert sekund";\n    };\n    nb.prototype.everyX0Hours = function () {\n        return "hver %s time";\n    };\n    nb.prototype.everyX0Minutes = function () {\n        return "hvert %s minutt";\n    };\n    nb.prototype.everyX0Seconds = function () {\n        return "hvert %s sekund";\n    };\n    nb.prototype.fifth = function () {\n        return "femte";\n    };\n    nb.prototype.first = function () {\n        return "første";\n    };\n    nb.prototype.firstWeekday = function () {\n        return "første ukedag";\n    };\n    nb.prototype.fourth = function () {\n        return "fjerde";\n    };\n    nb.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minuttene fra %s til og med %s etter timen";\n    };\n    nb.prototype.second = function () {\n        return "sekund";\n    };\n    nb.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekundene fra %s til og med %s etter minuttet";\n    };\n    nb.prototype.spaceAnd = function () {\n        return " og";\n    };\n    nb.prototype.spaceX0OfTheMonth = function () {\n        return " %s i måneden";\n    };\n    nb.prototype.lastDay = function () {\n        return "den siste dagen";\n    };\n    nb.prototype.third = function () {\n        return "tredje";\n    };\n    nb.prototype.weekdayNearestDayX0 = function () {\n        return "ukedag nærmest dag %s";\n    };\n    nb.prototype.commaStartingX0 = function () {\n        return ", starter %s";\n    };\n    nb.prototype.daysOfTheWeek = function () {\n        return ["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"];\n    };\n    nb.prototype.monthsOfTheYear = function () {\n        return [\n            "januar",\n            "februar",\n            "mars",\n            "april",\n            "mai",\n            "juni",\n            "juli",\n            "august",\n            "september",\n            "oktober",\n            "november",\n            "desember",\n        ];\n    };\n    return nb;\n}());\nexports.nb = nb;\n\n\n/***/ }),\n\n/***/ 771:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.nl = void 0;\nvar nl = (function () {\n    function nl() {\n    }\n    nl.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    nl.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    nl.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    nl.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    nl.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    nl.prototype.everyMinute = function () {\n        return "elke minuut";\n    };\n    nl.prototype.everyHour = function () {\n        return "elk uur";\n    };\n    nl.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Er is een fout opgetreden bij het vertalen van de gegevens. Controleer de gegevens.";\n    };\n    nl.prototype.atSpace = function () {\n        return "Op ";\n    };\n    nl.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Elke minuut tussen %s en %s";\n    };\n    nl.prototype.at = function () {\n        return "Op";\n    };\n    nl.prototype.spaceAnd = function () {\n        return " en";\n    };\n    nl.prototype.everySecond = function () {\n        return "elke seconde";\n    };\n    nl.prototype.everyX0Seconds = function () {\n        return "elke %s seconden";\n    };\n    nl.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "seconden %s t/m %s na de minuut";\n    };\n    nl.prototype.atX0SecondsPastTheMinute = function () {\n        return "op %s seconden na de minuut";\n    };\n    nl.prototype.everyX0Minutes = function () {\n        return "elke %s minuten";\n    };\n    nl.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minuut %s t/m %s na het uur";\n    };\n    nl.prototype.atX0MinutesPastTheHour = function () {\n        return "op %s minuten na het uur";\n    };\n    nl.prototype.everyX0Hours = function () {\n        return "elke %s uur";\n    };\n    nl.prototype.betweenX0AndX1 = function () {\n        return "tussen %s en %s";\n    };\n    nl.prototype.atX0 = function () {\n        return "op %s";\n    };\n    nl.prototype.commaEveryDay = function () {\n        return ", elke dag";\n    };\n    nl.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", elke %s dagen van de week";\n    };\n    nl.prototype.commaX0ThroughX1 = function () {\n        return ", %s t/m %s";\n    };\n    nl.prototype.first = function () {\n        return "eerste";\n    };\n    nl.prototype.second = function () {\n        return "tweede";\n    };\n    nl.prototype.third = function () {\n        return "derde";\n    };\n    nl.prototype.fourth = function () {\n        return "vierde";\n    };\n    nl.prototype.fifth = function () {\n        return "vijfde";\n    };\n    nl.prototype.commaOnThe = function () {\n        return ", op de ";\n    };\n    nl.prototype.spaceX0OfTheMonth = function () {\n        return " %s van de maand";\n    };\n    nl.prototype.lastDay = function () {\n        return "de laatste dag";\n    };\n    nl.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", op de laatste %s van de maand";\n    };\n    nl.prototype.commaOnlyOnX0 = function () {\n        return ", alleen op %s";\n    };\n    nl.prototype.commaAndOnX0 = function () {\n        return ", en op %s";\n    };\n    nl.prototype.commaEveryX0Months = function () {\n        return ", elke %s maanden";\n    };\n    nl.prototype.commaOnlyInX0 = function () {\n        return ", alleen in %s";\n    };\n    nl.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", op de laatste dag van de maand";\n    };\n    nl.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", op de laatste werkdag van de maand";\n    };\n    nl.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dagen vóór de laatste dag van de maand";\n    };\n    nl.prototype.firstWeekday = function () {\n        return "eerste werkdag";\n    };\n    nl.prototype.weekdayNearestDayX0 = function () {\n        return "werkdag dichtst bij dag %s";\n    };\n    nl.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", op de %s van de maand";\n    };\n    nl.prototype.commaEveryX0Days = function () {\n        return ", elke %s dagen";\n    };\n    nl.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", tussen dag %s en %s van de maand";\n    };\n    nl.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", op dag %s van de maand";\n    };\n    nl.prototype.commaEveryX0Years = function () {\n        return ", elke %s jaren";\n    };\n    nl.prototype.commaStartingX0 = function () {\n        return ", beginnend %s";\n    };\n    nl.prototype.daysOfTheWeek = function () {\n        return ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"];\n    };\n    nl.prototype.monthsOfTheYear = function () {\n        return [\n            "januari",\n            "februari",\n            "maart",\n            "april",\n            "mei",\n            "juni",\n            "juli",\n            "augustus",\n            "september",\n            "oktober",\n            "november",\n            "december",\n        ];\n    };\n    return nl;\n}());\nexports.nl = nl;\n\n\n/***/ }),\n\n/***/ 665:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.pl = void 0;\nvar pl = (function () {\n    function pl() {\n    }\n    pl.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    pl.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    pl.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    pl.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    pl.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    pl.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Wystąpił błąd podczas generowania opisu wyrażenia cron. Sprawdź składnię wyrażenia cron.";\n    };\n    pl.prototype.at = function () {\n        return "O";\n    };\n    pl.prototype.atSpace = function () {\n        return "O ";\n    };\n    pl.prototype.atX0 = function () {\n        return "o %s";\n    };\n    pl.prototype.atX0MinutesPastTheHour = function () {\n        return "w %s minucie";\n    };\n    pl.prototype.atX0SecondsPastTheMinute = function () {\n        return "w %s sekundzie";\n    };\n    pl.prototype.betweenX0AndX1 = function () {\n        return "od %s do %s";\n    };\n    pl.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", od %s-ego do %s-ego dnia miesiąca";\n    };\n    pl.prototype.commaEveryDay = function () {\n        return ", co dzień";\n    };\n    pl.prototype.commaEveryX0Days = function () {\n        return ", co %s dni";\n    };\n    pl.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", co %s dni tygodnia";\n    };\n    pl.prototype.commaEveryX0Months = function () {\n        return ", co %s miesięcy";\n    };\n    pl.prototype.commaEveryX0Years = function () {\n        return ", co %s lat";\n    };\n    pl.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", %s-ego dnia miesiąca";\n    };\n    pl.prototype.commaOnlyInX0 = function () {\n        return ", tylko %s";\n    };\n    pl.prototype.commaOnlyOnX0 = function () {\n        return ", tylko %s";\n    };\n    pl.prototype.commaAndOnX0 = function () {\n        return ", i %s";\n    };\n    pl.prototype.commaOnThe = function () {\n        return ", ";\n    };\n    pl.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", ostatni dzień miesiąca";\n    };\n    pl.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", ostatni dzień roboczy miesiąca";\n    };\n    pl.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dni przed ostatnim dniem miesiąca";\n    };\n    pl.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", ostatni %s miesiąca";\n    };\n    pl.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", %s miesiąca";\n    };\n    pl.prototype.commaX0ThroughX1 = function () {\n        return ", od %s do %s";\n    };\n    pl.prototype.everyHour = function () {\n        return "co godzinę";\n    };\n    pl.prototype.everyMinute = function () {\n        return "co minutę";\n    };\n    pl.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Co minutę od %s do %s";\n    };\n    pl.prototype.everySecond = function () {\n        return "co sekundę";\n    };\n    pl.prototype.everyX0Hours = function () {\n        return "co %s godzin";\n    };\n    pl.prototype.everyX0Minutes = function () {\n        return "co %s minut";\n    };\n    pl.prototype.everyX0Seconds = function () {\n        return "co %s sekund";\n    };\n    pl.prototype.fifth = function () {\n        return "piąty";\n    };\n    pl.prototype.first = function () {\n        return "pierwszy";\n    };\n    pl.prototype.firstWeekday = function () {\n        return "pierwszy dzień roboczy";\n    };\n    pl.prototype.fourth = function () {\n        return "czwarty";\n    };\n    pl.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minuty od %s do %s";\n    };\n    pl.prototype.second = function () {\n        return "drugi";\n    };\n    pl.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekundy od %s do %s";\n    };\n    pl.prototype.spaceAnd = function () {\n        return " i";\n    };\n    pl.prototype.spaceX0OfTheMonth = function () {\n        return " %s miesiąca";\n    };\n    pl.prototype.lastDay = function () {\n        return "ostatni dzień";\n    };\n    pl.prototype.third = function () {\n        return "trzeci";\n    };\n    pl.prototype.weekdayNearestDayX0 = function () {\n        return "dzień roboczy najbliższy %s-ego dnia";\n    };\n    pl.prototype.commaStartingX0 = function () {\n        return ", startowy %s";\n    };\n    pl.prototype.daysOfTheWeek = function () {\n        return ["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"];\n    };\n    pl.prototype.monthsOfTheYear = function () {\n        return [\n            "styczeń",\n            "luty",\n            "marzec",\n            "kwiecień",\n            "maj",\n            "czerwiec",\n            "lipiec",\n            "sierpień",\n            "wrzesień",\n            "październik",\n            "listopad",\n            "grudzień",\n        ];\n    };\n    return pl;\n}());\nexports.pl = pl;\n\n\n/***/ }),\n\n/***/ 461:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.pt_BR = void 0;\nvar pt_BR = (function () {\n    function pt_BR() {\n    }\n    pt_BR.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    pt_BR.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    pt_BR.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    pt_BR.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    pt_BR.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    pt_BR.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Ocorreu um erro ao gerar a descrição da expressão Cron.";\n    };\n    pt_BR.prototype.at = function () {\n        return "às";\n    };\n    pt_BR.prototype.atSpace = function () {\n        return "às ";\n    };\n    pt_BR.prototype.atX0 = function () {\n        return "Às %s";\n    };\n    pt_BR.prototype.atX0MinutesPastTheHour = function () {\n        return "aos %s minutos da hora";\n    };\n    pt_BR.prototype.atX0SecondsPastTheMinute = function () {\n        return "aos %s segundos do minuto";\n    };\n    pt_BR.prototype.betweenX0AndX1 = function () {\n        return "entre %s e %s";\n    };\n    pt_BR.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", entre os dias %s e %s do mês";\n    };\n    pt_BR.prototype.commaEveryDay = function () {\n        return ", a cada dia";\n    };\n    pt_BR.prototype.commaEveryX0Days = function () {\n        return ", a cada %s dias";\n    };\n    pt_BR.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", a cada %s dias de semana";\n    };\n    pt_BR.prototype.commaEveryX0Months = function () {\n        return ", a cada %s meses";\n    };\n    pt_BR.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", no dia %s do mês";\n    };\n    pt_BR.prototype.commaOnlyInX0 = function () {\n        return ", somente em %s";\n    };\n    pt_BR.prototype.commaOnlyOnX0 = function () {\n        return ", somente de %s";\n    };\n    pt_BR.prototype.commaAndOnX0 = function () {\n        return ", e de %s";\n    };\n    pt_BR.prototype.commaOnThe = function () {\n        return ", na ";\n    };\n    pt_BR.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", no último dia do mês";\n    };\n    pt_BR.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", no último dia da semana do mês";\n    };\n    pt_BR.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dias antes do último dia do mês";\n    };\n    pt_BR.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", na última %s do mês";\n    };\n    pt_BR.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", no %s do mês";\n    };\n    pt_BR.prototype.commaX0ThroughX1 = function () {\n        return ", de %s a %s";\n    };\n    pt_BR.prototype.everyHour = function () {\n        return "a cada hora";\n    };\n    pt_BR.prototype.everyMinute = function () {\n        return "a cada minuto";\n    };\n    pt_BR.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "a cada minuto entre %s e %s";\n    };\n    pt_BR.prototype.everySecond = function () {\n        return "a cada segundo";\n    };\n    pt_BR.prototype.everyX0Hours = function () {\n        return "a cada %s horas";\n    };\n    pt_BR.prototype.everyX0Minutes = function () {\n        return "a cada %s minutos";\n    };\n    pt_BR.prototype.everyX0Seconds = function () {\n        return "a cada %s segundos";\n    };\n    pt_BR.prototype.fifth = function () {\n        return "quinta";\n    };\n    pt_BR.prototype.first = function () {\n        return "primeira";\n    };\n    pt_BR.prototype.firstWeekday = function () {\n        return "primeiro dia da semana";\n    };\n    pt_BR.prototype.fourth = function () {\n        return "quarta";\n    };\n    pt_BR.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "do minuto %s até %s de cada hora";\n    };\n    pt_BR.prototype.second = function () {\n        return "segunda";\n    };\n    pt_BR.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "No segundo %s até %s de cada minuto";\n    };\n    pt_BR.prototype.spaceAnd = function () {\n        return " e";\n    };\n    pt_BR.prototype.spaceX0OfTheMonth = function () {\n        return " %s do mês";\n    };\n    pt_BR.prototype.lastDay = function () {\n        return "o último dia";\n    };\n    pt_BR.prototype.third = function () {\n        return "terceira";\n    };\n    pt_BR.prototype.weekdayNearestDayX0 = function () {\n        return "dia da semana mais próximo do dia %s";\n    };\n    pt_BR.prototype.commaEveryX0Years = function () {\n        return ", a cada %s anos";\n    };\n    pt_BR.prototype.commaStartingX0 = function () {\n        return ", iniciando %s";\n    };\n    pt_BR.prototype.daysOfTheWeek = function () {\n        return ["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"];\n    };\n    pt_BR.prototype.monthsOfTheYear = function () {\n        return [\n            "janeiro",\n            "fevereiro",\n            "março",\n            "abril",\n            "maio",\n            "junho",\n            "julho",\n            "agosto",\n            "setembro",\n            "outubro",\n            "novembro",\n            "dezembro",\n        ];\n    };\n    return pt_BR;\n}());\nexports.pt_BR = pt_BR;\n\n\n/***/ }),\n\n/***/ 713:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.pt_PT = void 0;\nvar pt_PT = (function () {\n    function pt_PT() {\n    }\n    pt_PT.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    pt_PT.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    pt_PT.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    pt_PT.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    pt_PT.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    pt_PT.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Ocorreu um erro ao gerar a descrição da expressão Cron.";\n    };\n    pt_PT.prototype.at = function () {\n        return "às";\n    };\n    pt_PT.prototype.atSpace = function () {\n        return "às ";\n    };\n    pt_PT.prototype.atX0 = function () {\n        return "Às %s";\n    };\n    pt_PT.prototype.atX0MinutesPastTheHour = function () {\n        return "aos %s minutos da hora";\n    };\n    pt_PT.prototype.atX0SecondsPastTheMinute = function () {\n        return "aos %s segundos do minuto";\n    };\n    pt_PT.prototype.betweenX0AndX1 = function () {\n        return "entre %s e %s";\n    };\n    pt_PT.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", entre os dias %s e %s do mês";\n    };\n    pt_PT.prototype.commaEveryDay = function () {\n        return ", a cada dia";\n    };\n    pt_PT.prototype.commaEveryX0Days = function () {\n        return ", a cada %s dias";\n    };\n    pt_PT.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", a cada %s dias de semana";\n    };\n    pt_PT.prototype.commaEveryX0Months = function () {\n        return ", a cada %s meses";\n    };\n    pt_PT.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", no dia %s do mês";\n    };\n    pt_PT.prototype.commaOnlyInX0 = function () {\n        return ", somente em %s";\n    };\n    pt_PT.prototype.commaOnlyOnX0 = function () {\n        return ", somente de %s";\n    };\n    pt_PT.prototype.commaAndOnX0 = function () {\n        return ", e de %s";\n    };\n    pt_PT.prototype.commaOnThe = function () {\n        return ", na ";\n    };\n    pt_PT.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", no último dia do mês";\n    };\n    pt_PT.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", no último dia da semana do mês";\n    };\n    pt_PT.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dias antes do último dia do mês";\n    };\n    pt_PT.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", na última %s do mês";\n    };\n    pt_PT.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", no %s do mês";\n    };\n    pt_PT.prototype.commaX0ThroughX1 = function () {\n        return ", de %s a %s";\n    };\n    pt_PT.prototype.everyHour = function () {\n        return "a cada hora";\n    };\n    pt_PT.prototype.everyMinute = function () {\n        return "a cada minuto";\n    };\n    pt_PT.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "a cada minuto entre %s e %s";\n    };\n    pt_PT.prototype.everySecond = function () {\n        return "a cada segundo";\n    };\n    pt_PT.prototype.everyX0Hours = function () {\n        return "a cada %s horas";\n    };\n    pt_PT.prototype.everyX0Minutes = function () {\n        return "a cada %s minutos";\n    };\n    pt_PT.prototype.everyX0Seconds = function () {\n        return "a cada %s segundos";\n    };\n    pt_PT.prototype.fifth = function () {\n        return "quinta";\n    };\n    pt_PT.prototype.first = function () {\n        return "primeira";\n    };\n    pt_PT.prototype.firstWeekday = function () {\n        return "primeiro dia da semana";\n    };\n    pt_PT.prototype.fourth = function () {\n        return "quarta";\n    };\n    pt_PT.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "do minuto %s até %s de cada hora";\n    };\n    pt_PT.prototype.second = function () {\n        return "segunda";\n    };\n    pt_PT.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "No segundo %s até %s de cada minuto";\n    };\n    pt_PT.prototype.spaceAnd = function () {\n        return " e";\n    };\n    pt_PT.prototype.spaceX0OfTheMonth = function () {\n        return " %s do mês";\n    };\n    pt_PT.prototype.lastDay = function () {\n        return "o último dia";\n    };\n    pt_PT.prototype.third = function () {\n        return "terceira";\n    };\n    pt_PT.prototype.weekdayNearestDayX0 = function () {\n        return "dia da semana mais próximo do dia %s";\n    };\n    pt_PT.prototype.commaEveryX0Years = function () {\n        return ", a cada %s anos";\n    };\n    pt_PT.prototype.commaStartingX0 = function () {\n        return ", iniciando %s";\n    };\n    pt_PT.prototype.daysOfTheWeek = function () {\n        return ["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"];\n    };\n    pt_PT.prototype.monthsOfTheYear = function () {\n        return [\n            "janeiro",\n            "fevereiro",\n            "março",\n            "abril",\n            "maio",\n            "junho",\n            "julho",\n            "agosto",\n            "setembro",\n            "outubro",\n            "novembro",\n            "dezembro",\n        ];\n    };\n    return pt_PT;\n}());\nexports.pt_PT = pt_PT;\n\n\n/***/ }),\n\n/***/ 408:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ro = void 0;\nvar ro = (function () {\n    function ro() {\n    }\n    ro.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    ro.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Eroare la generarea descrierii. Verificați sintaxa.";\n    };\n    ro.prototype.at = function () {\n        return "La";\n    };\n    ro.prototype.atSpace = function () {\n        return "La ";\n    };\n    ro.prototype.atX0 = function () {\n        return "la %s";\n    };\n    ro.prototype.atX0MinutesPastTheHour = function () {\n        return "la și %s minute";\n    };\n    ro.prototype.atX0SecondsPastTheMinute = function () {\n        return "la și %s secunde";\n    };\n    ro.prototype.betweenX0AndX1 = function () {\n        return "între %s și %s";\n    };\n    ro.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", între zilele %s și %s ale lunii";\n    };\n    ro.prototype.commaEveryDay = function () {\n        return ", în fiecare zi";\n    };\n    ro.prototype.commaEveryX0Days = function () {\n        return ", la fiecare %s zile";\n    };\n    ro.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", la fiecare a %s-a zi a săptămânii";\n    };\n    ro.prototype.commaEveryX0Months = function () {\n        return ", la fiecare %s luni";\n    };\n    ro.prototype.commaEveryX0Years = function () {\n        return ", o dată la %s ani";\n    };\n    ro.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", în ziua %s a lunii";\n    };\n    ro.prototype.commaOnlyInX0 = function () {\n        return ", doar în %s";\n    };\n    ro.prototype.commaOnlyOnX0 = function () {\n        return ", doar %s";\n    };\n    ro.prototype.commaAndOnX0 = function () {\n        return ", și %s";\n    };\n    ro.prototype.commaOnThe = function () {\n        return ", în ";\n    };\n    ro.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", în ultima zi a lunii";\n    };\n    ro.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", în ultima zi lucrătoare a lunii";\n    };\n    ro.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s zile înainte de ultima zi a lunii";\n    };\n    ro.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", în ultima %s a lunii";\n    };\n    ro.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", în %s a lunii";\n    };\n    ro.prototype.commaX0ThroughX1 = function () {\n        return ", de %s până %s";\n    };\n    ro.prototype.everyHour = function () {\n        return "în fiecare oră";\n    };\n    ro.prototype.everyMinute = function () {\n        return "în fiecare minut";\n    };\n    ro.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "În fiecare minut între %s și %s";\n    };\n    ro.prototype.everySecond = function () {\n        return "în fiecare secundă";\n    };\n    ro.prototype.everyX0Hours = function () {\n        return "la fiecare %s ore";\n    };\n    ro.prototype.everyX0Minutes = function () {\n        return "la fiecare %s minute";\n    };\n    ro.prototype.everyX0Seconds = function () {\n        return "la fiecare %s secunde";\n    };\n    ro.prototype.fifth = function () {\n        return "a cincea";\n    };\n    ro.prototype.first = function () {\n        return "prima";\n    };\n    ro.prototype.firstWeekday = function () {\n        return "prima zi a săptămânii";\n    };\n    ro.prototype.fourth = function () {\n        return "a patra";\n    };\n    ro.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "între minutele %s și %s";\n    };\n    ro.prototype.second = function () {\n        return "a doua";\n    };\n    ro.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "între secunda %s și secunda %s";\n    };\n    ro.prototype.spaceAnd = function () {\n        return " și";\n    };\n    ro.prototype.spaceX0OfTheMonth = function () {\n        return " %s a lunii";\n    };\n    ro.prototype.lastDay = function () {\n        return "ultima zi";\n    };\n    ro.prototype.third = function () {\n        return "a treia";\n    };\n    ro.prototype.weekdayNearestDayX0 = function () {\n        return "cea mai apropiată zi a săptămânii de ziua %s";\n    };\n    ro.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return ", din %s până în %s";\n    };\n    ro.prototype.commaYearX0ThroughYearX1 = function () {\n        return ", din %s până în %s";\n    };\n    ro.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return "la și %s de minute";\n    };\n    ro.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return "la și %s de secunde";\n    };\n    ro.prototype.commaStartingX0 = function () {\n        return ", pornire %s";\n    };\n    ro.prototype.daysOfTheWeek = function () {\n        return ["duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă"];\n    };\n    ro.prototype.monthsOfTheYear = function () {\n        return [\n            "ianuarie",\n            "februarie",\n            "martie",\n            "aprilie",\n            "mai",\n            "iunie",\n            "iulie",\n            "august",\n            "septembrie",\n            "octombrie",\n            "noiembrie",\n            "decembrie",\n        ];\n    };\n    return ro;\n}());\nexports.ro = ro;\n\n\n/***/ }),\n\n/***/ 392:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ru = void 0;\nvar ru = (function () {\n    function ru() {\n    }\n    ru.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    ru.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    ru.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    ru.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    ru.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    ru.prototype.everyMinute = function () {\n        return "каждую минуту";\n    };\n    ru.prototype.everyHour = function () {\n        return "каждый час";\n    };\n    ru.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Произошла ошибка во время генерации описания выражения. Проверьте синтаксис крон-выражения.";\n    };\n    ru.prototype.atSpace = function () {\n        return "В ";\n    };\n    ru.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Каждую минуту с %s по %s";\n    };\n    ru.prototype.at = function () {\n        return "В";\n    };\n    ru.prototype.spaceAnd = function () {\n        return " и";\n    };\n    ru.prototype.everySecond = function () {\n        return "каждую секунду";\n    };\n    ru.prototype.everyX0Seconds = function () {\n        return "каждые %s секунд";\n    };\n    ru.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "секунды с %s по %s";\n    };\n    ru.prototype.atX0SecondsPastTheMinute = function () {\n        return "в %s секунд";\n    };\n    ru.prototype.everyX0Minutes = function () {\n        return "каждые %s минут";\n    };\n    ru.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "минуты с %s по %s";\n    };\n    ru.prototype.atX0MinutesPastTheHour = function () {\n        return "в %s минут";\n    };\n    ru.prototype.everyX0Hours = function () {\n        return "каждые %s часов";\n    };\n    ru.prototype.betweenX0AndX1 = function () {\n        return "с %s по %s";\n    };\n    ru.prototype.atX0 = function () {\n        return "в %s";\n    };\n    ru.prototype.commaEveryDay = function () {\n        return ", каждый день";\n    };\n    ru.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", каждые %s дней недели";\n    };\n    ru.prototype.commaX0ThroughX1 = function () {\n        return ", %s по %s";\n    };\n    ru.prototype.first = function () {\n        return "первый";\n    };\n    ru.prototype.second = function () {\n        return "второй";\n    };\n    ru.prototype.third = function () {\n        return "третий";\n    };\n    ru.prototype.fourth = function () {\n        return "четвертый";\n    };\n    ru.prototype.fifth = function () {\n        return "пятый";\n    };\n    ru.prototype.commaOnThe = function () {\n        return ", в ";\n    };\n    ru.prototype.spaceX0OfTheMonth = function () {\n        return " %s месяца";\n    };\n    ru.prototype.lastDay = function () {\n        return "последний день";\n    };\n    ru.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", в последний %s месяца";\n    };\n    ru.prototype.commaOnlyOnX0 = function () {\n        return ", только в %s";\n    };\n    ru.prototype.commaAndOnX0 = function () {\n        return ", и в %s";\n    };\n    ru.prototype.commaEveryX0Months = function () {\n        return ", каждые %s месяцев";\n    };\n    ru.prototype.commaOnlyInX0 = function () {\n        return ", только в %s";\n    };\n    ru.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", в последний день месяца";\n    };\n    ru.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", в последний будний день месяца";\n    };\n    ru.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s дней до последнего дня месяца";\n    };\n    ru.prototype.firstWeekday = function () {\n        return "первый будний день";\n    };\n    ru.prototype.weekdayNearestDayX0 = function () {\n        return "ближайший будний день к %s";\n    };\n    ru.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", в %s месяца";\n    };\n    ru.prototype.commaEveryX0Days = function () {\n        return ", каждые %s дней";\n    };\n    ru.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", с %s по %s число месяца";\n    };\n    ru.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", в %s число месяца";\n    };\n    ru.prototype.commaEveryX0Years = function () {\n        return ", каждые %s лет";\n    };\n    ru.prototype.commaStartingX0 = function () {\n        return ", начало %s";\n    };\n    ru.prototype.daysOfTheWeek = function () {\n        return ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"];\n    };\n    ru.prototype.monthsOfTheYear = function () {\n        return [\n            "январь",\n            "февраль",\n            "март",\n            "апрель",\n            "май",\n            "июнь",\n            "июль",\n            "август",\n            "сентябрь",\n            "октябрь",\n            "ноябрь",\n            "декабрь",\n        ];\n    };\n    return ru;\n}());\nexports.ru = ru;\n\n\n/***/ }),\n\n/***/ 203:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.sk = void 0;\nvar sk = (function () {\n    function sk() {\n    }\n    sk.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    sk.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    sk.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    sk.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    sk.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    sk.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Pri vytváraní popisu došlo k chybe. Skontrolujte prosím správnosť syntaxe cronu.";\n    };\n    sk.prototype.everyMinute = function () {\n        return "každú minútu";\n    };\n    sk.prototype.everyHour = function () {\n        return "každú hodinu";\n    };\n    sk.prototype.atSpace = function () {\n        return "V ";\n    };\n    sk.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Každú minútu medzi %s a %s";\n    };\n    sk.prototype.at = function () {\n        return "V";\n    };\n    sk.prototype.spaceAnd = function () {\n        return " a";\n    };\n    sk.prototype.everySecond = function () {\n        return "každú sekundu";\n    };\n    sk.prototype.everyX0Seconds = function () {\n        return "každých %s sekúnd";\n    };\n    sk.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekundy od %s do %s";\n    };\n    sk.prototype.atX0SecondsPastTheMinute = function () {\n        return "v %s sekúnd";\n    };\n    sk.prototype.everyX0Minutes = function () {\n        return "každých %s minút";\n    };\n    sk.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minúty od %s do %s";\n    };\n    sk.prototype.atX0MinutesPastTheHour = function () {\n        return "v %s minút";\n    };\n    sk.prototype.everyX0Hours = function () {\n        return "každých %s hodín";\n    };\n    sk.prototype.betweenX0AndX1 = function () {\n        return "medzi %s a %s";\n    };\n    sk.prototype.atX0 = function () {\n        return "v %s";\n    };\n    sk.prototype.commaEveryDay = function () {\n        return ", každý deň";\n    };\n    sk.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", každých %s dní v týždni";\n    };\n    sk.prototype.commaX0ThroughX1 = function () {\n        return ", od %s do %s";\n    };\n    sk.prototype.first = function () {\n        return "prvý";\n    };\n    sk.prototype.second = function () {\n        return "druhý";\n    };\n    sk.prototype.third = function () {\n        return "tretí";\n    };\n    sk.prototype.fourth = function () {\n        return "štvrtý";\n    };\n    sk.prototype.fifth = function () {\n        return "piaty";\n    };\n    sk.prototype.commaOnThe = function () {\n        return ", ";\n    };\n    sk.prototype.spaceX0OfTheMonth = function () {\n        return " %s v mesiaci";\n    };\n    sk.prototype.lastDay = function () {\n        return "posledný deň";\n    };\n    sk.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", posledný %s v mesiaci";\n    };\n    sk.prototype.commaOnlyOnX0 = function () {\n        return ", iba v %s";\n    };\n    sk.prototype.commaAndOnX0 = function () {\n        return ", a v %s";\n    };\n    sk.prototype.commaEveryX0Months = function () {\n        return ", každých %s mesiacov";\n    };\n    sk.prototype.commaOnlyInX0 = function () {\n        return ", iba v %s";\n    };\n    sk.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", posledný deň v mesiaci";\n    };\n    sk.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", posledný pracovný deň v mesiaci";\n    };\n    sk.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dní pred posledným dňom v mesiaci";\n    };\n    sk.prototype.firstWeekday = function () {\n        return "prvý pracovný deň";\n    };\n    sk.prototype.weekdayNearestDayX0 = function () {\n        return "pracovný deň najbližšie %s. dňu";\n    };\n    sk.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", v %s v mesiaci";\n    };\n    sk.prototype.commaEveryX0Days = function () {\n        return ", každých %s dní";\n    };\n    sk.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", medzi dňami %s a %s v mesiaci";\n    };\n    sk.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", %s. deň v mesiaci";\n    };\n    sk.prototype.commaEveryX0Years = function () {\n        return ", každých %s rokov";\n    };\n    sk.prototype.commaStartingX0 = function () {\n        return ", začínajúcich %s";\n    };\n    sk.prototype.daysOfTheWeek = function () {\n        return ["Nedeľa", "Pondelok", "Utorok", "Streda", "Štvrtok", "Piatok", "Sobota"];\n    };\n    sk.prototype.monthsOfTheYear = function () {\n        return [\n            "Január",\n            "Február",\n            "Marec",\n            "Apríl",\n            "Máj",\n            "Jún",\n            "Júl",\n            "August",\n            "September",\n            "Október",\n            "November",\n            "December",\n        ];\n    };\n    return sk;\n}());\nexports.sk = sk;\n\n\n/***/ }),\n\n/***/ 738:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.sl = void 0;\nvar sl = (function () {\n    function sl() {\n    }\n    sl.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    sl.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Pri generiranju opisa izraza je prišlo do napake. Preverite sintakso izraza cron.";\n    };\n    sl.prototype.at = function () {\n        return "Ob";\n    };\n    sl.prototype.atSpace = function () {\n        return "Ob ";\n    };\n    sl.prototype.atX0 = function () {\n        return "ob %s";\n    };\n    sl.prototype.atX0MinutesPastTheHour = function () {\n        return "ob %s.";\n    };\n    sl.prototype.atX0SecondsPastTheMinute = function () {\n        return "ob %s.";\n    };\n    sl.prototype.betweenX0AndX1 = function () {\n        return "od %s do %s";\n    };\n    sl.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", od %s. do %s. dne v mesecu";\n    };\n    sl.prototype.commaEveryDay = function () {\n        return ", vsak dan";\n    };\n    sl.prototype.commaEveryX0Days = function () {\n        return ", vsakih %s dni";\n    };\n    sl.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", vsakih %s dni v tednu";\n    };\n    sl.prototype.commaEveryX0Months = function () {\n        return ", vsakih %s mesecev";\n    };\n    sl.prototype.commaEveryX0Years = function () {\n        return ", vsakih %s let";\n    };\n    sl.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", %s. dan v mesecu";\n    };\n    sl.prototype.commaOnlyInX0 = function () {\n        return ", samo v %s";\n    };\n    sl.prototype.commaOnlyOnX0 = function () {\n        return ", samo v %s";\n    };\n    sl.prototype.commaAndOnX0 = function () {\n        return "in naprej %s";\n    };\n    sl.prototype.commaOnThe = function () {\n        return ", ";\n    };\n    sl.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", zadnji %s v mesecu";\n    };\n    sl.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", zadnji delovni dan v mesecu";\n    };\n    sl.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dni pred koncem meseca";\n    };\n    sl.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", zadnji %s v mesecu";\n    };\n    sl.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", %s v mesecu";\n    };\n    sl.prototype.commaX0ThroughX1 = function () {\n        return ", od %s do %s";\n    };\n    sl.prototype.everyHour = function () {\n        return "vsako uro";\n    };\n    sl.prototype.everyMinute = function () {\n        return "vsako minuto";\n    };\n    sl.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Vsako minuto od %s do %s";\n    };\n    sl.prototype.everySecond = function () {\n        return "vsako sekundo";\n    };\n    sl.prototype.everyX0Hours = function () {\n        return "vsakih %s ur";\n    };\n    sl.prototype.everyX0Minutes = function () {\n        return "vsakih %s minut";\n    };\n    sl.prototype.everyX0Seconds = function () {\n        return "vsakih %s sekund";\n    };\n    sl.prototype.fifth = function () {\n        return "peti";\n    };\n    sl.prototype.first = function () {\n        return "prvi";\n    };\n    sl.prototype.firstWeekday = function () {\n        return "prvi delovni dan";\n    };\n    sl.prototype.fourth = function () {\n        return "četrti";\n    };\n    sl.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minute od %s do %s";\n    };\n    sl.prototype.second = function () {\n        return "drugi";\n    };\n    sl.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekunde od %s do %s";\n    };\n    sl.prototype.spaceAnd = function () {\n        return " in";\n    };\n    sl.prototype.spaceX0OfTheMonth = function () {\n        return " %s v mesecu";\n    };\n    sl.prototype.lastDay = function () {\n        return "zadnjič";\n    };\n    sl.prototype.third = function () {\n        return "tretji";\n    };\n    sl.prototype.weekdayNearestDayX0 = function () {\n        return "delovni dan, najbližji %s. dnevu";\n    };\n    sl.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    sl.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    sl.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    sl.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    sl.prototype.commaStartingX0 = function () {\n        return ", začenši %s";\n    };\n    sl.prototype.daysOfTheWeek = function () {\n        return ["Nedelja", "Ponedeljek", "Torek", "Sreda", "Četrtek", "Petek", "Sobota"];\n    };\n    sl.prototype.monthsOfTheYear = function () {\n        return [\n            "januar",\n            "februar",\n            "marec",\n            "april",\n            "maj",\n            "junij",\n            "julij",\n            "avgust",\n            "september",\n            "oktober",\n            "november",\n            "december",\n        ];\n    };\n    return sl;\n}());\nexports.sl = sl;\n\n\n/***/ }),\n\n/***/ 673:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.sv = void 0;\nvar sv = (function () {\n    function sv() {\n    }\n    sv.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    sv.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    sv.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    sv.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    sv.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    sv.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Ett fel inträffade vid generering av uttryckets beskrivning. Kontrollera cron-uttryckets syntax.";\n    };\n    sv.prototype.everyMinute = function () {\n        return "varje minut";\n    };\n    sv.prototype.everyHour = function () {\n        return "varje timme";\n    };\n    sv.prototype.atSpace = function () {\n        return "Kl ";\n    };\n    sv.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Varje minut mellan %s och %s";\n    };\n    sv.prototype.at = function () {\n        return "Kl";\n    };\n    sv.prototype.spaceAnd = function () {\n        return " och";\n    };\n    sv.prototype.everySecond = function () {\n        return "varje sekund";\n    };\n    sv.prototype.everyX0Seconds = function () {\n        return "varje %s sekund";\n    };\n    sv.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekunderna från %s till och med %s efter minuten";\n    };\n    sv.prototype.atX0SecondsPastTheMinute = function () {\n        return "på %s sekunder efter minuten";\n    };\n    sv.prototype.everyX0Minutes = function () {\n        return "var %s minut";\n    };\n    sv.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minuterna från %s till och med %s efter timmen";\n    };\n    sv.prototype.atX0MinutesPastTheHour = function () {\n        return "på %s minuten efter timmen";\n    };\n    sv.prototype.everyX0Hours = function () {\n        return "var %s timme";\n    };\n    sv.prototype.betweenX0AndX1 = function () {\n        return "mellan %s och %s";\n    };\n    sv.prototype.atX0 = function () {\n        return "kl %s";\n    };\n    sv.prototype.commaEveryDay = function () {\n        return ", varje dag";\n    };\n    sv.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", var %s dag i veckan";\n    };\n    sv.prototype.commaX0ThroughX1 = function () {\n        return ", %s till %s";\n    };\n    sv.prototype.first = function () {\n        return "första";\n    };\n    sv.prototype.second = function () {\n        return "andra";\n    };\n    sv.prototype.third = function () {\n        return "tredje";\n    };\n    sv.prototype.fourth = function () {\n        return "fjärde";\n    };\n    sv.prototype.fifth = function () {\n        return "femte";\n    };\n    sv.prototype.commaOnThe = function () {\n        return ", den ";\n    };\n    sv.prototype.spaceX0OfTheMonth = function () {\n        return " %sen av månaden";\n    };\n    sv.prototype.lastDay = function () {\n        return "den sista dagen";\n    };\n    sv.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", på sista %s av månaden";\n    };\n    sv.prototype.commaOnlyOnX0 = function () {\n        return ", varje %s";\n    };\n    sv.prototype.commaAndOnX0 = function () {\n        return ", och på %s";\n    };\n    sv.prototype.commaEveryX0Months = function () {\n        return ", var %s månad";\n    };\n    sv.prototype.commaOnlyInX0 = function () {\n        return ", bara på %s";\n    };\n    sv.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", på sista dagen av månaden";\n    };\n    sv.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", på sista veckodag av månaden";\n    };\n    sv.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s dagar före den sista dagen i månaden";\n    };\n    sv.prototype.firstWeekday = function () {\n        return "första veckodag";\n    };\n    sv.prototype.weekdayNearestDayX0 = function () {\n        return "veckodagen närmast dag %s";\n    };\n    sv.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", på den %s av månaden";\n    };\n    sv.prototype.commaEveryX0Days = function () {\n        return ", var %s dag";\n    };\n    sv.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", mellan dag %s och %s av månaden";\n    };\n    sv.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", på dag %s av månaden";\n    };\n    sv.prototype.commaEveryX0Years = function () {\n        return ", var %s år";\n    };\n    sv.prototype.commaStartingX0 = function () {\n        return ", startar %s";\n    };\n    sv.prototype.daysOfTheWeek = function () {\n        return ["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"];\n    };\n    sv.prototype.monthsOfTheYear = function () {\n        return [\n            "januari",\n            "februari",\n            "mars",\n            "april",\n            "maj",\n            "juni",\n            "juli",\n            "augusti",\n            "september",\n            "oktober",\n            "november",\n            "december",\n        ];\n    };\n    return sv;\n}());\nexports.sv = sv;\n\n\n/***/ }),\n\n/***/ 286:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.sw = void 0;\nvar sw = (function () {\n    function sw() {\n    }\n    sw.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    sw.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    sw.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    sw.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    sw.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    sw.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "Kuna tatizo wakati wa kutunga msemo. Angalia cron expression syntax.";\n    };\n    sw.prototype.everyMinute = function () {\n        return "kila dakika";\n    };\n    sw.prototype.everyHour = function () {\n        return "kila saa";\n    };\n    sw.prototype.atSpace = function () {\n        return "Kwa ";\n    };\n    sw.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Kila dakika kwanzia %s hadi %s";\n    };\n    sw.prototype.at = function () {\n        return "Kwa";\n    };\n    sw.prototype.spaceAnd = function () {\n        return " na";\n    };\n    sw.prototype.everySecond = function () {\n        return "kila sekunde";\n    };\n    sw.prototype.everyX0Seconds = function () {\n        return "kila sekunde %s";\n    };\n    sw.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "sekunde ya %s hadi %s baada ya dakika";\n    };\n    sw.prototype.atX0SecondsPastTheMinute = function () {\n        return "sekunde %s baada ya dakika";\n    };\n    sw.prototype.everyX0Minutes = function () {\n        return "kila dakika %s";\n    };\n    sw.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minutes %s through %s past the hour";\n    };\n    sw.prototype.atX0MinutesPastTheHour = function () {\n        return "at %s minutes past the hour";\n    };\n    sw.prototype.everyX0Hours = function () {\n        return "every %s hours";\n    };\n    sw.prototype.betweenX0AndX1 = function () {\n        return "kati ya %s na %s";\n    };\n    sw.prototype.atX0 = function () {\n        return "kwenye %s";\n    };\n    sw.prototype.commaEveryDay = function () {\n        return ", kila siku";\n    };\n    sw.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", kila siku %s ya wiki";\n    };\n    sw.prototype.commaX0ThroughX1 = function () {\n        return ", %s hadi %s";\n    };\n    sw.prototype.first = function () {\n        return "ya kwanza";\n    };\n    sw.prototype.second = function () {\n        return "ya pili";\n    };\n    sw.prototype.third = function () {\n        return "ya tatu";\n    };\n    sw.prototype.fourth = function () {\n        return "ya nne";\n    };\n    sw.prototype.fifth = function () {\n        return "ya tano";\n    };\n    sw.prototype.commaOnThe = function () {\n        return ", kwenye ";\n    };\n    sw.prototype.spaceX0OfTheMonth = function () {\n        return " siku %s ya mwezi";\n    };\n    sw.prototype.lastDay = function () {\n        return "siku ya mwisho";\n    };\n    sw.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", siku ya %s ya mwezi";\n    };\n    sw.prototype.commaOnlyOnX0 = function () {\n        return ", kwa %s tu";\n    };\n    sw.prototype.commaAndOnX0 = function () {\n        return ", na pia %s";\n    };\n    sw.prototype.commaEveryX0Months = function () {\n        return ", kila mwezi wa %s";\n    };\n    sw.prototype.commaOnlyInX0 = function () {\n        return ", kwa %s tu";\n    };\n    sw.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", siku ya mwisho wa mwezi";\n    };\n    sw.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", wikendi ya mwisho wa mwezi";\n    };\n    sw.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", siku ya %s kabla ya siku ya mwisho wa mwezi";\n    };\n    sw.prototype.firstWeekday = function () {\n        return "siku za kazi ya kwanza";\n    };\n    sw.prototype.weekdayNearestDayX0 = function () {\n        return "siku ya kazi karibu na siku ya %s";\n    };\n    sw.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", siku ya %s ya mwezi";\n    };\n    sw.prototype.commaEveryX0Days = function () {\n        return ", kila siku %s";\n    };\n    sw.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", kati ya siku %s na %s ya mwezi";\n    };\n    sw.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", siku ya %s ya mwezi";\n    };\n    sw.prototype.commaEveryX0Years = function () {\n        return ", kila miaka %s";\n    };\n    sw.prototype.commaStartingX0 = function () {\n        return ", kwanzia %s";\n    };\n    sw.prototype.daysOfTheWeek = function () {\n        return ["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"];\n    };\n    sw.prototype.monthsOfTheYear = function () {\n        return [\n            "Januari",\n            "Februari",\n            "Machi",\n            "Aprili",\n            "Mei",\n            "Juni",\n            "Julai",\n            "Agosti",\n            "Septemba",\n            "Oktoba",\n            "Novemba",\n            "Desemba",\n        ];\n    };\n    return sw;\n}());\nexports.sw = sw;\n\n\n/***/ }),\n\n/***/ 999:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.tr = void 0;\nvar tr = (function () {\n    function tr() {\n    }\n    tr.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    tr.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    tr.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    tr.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    tr.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    tr.prototype.everyMinute = function () {\n        return "her dakika";\n    };\n    tr.prototype.everyHour = function () {\n        return "her saat";\n    };\n    tr.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "İfade açıklamasını oluştururken bir hata oluştu. Cron ifadesini gözden geçirin.";\n    };\n    tr.prototype.atSpace = function () {\n        return "Saat ";\n    };\n    tr.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Saat %s ve %s arasındaki her dakika";\n    };\n    tr.prototype.at = function () {\n        return "Saat";\n    };\n    tr.prototype.spaceAnd = function () {\n        return " ve";\n    };\n    tr.prototype.everySecond = function () {\n        return "her saniye";\n    };\n    tr.prototype.everyX0Seconds = function () {\n        return "her %s saniyede bir";\n    };\n    tr.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "dakikaların %s. ve %s. saniyeleri arası";\n    };\n    tr.prototype.atX0SecondsPastTheMinute = function () {\n        return "dakikaların %s. saniyesinde";\n    };\n    tr.prototype.everyX0Minutes = function () {\n        return "her %s dakikada bir";\n    };\n    tr.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "saatlerin %s. ve %s. dakikaları arası";\n    };\n    tr.prototype.atX0MinutesPastTheHour = function () {\n        return "saatlerin %s. dakikasında";\n    };\n    tr.prototype.everyX0Hours = function () {\n        return "her %s saatte";\n    };\n    tr.prototype.betweenX0AndX1 = function () {\n        return "%s ile %s arasında";\n    };\n    tr.prototype.atX0 = function () {\n        return "saat %s";\n    };\n    tr.prototype.commaEveryDay = function () {\n        return ", her gün";\n    };\n    tr.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", ayın her %s günü";\n    };\n    tr.prototype.commaX0ThroughX1 = function () {\n        return ", %s ile %s arasında";\n    };\n    tr.prototype.first = function () {\n        return "ilk";\n    };\n    tr.prototype.second = function () {\n        return "ikinci";\n    };\n    tr.prototype.third = function () {\n        return "üçüncü";\n    };\n    tr.prototype.fourth = function () {\n        return "dördüncü";\n    };\n    tr.prototype.fifth = function () {\n        return "beşinci";\n    };\n    tr.prototype.commaOnThe = function () {\n        return ", ayın ";\n    };\n    tr.prototype.spaceX0OfTheMonth = function () {\n        return " %s günü";\n    };\n    tr.prototype.lastDay = function () {\n        return "son gün";\n    };\n    tr.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", ayın son %s günü";\n    };\n    tr.prototype.commaOnlyOnX0 = function () {\n        return ", sadece %s günü";\n    };\n    tr.prototype.commaAndOnX0 = function () {\n        return ", ve %s";\n    };\n    tr.prototype.commaEveryX0Months = function () {\n        return ", %s ayda bir";\n    };\n    tr.prototype.commaOnlyInX0 = function () {\n        return ", sadece %s için";\n    };\n    tr.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", ayın son günü";\n    };\n    tr.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", ayın son iş günü";\n    };\n    tr.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s ayın son gününden önceki günler";\n    };\n    tr.prototype.firstWeekday = function () {\n        return "ilk iş günü";\n    };\n    tr.prototype.weekdayNearestDayX0 = function () {\n        return "%s. günü sonrasındaki ilk iş günü";\n    };\n    tr.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", ayın %s";\n    };\n    tr.prototype.commaEveryX0Days = function () {\n        return ", %s günde bir";\n    };\n    tr.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", ayın %s. ve %s. günleri arası";\n    };\n    tr.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", ayın %s. günü";\n    };\n    tr.prototype.commaEveryX0Years = function () {\n        return ", %s yılda bir";\n    };\n    tr.prototype.commaStartingX0 = function () {\n        return ", başlangıç %s";\n    };\n    tr.prototype.daysOfTheWeek = function () {\n        return ["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"];\n    };\n    tr.prototype.monthsOfTheYear = function () {\n        return [\n            "Ocak",\n            "Şubat",\n            "Mart",\n            "Nisan",\n            "Mayıs",\n            "Haziran",\n            "Temmuz",\n            "Ağustos",\n            "Eylül",\n            "Ekim",\n            "Kasım",\n            "Aralık",\n        ];\n    };\n    return tr;\n}());\nexports.tr = tr;\n\n\n/***/ }),\n\n/***/ 716:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.uk = void 0;\nvar uk = (function () {\n    function uk() {\n    }\n    uk.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    uk.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    uk.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    uk.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    uk.prototype.use24HourTimeFormatByDefault = function () {\n        return true;\n    };\n    uk.prototype.everyMinute = function () {\n        return "щохвилини";\n    };\n    uk.prototype.everyHour = function () {\n        return "щогодини";\n    };\n    uk.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "ВІдбулася помилка підчас генерації опису. Перевірта правильність написання cron виразу.";\n    };\n    uk.prototype.atSpace = function () {\n        return "О ";\n    };\n    uk.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Щохвилини між %s та %s";\n    };\n    uk.prototype.at = function () {\n        return "О";\n    };\n    uk.prototype.spaceAnd = function () {\n        return " та";\n    };\n    uk.prototype.everySecond = function () {\n        return "Щосекунди";\n    };\n    uk.prototype.everyX0Seconds = function () {\n        return "кожні %s секунд";\n    };\n    uk.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "з %s по %s секунду";\n    };\n    uk.prototype.atX0SecondsPastTheMinute = function () {\n        return "о %s секунді";\n    };\n    uk.prototype.everyX0Minutes = function () {\n        return "кожні %s хвилин";\n    };\n    uk.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "з %s по %s хвилину";\n    };\n    uk.prototype.atX0MinutesPastTheHour = function () {\n        return "о %s хвилині";\n    };\n    uk.prototype.everyX0Hours = function () {\n        return "кожні %s годин";\n    };\n    uk.prototype.betweenX0AndX1 = function () {\n        return "між %s та %s";\n    };\n    uk.prototype.atX0 = function () {\n        return "о %s";\n    };\n    uk.prototype.commaEveryDay = function () {\n        return ", щоденно";\n    };\n    uk.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", кожен %s день тижня";\n    };\n    uk.prototype.commaX0ThroughX1 = function () {\n        return ", %s по %s";\n    };\n    uk.prototype.first = function () {\n        return "перший";\n    };\n    uk.prototype.second = function () {\n        return "другий";\n    };\n    uk.prototype.third = function () {\n        return "третій";\n    };\n    uk.prototype.fourth = function () {\n        return "четвертий";\n    };\n    uk.prototype.fifth = function () {\n        return "п\'ятий";\n    };\n    uk.prototype.commaOnThe = function () {\n        return ", в ";\n    };\n    uk.prototype.spaceX0OfTheMonth = function () {\n        return " %s місяця";\n    };\n    uk.prototype.lastDay = function () {\n        return "останній день";\n    };\n    uk.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", в останній %s місяця";\n    };\n    uk.prototype.commaOnlyOnX0 = function () {\n        return ", тільки в %s";\n    };\n    uk.prototype.commaAndOnX0 = function () {\n        return ", і в %s";\n    };\n    uk.prototype.commaEveryX0Months = function () {\n        return ", кожен %s місяць";\n    };\n    uk.prototype.commaOnlyInX0 = function () {\n        return ", тільки в %s";\n    };\n    uk.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", в останній день місяця";\n    };\n    uk.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", в останній будень місяця";\n    };\n    uk.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s днів до останнього дня місяця";\n    };\n    uk.prototype.firstWeekday = function () {\n        return "перший будень";\n    };\n    uk.prototype.weekdayNearestDayX0 = function () {\n        return "будень найближчий до %s дня";\n    };\n    uk.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", в %s місяця";\n    };\n    uk.prototype.commaEveryX0Days = function () {\n        return ", кожен %s день";\n    };\n    uk.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", між %s та %s днями місяця";\n    };\n    uk.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", на %s день місяця";\n    };\n    uk.prototype.commaEveryX0Years = function () {\n        return ", кожні %s роки";\n    };\n    uk.prototype.commaStartingX0 = function () {\n        return ", початок %s";\n    };\n    uk.prototype.daysOfTheWeek = function () {\n        return ["неділя", "понеділок", "вівторок", "середа", "четвер", "п\'ятниця", "субота"];\n    };\n    uk.prototype.monthsOfTheYear = function () {\n        return [\n            "січень",\n            "лютий",\n            "березень",\n            "квітень",\n            "травень",\n            "червень",\n            "липень",\n            "серпень",\n            "вересень",\n            "жовтень",\n            "листопад",\n            "грудень",\n        ];\n    };\n    return uk;\n}());\nexports.uk = uk;\n\n\n/***/ }),\n\n/***/ 419:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.zh_CN = void 0;\nvar zh_CN = (function () {\n    function zh_CN() {\n    }\n    zh_CN.prototype.setPeriodBeforeTime = function () {\n        return true;\n    };\n    zh_CN.prototype.pm = function () {\n        return "下午";\n    };\n    zh_CN.prototype.am = function () {\n        return "上午";\n    };\n    zh_CN.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    zh_CN.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    zh_CN.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    zh_CN.prototype.commaYearX0ThroughYearX1 = function () {\n        return ", 从%s年至%s年";\n    };\n    zh_CN.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    zh_CN.prototype.everyMinute = function () {\n        return "每分钟";\n    };\n    zh_CN.prototype.everyHour = function () {\n        return "每小时";\n    };\n    zh_CN.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "生成表达式描述时发生了错误，请检查cron表达式语法。";\n    };\n    zh_CN.prototype.atSpace = function () {\n        return "在";\n    };\n    zh_CN.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "在 %s 至 %s 之间的每分钟";\n    };\n    zh_CN.prototype.at = function () {\n        return "在";\n    };\n    zh_CN.prototype.spaceAnd = function () {\n        return " 和";\n    };\n    zh_CN.prototype.everySecond = function () {\n        return "每秒";\n    };\n    zh_CN.prototype.everyX0Seconds = function () {\n        return "每隔 %s 秒";\n    };\n    zh_CN.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "在每分钟的第 %s 到 %s 秒";\n    };\n    zh_CN.prototype.atX0SecondsPastTheMinute = function () {\n        return "在每分钟的第 %s 秒";\n    };\n    zh_CN.prototype.everyX0Minutes = function () {\n        return "每隔 %s 分钟";\n    };\n    zh_CN.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "在每小时的第 %s 到 %s 分钟";\n    };\n    zh_CN.prototype.atX0MinutesPastTheHour = function () {\n        return "在每小时的第 %s 分钟";\n    };\n    zh_CN.prototype.everyX0Hours = function () {\n        return "每隔 %s 小时";\n    };\n    zh_CN.prototype.betweenX0AndX1 = function () {\n        return "在 %s 和 %s 之间";\n    };\n    zh_CN.prototype.atX0 = function () {\n        return "在%s";\n    };\n    zh_CN.prototype.commaEveryDay = function () {\n        return ", 每天";\n    };\n    zh_CN.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", 每周的每 %s 天";\n    };\n    zh_CN.prototype.commaX0ThroughX1 = function () {\n        return ", %s至%s";\n    };\n    zh_CN.prototype.first = function () {\n        return "第一个";\n    };\n    zh_CN.prototype.second = function () {\n        return "第二个";\n    };\n    zh_CN.prototype.third = function () {\n        return "第三个";\n    };\n    zh_CN.prototype.fourth = function () {\n        return "第四个";\n    };\n    zh_CN.prototype.fifth = function () {\n        return "第五个";\n    };\n    zh_CN.prototype.commaOnThe = function () {\n        return ", 限每月的";\n    };\n    zh_CN.prototype.spaceX0OfTheMonth = function () {\n        return "%s";\n    };\n    zh_CN.prototype.lastDay = function () {\n        return "本月最后一天";\n    };\n    zh_CN.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", 限每月的最后一个%s";\n    };\n    zh_CN.prototype.commaOnlyOnX0 = function () {\n        return ", 仅%s";\n    };\n    zh_CN.prototype.commaAndOnX0 = function () {\n        return ", 并且为%s";\n    };\n    zh_CN.prototype.commaEveryX0Months = function () {\n        return ", 每隔 %s 个月";\n    };\n    zh_CN.prototype.commaOnlyInX0 = function () {\n        return ", 仅限%s";\n    };\n    zh_CN.prototype.commaOnlyInMonthX0 = function () {\n        return ", 仅于%s份";\n    };\n    zh_CN.prototype.commaOnlyInYearX0 = function () {\n        return ", 仅于 %s 年";\n    };\n    zh_CN.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", 限每月的最后一天";\n    };\n    zh_CN.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", 限每月的最后一个工作日";\n    };\n    zh_CN.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", 限每月最后%s天";\n    };\n    zh_CN.prototype.firstWeekday = function () {\n        return "第一个工作日";\n    };\n    zh_CN.prototype.weekdayNearestDayX0 = function () {\n        return "最接近 %s 号的工作日";\n    };\n    zh_CN.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", 限每月的%s";\n    };\n    zh_CN.prototype.commaEveryX0Days = function () {\n        return ", 每隔 %s 天";\n    };\n    zh_CN.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", 限每月的 %s 至 %s 之间";\n    };\n    zh_CN.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", 限每月%s";\n    };\n    zh_CN.prototype.commaEveryX0Years = function () {\n        return ", 每隔 %s 年";\n    };\n    zh_CN.prototype.commaStartingX0 = function () {\n        return ", %s开始";\n    };\n    zh_CN.prototype.dayX0 = function () {\n        return " %s 号";\n    };\n    zh_CN.prototype.daysOfTheWeek = function () {\n        return ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"];\n    };\n    zh_CN.prototype.monthsOfTheYear = function () {\n        return ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"];\n    };\n    return zh_CN;\n}());\nexports.zh_CN = zh_CN;\n\n\n/***/ }),\n\n/***/ 139:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.zh_TW = void 0;\nvar zh_TW = (function () {\n    function zh_TW() {\n    }\n    zh_TW.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    zh_TW.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    zh_TW.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    zh_TW.prototype.commaYearX0ThroughYearX1 = function () {\n        return ", 从%s年至%s年";\n    };\n    zh_TW.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    zh_TW.prototype.everyMinute = function () {\n        return "每分鐘";\n    };\n    zh_TW.prototype.everyHour = function () {\n        return "每小時";\n    };\n    zh_TW.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "產生正規表達式描述時發生了錯誤，請檢查 cron 表達式語法。";\n    };\n    zh_TW.prototype.atSpace = function () {\n        return "在 ";\n    };\n    zh_TW.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "在 %s 和 %s 之間的每分鐘";\n    };\n    zh_TW.prototype.at = function () {\n        return "在";\n    };\n    zh_TW.prototype.spaceAnd = function () {\n        return " 和";\n    };\n    zh_TW.prototype.everySecond = function () {\n        return "每秒";\n    };\n    zh_TW.prototype.everyX0Seconds = function () {\n        return "每 %s 秒";\n    };\n    zh_TW.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "在每分鐘的 %s 到 %s 秒";\n    };\n    zh_TW.prototype.atX0SecondsPastTheMinute = function () {\n        return "在每分鐘的 %s 秒";\n    };\n    zh_TW.prototype.everyX0Minutes = function () {\n        return "每 %s 分鐘";\n    };\n    zh_TW.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "在每小時的 %s 到 %s 分鐘";\n    };\n    zh_TW.prototype.atX0MinutesPastTheHour = function () {\n        return "在每小時的 %s 分";\n    };\n    zh_TW.prototype.everyX0Hours = function () {\n        return "每 %s 小時";\n    };\n    zh_TW.prototype.betweenX0AndX1 = function () {\n        return "在 %s 和 %s 之間";\n    };\n    zh_TW.prototype.atX0 = function () {\n        return "在 %s";\n    };\n    zh_TW.prototype.commaEveryDay = function () {\n        return ", 每天";\n    };\n    zh_TW.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", 每週的每 %s 天";\n    };\n    zh_TW.prototype.commaX0ThroughX1 = function () {\n        return ", %s 到 %s";\n    };\n    zh_TW.prototype.first = function () {\n        return "第一個";\n    };\n    zh_TW.prototype.second = function () {\n        return "第二個";\n    };\n    zh_TW.prototype.third = function () {\n        return "第三個";\n    };\n    zh_TW.prototype.fourth = function () {\n        return "第四個";\n    };\n    zh_TW.prototype.fifth = function () {\n        return "第五個";\n    };\n    zh_TW.prototype.commaOnThe = function () {\n        return ", 在每月 ";\n    };\n    zh_TW.prototype.spaceX0OfTheMonth = function () {\n        return "%s ";\n    };\n    zh_TW.prototype.lastDay = function () {\n        return "最後一天";\n    };\n    zh_TW.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", 每月的最後一個 %s ";\n    };\n    zh_TW.prototype.commaOnlyOnX0 = function () {\n        return ", 僅在 %s";\n    };\n    zh_TW.prototype.commaAndOnX0 = function () {\n        return ", 和 %s";\n    };\n    zh_TW.prototype.commaEveryX0Months = function () {\n        return ", 每 %s 月";\n    };\n    zh_TW.prototype.commaOnlyInX0 = function () {\n        return ", 僅在 %s";\n    };\n    zh_TW.prototype.commaOnlyInMonthX0 = function () {\n        return ", 僅在%s";\n    };\n    zh_TW.prototype.commaOnlyInYearX0 = function () {\n        return ", 僅在 %s 年";\n    };\n    zh_TW.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", 每月的最後一天";\n    };\n    zh_TW.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", 每月的最後一個工作日";\n    };\n    zh_TW.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s 這個月的最後一天的前幾天";\n    };\n    zh_TW.prototype.firstWeekday = function () {\n        return "第一個工作日";\n    };\n    zh_TW.prototype.weekdayNearestDayX0 = function () {\n        return "最接近 %s 號的工作日";\n    };\n    zh_TW.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", 每月的 %s ";\n    };\n    zh_TW.prototype.commaEveryX0Days = function () {\n        return ", 每 %s 天";\n    };\n    zh_TW.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", 在每月的 %s 和 %s 之間";\n    };\n    zh_TW.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", 每月的 %s";\n    };\n    zh_TW.prototype.commaEveryX0Years = function () {\n        return ", 每 %s 年";\n    };\n    zh_TW.prototype.commaStartingX0 = function () {\n        return ", %s 開始";\n    };\n    zh_TW.prototype.dayX0 = function () {\n        return " %s 號";\n    };\n    zh_TW.prototype.daysOfTheWeek = function () {\n        return ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"];\n    };\n    zh_TW.prototype.monthsOfTheYear = function () {\n        return ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"];\n    };\n    return zh_TW;\n}());\nexports.zh_TW = zh_TW;\n\n\n/***/ }),\n\n/***/ 586:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nfunction assert(value, message) {\n    if (!value) {\n        throw new Error(message);\n    }\n}\nvar RangeValidator = (function () {\n    function RangeValidator() {\n    }\n    RangeValidator.secondRange = function (parse) {\n        var parsed = parse.split(\',\');\n        for (var i = 0; i < parsed.length; i++) {\n            if (!isNaN(parseInt(parsed[i], 10))) {\n                var second = parseInt(parsed[i], 10);\n                assert(second >= 0 && second <= 59, \'seconds part must be >= 0 and <= 59\');\n            }\n        }\n    };\n    RangeValidator.minuteRange = function (parse) {\n        var parsed = parse.split(\',\');\n        for (var i = 0; i < parsed.length; i++) {\n            if (!isNaN(parseInt(parsed[i], 10))) {\n                var minute = parseInt(parsed[i], 10);\n                assert(minute >= 0 && minute <= 59, \'minutes part must be >= 0 and <= 59\');\n            }\n        }\n    };\n    RangeValidator.hourRange = function (parse) {\n        var parsed = parse.split(\',\');\n        for (var i = 0; i < parsed.length; i++) {\n            if (!isNaN(parseInt(parsed[i], 10))) {\n                var hour = parseInt(parsed[i], 10);\n                assert(hour >= 0 && hour <= 23, \'hours part must be >= 0 and <= 23\');\n            }\n        }\n    };\n    RangeValidator.dayOfMonthRange = function (parse) {\n        var parsed = parse.split(\',\');\n        for (var i = 0; i < parsed.length; i++) {\n            if (!isNaN(parseInt(parsed[i], 10))) {\n                var dayOfMonth = parseInt(parsed[i], 10);\n                assert(dayOfMonth >= 1 && dayOfMonth <= 31, \'DOM part must be >= 1 and <= 31\');\n            }\n        }\n    };\n    RangeValidator.monthRange = function (parse, monthStartIndexZero) {\n        var parsed = parse.split(\',\');\n        for (var i = 0; i < parsed.length; i++) {\n            if (!isNaN(parseInt(parsed[i], 10))) {\n                var month = parseInt(parsed[i], 10);\n                assert(month >= 1 && month <= 12, monthStartIndexZero ? \'month part must be >= 0 and <= 11\' : \'month part must be >= 1 and <= 12\');\n            }\n        }\n    };\n    RangeValidator.dayOfWeekRange = function (parse, dayOfWeekStartIndexZero) {\n        var parsed = parse.split(\',\');\n        for (var i = 0; i < parsed.length; i++) {\n            if (!isNaN(parseInt(parsed[i], 10))) {\n                var dayOfWeek = parseInt(parsed[i], 10);\n                assert(dayOfWeek >= 0 && dayOfWeek <= 6, dayOfWeekStartIndexZero ? \'DOW part must be >= 0 and <= 6\' : \'DOW part must be >= 1 and <= 7\');\n            }\n        }\n    };\n    return RangeValidator;\n}());\nexports["default"] = RangeValidator;\n\n\n/***/ }),\n\n/***/ 910:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.StringUtilities = void 0;\nvar StringUtilities = (function () {\n    function StringUtilities() {\n    }\n    StringUtilities.format = function (template) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        return template.replace(/%s/g, function (substring) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return values.shift();\n        });\n    };\n    StringUtilities.containsAny = function (text, searchStrings) {\n        return searchStrings.some(function (c) {\n            return text.indexOf(c) > -1;\n        });\n    };\n    return StringUtilities;\n}());\nexports.StringUtilities = StringUtilities;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_211520__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_211520__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\nvar exports = __webpack_exports__;\n\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.toString = void 0;\nvar expressionDescriptor_1 = __nested_webpack_require_211520__(728);\nvar allLocalesLoader_1 = __nested_webpack_require_211520__(282);\nexpressionDescriptor_1.ExpressionDescriptor.initialize(new allLocalesLoader_1.allLocalesLoader());\nexports["default"] = expressionDescriptor_1.ExpressionDescriptor;\nvar toString = expressionDescriptor_1.ExpressionDescriptor.toString;\nexports.toString = toString;\n\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n\n//# sourceURL=webpack://cron-input-ui/./node_modules/cronstrue/dist/cronstrue-i18n.js?')},"./node_modules/cronstrue/i18n.js":
/*!****************************************!*\
  !*** ./node_modules/cronstrue/i18n.js ***!
  \****************************************/(module,__unused_webpack_exports,__webpack_require__)=>{eval("// This file allows dist/cronstrue-i18n.js to be required from Node as:\n// var cronstrue = require('cronstrue/i18n');\n\nvar cronstrueWithLocales = __webpack_require__(/*! ./dist/cronstrue-i18n.js */ \"./node_modules/cronstrue/dist/cronstrue-i18n.js\");\nmodule.exports = cronstrueWithLocales;\n\n\n//# sourceURL=webpack://cron-input-ui/./node_modules/cronstrue/i18n.js?")}},__webpack_module_cache__={};function __webpack_require__(n){var e=__webpack_module_cache__[n];if(void 0!==e)return e.exports;var t=__webpack_module_cache__[n]={exports:{}};return __webpack_modules__[n].call(t.exports,t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(n,e)=>{for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},__webpack_require__.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js");return __webpack_exports__})()));