var inputLang;(()=>{"use strict";var e={d:(n,o)=>{for(var r in o)e.o(o,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:o[r]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};(()=>{e.r(n),e.d(n,{default:()=>o});const o={code:"en",frequencyChoice:"Frequency",every:"Every / At",start:"Starting",rangeChoice:"Range",min:"Min",max:"Max",choice:"Choice",minutes:"Minutes",hours:"Hours",daysOfMonth:"Days of Month",month:"Month",daysOfWeek:"Days of week",invalidCron:"Cron expression is invalid, try with (* * * * *)",missingCron:"Cron expression is missing, this field is required",inputPlaceholder:"Cron expression"}})(),inputLang=n})();